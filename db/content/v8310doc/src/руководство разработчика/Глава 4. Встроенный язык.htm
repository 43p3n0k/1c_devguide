<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=Windows-1251">
		<title>&#1043;&#1083;&#1072;&#1074;&#1072; 4. &#1042;&#1089;&#1090;&#1088;&#1086;&#1077;&#1085;&#1085;&#1099;&#1081; &#1103;&#1079;&#1099;&#1082;</title>
		<LINK REL="stylesheet" href="style.css?_=1496848987">
		<SCRIPT src="script.js?_=1496848987" TYPE="text/javascript"></script>		<!--[if !IE]>--><SCRIPT src="zeroclipboard.js?_=1496848987" TYPE="text/javascript"></script><!--<![endif]-->
	<meta name="robots" content="noarchive">
<meta name="googlebot" content="noarchive">
<link href="/db/content/v8310doc/src/руководство разработчика/глава 4. встроенный язык.htm" rel="canonical">
<link href="/static/its.content.css?_=1490872753" type="text/css" rel="stylesheet">
<script type="text/javascript" src="/static/its.content.js?_=1489758009"></script>
<!--[if lt IE 9]><script type="text/javascript" src="/static/html5shiv.js?_=1484636606"></script><![endif]-->

</head>
	<body class="v8310doc">
<a name="_ref237783359"></a><a id="TI000000116" class="bookmark"><h1>Глава 4.  Встроенный язык</h1></a>

<p class="MsoNormal">«1С:Предприятие» является гибкой настраиваемой системой, с помощью
которой можно решать широкий круг задач в сфере автоматизации деятельности
предприятий. Специфические алгоритмы конфигурации описываются в конфигураторе
системы «1С:Предприятие», в программных модулях, содержащих тексты на
встроенном языке системы «1С:Предприятие».</p>

<a id="TI000000117" class="bookmark" name="issogl1_4.1_назначение_и_краткая_характеристика_встроенного_языка"><h2>4.1. Назначение и краткая характеристика встроенного языка</h2></a>

<p class="MsoNormalCxSpFirst">Встроенный
язык системы «1С:Предприятие» предназначен для описания (на стадии разработки
конфигурации) алгоритмов функционирования прикладной задачи.</p>

<p class="MsoNormalCxSpMiddle">Встроенный
язык (далее по тексту – язык) представляет собой предметно-ориентированный
язык программирования, специально разработанный с учетом возможности его применения
не только профессиональными программистами. В частности, все операторы языка
имеют как русское, так и англоязычное написание, которое можно использовать
одновременно в одном исходном тексте. Основной язык, описываемый в данной
книге, – русский, однако для каждого оператора языка приводится его
англоязычный синоним.</p>

<p class="MsoNormalCxSpMiddle">При
своей относительной простоте язык обладает некоторыми объектно-ориентированными
возможностями, например, правила доступа к свойствам и методам
специализированных типов данных (документам, справочникам и т. п.)
подобны свойствам и методам объектов, используемых в других
объектно-ориентированных языках. Однако специализированные типы данных не могут
определяться средствами самого языка, а задаются в визуальном режиме.</p>

<p class="MsoNormalCxSpLast">Типизация
переменных в языке не жесткая, т. е. тип переменной определяется ее
значением. Переменные не обязательно объявлять в явном виде. Неявным
определением переменной является ее первое упоминание в левой части оператора
присваивания. Возможно также явное объявление переменных при помощи
соответствующего оператора. Допускается применение массивов, структур, соответствий
и других универсальных коллекций значений.</p>

<a id="TI000000118" class="bookmark" name="issogl1_4.2_формат_исходных_текстов_программных_модулей"><h2>4.2. Формат исходных текстов программных модулей</h2></a>

<a id="TI000000119" class="bookmark" name="issogl2_4.2.1_что_такое_программный_модуль"><h3>4.2.1. Что такое программный модуль</h3></a>

<p class="MsoNormalCxSpFirst">Программные
модули в конфигурации системы «1С:Предприятие» не являются самостоятельными
программами в общепринятом понимании этого слова, поскольку они являются только
частью всей конфигурации. Программный модуль – это текст на встроенном
языке, в котором размещены тексты процедур и функций с необходимыми
алгоритмами, вызываемые системой в определенные моменты работы. Поэтому
программный модуль не имеет формальных границ своего описания типа: «Начало
модуля» – «Конец модуля».</p>

<p class="MsoNormalCxSpMiddle">Место
размещения конкретного программного модуля предоставляется конфигуратором в тех
точках конфигурации, которые требуют описания специфических алгоритмов функционирования.
Эти алгоритмы следует оформлять в виде процедур или функций, которые будут
вызваны самой системой в заранее предусмотренных ситуациях (например, при
нажатии кнопки в диалоговом окне).</p>

<p class="MsoNormalCxSpLast">Каждый
отдельный программный модуль воспринимается системой как единое целое, поэтому
все процедуры и функции программного модуля выполняются в едином контексте.</p>

<a id="TI000000120" class="bookmark" name="issogl2_4.2.2_контекст_выполнения_программного_модуля"><h3>4.2.2. Контекст выполнения программного модуля</h3></a>

<p class="MsoNormalCxSpFirst">Каждый
программный модуль связан с остальной частью конфигурации. Эта связь называется
<span class="Bold">контекстом</span> выполнения модуля.</p>

<p class="MsoNormalCxSpLast">Следует
различать два вида контекста:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
глобальный контекст,</p>

<p class="MsoListBulletCxSpLast">&#9679; 
локальный контекст выполнения конкретного
модуля.</p>

<a id="TI000000121" class="bookmark" name="issogl3_4.2.2.1_глобальный_контекст"><h4>4.2.2.1. Глобальный контекст</h4></a>

<p class="MsoNormal">Глобальный
контекст образуется:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
значениями свойств и методов глобального
контекста;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
системными перечислениями и системными наборами
значений (например, <span class="Term">КодВозвратаДиалога</span> и <span class="Term">Символы</span>).</p>

<p class="MsoNormal">Глобальный
контекст виден всем программным модулям и определяет общую языковую среду
конфигурации.</p>

<a id="TI000000122" class="bookmark" name="issogl3_4.2.2.2_локальный_контекст"><h4>4.2.2.2. Локальный контекст</h4></a>

<p class="MsoNormal">Локальный
контекст модуля образуется тем конкретным местом конфигурации задачи, для
которого использован программный модуль. Локальный контекст виден только конкретному
программному модулю и определяет для модуля набор непосредственно доступных
модулю объектов, их свойств и методов.</p>

<a name="_ref225834609"></a><a id="TI000000123" class="bookmark" name="issogl2_4.2.3_виды_программных_модулей"><h3>4.2.3. Виды программных модулей</h3></a>

<p class="MsoNormal">В
системе «1С:Предприятие» существуют несколько видов программных модулей. Они
различаются по месту размещения и доступному контексту.</p>

<a name="_ref359945716"></a><a id="TI000000124" class="bookmark" name="issogl3_4.2.3.1_модуль_управляемого_приложения"><h4>4.2.3.1. Модуль управляемого приложения</h4></a>

<p class="MsoNormal">Модулем управляемого приложения называется
модуль, который автоматически выполняется в момент загрузки конфигурации, при
старте системы «1С:Предприятие» в следующих режимах:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
тонкого клиента,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
веб-клиента,</p>

<p class="MsoListBulletCxSpLast">&#9679; 
толстого клиента в режиме управляемого
приложения.</p>

<p class="MsoNormalCxSpFirst">Модуль управляемого приложения предназначен
для отработки действий, связанных с сеансом работы конечного пользователя
(прежде всего обработки начала и окончания сеанса работы). Модуль управляемого
приложения недоступен для процедур, работающих на сервере. В нем рекомендуется
реализовывать только обработчики соответствующих событий. Следует помнить, что необработанное исключение в каком-либо
обработчике события модуля управляемого приложения (<span class="Term">ПередНачаломРаботыСистемы()</span>, <span class="Term">ПриНачалеРаботыСистемы()</span>, <span class="Term">ПередЗавершениемРаботыСистемы()</span>, <span class="Term">ПриЗавершенииРаботыСистемы()</span>) приведет к
аварийному завершению работы всей системы.</p>

<p class="MsoNormalCxSpLast">Например, в следующем примере аварийного
завершения не произойдет:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">Процедура</span> ПриНачалеРаботыСистемы<span class="operator">(</span><span class="operator">)</span>
    <span class="keyword">Попытка</span>
        а<span class="operator">=</span>1<span class="operator">/</span><span class="number">0</span><span class="operator">;</span>
    <span class="keyword">Исключение</span>
        Сообщить<span class="operator">(</span><span class="string">&quot;Деление на 0&quot;</span><span class="operator">)</span><span class="operator">;</span>
    <span class="keyword">КонецПопытки</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span></pre>

<p class="MsoNormal">В тоже время следующий пример приведет к
аварийному завершению:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">Процедура</span> ПриНачалеРаботыСистемы<span class="operator">(</span><span class="operator">)</span>
    а<span class="operator">=</span>1<span class="operator">/</span><span class="number">0</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span></pre>

<p class="MsoNormal">Процедуры и функции модуля управляемого
приложения, а также переменные, для которых в заголовке указано ключевое слово <span class="Term">Экспорт</span>,
являются доступными:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
в неглобальных клиентских общих модулях,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
клиентских процедурах и функциях модуля команды,</p>

<p class="MsoListBulletCxSpLast">&#9679; 
клиентских процедурах и функциях модуля
управляемой формы.</p>

<p class="MsoNormal">В контексте модуля управляемого приложения
доступны:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
часть глобального контекста, которая может
исполняться в управляемом приложении;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
экспортируемые процедуры и функции любых
клиентских общих модулей;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
экспортируемые процедуры и функции серверных
неглобальных общих модулей, у которых установлено свойство <span class="Interface">Вызов сервера</span>.</p>

<a name="_ref359945882"></a><a id="TI000000125" class="bookmark" name="issogl3_4.2.3.2_модуль_внешнего_соединения"><h4>4.2.3.2. Модуль внешнего соединения</h4></a>

<p class="MsoNormalCxSpFirst">Модуль
внешнего соединения расположен, как и модуль приложения, в корневом разделе
конфигурации. В нем располагаются процедуры-обработчики событий, которые
инициализируются при старте и окончании работы системы в режиме внешнего соединения
(СОМ-соединения).</p>

<p class="MsoNormalCxSpMiddle">В
модуле внешнего соединения возможно объявление переменных, а также объявление и
описание процедур и функций, которые будут доступны для внешнего приложения.</p>

<p class="MsoNormalCxSpLast">Объекты
«1С:Предприятия», доступные извне через COM-соединение:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
экспортируемые процедуры/функции модуля внешнего
соединения;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
экспортируемые процедуры/функции общих модулей:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
включение и исключение модулей целиком выполняются
с помощью установки свойств общих модулей;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
включение и исключение фрагментов общих модулей выполняются
с помощью инструкций препроцессора;</p>

<p class="MsoListBullet">&#9679; 
глобальный контекст «1С:Предприятия».</p>

<p class="MsoNormal">Модуль
присутствует только в сессии внешнего соединения. В данном режиме характерно
полное отсутствие пользовательского интерфейса.</p>

<a name="_ref359945994"></a><a name="_ref419722284"></a><a id="TI000000126" class="bookmark" name="issogl3_4.2.3.3_модуль_сеанса"><h4>4.2.3.3. Модуль сеанса</h4></a>

<p class="MsoNormalCxSpFirst">Модулем сеанса называется модуль, который
автоматически выполняется при старте системы «1С:Предприятие» в момент загрузки
конфигурации.</p>

<p class="MsoNormalCxSpMiddle">Модуль сеанса предназначен для инициализации
параметров сеанса и отработки действий, связанных с сеансом работы. Этот общий
модуль всегда исполняется в привилегированном режиме сервера «1С:Предприятия». Установка
параметров сеанса выполняется в обработчике события <span class="Term">УстановкаПараметровСеанса</span>.</p>

<p class="MsoNormalCxSpMiddle">Модуль сеанса может содержать только
определения процедур и функций, может использовать процедуры из общих модулей
конфигурации и не содержит экспортируемых процедур и функций.</p>

<p class="MsoNormalCxSpMiddle">Вызов обработчика <span class="Term">УстановкаПараметровСеанса()</span>
производится до вызова обработчика события <span class="Term">ПередНачаломРаботыСистемы()</span>
(<span class="Term">ПриНачалеРаботыСистемы()</span>
в случае модуля внешнего соединения).</p>

<p class="MsoNormalCxSpLast">При выполнении обработчика события <span class="Term">УстановкаПараметровСеанса</span>
может возникнуть необходимость определить, какой сеанс стартует: фонового
задания или какой-либо другой. Это может потребоваться в том случае, если для
объем инициализируемых данных существенно различается, например, для фонового
задания. Определить тип сеанса можно с помощью методов <span class="Term">ПолучитьТекущийСеансИнформационнойБазы()</span>
и <span class="Term">ПолучитьФоновоеЗадание()</span>.
Первый метод возвращает описание текущего сеанса – объект <span class="Term">СеансИнформационнойБазы</span>.
Вызов метода <span class="Term">ПолучитьФоновоеЗадание()</span>
у полученного объекта позволит однозначно понять, стартует сеанс фонового
задания или какой-либо другой сеанс.</p>

<a id="TI000000127" class="bookmark" name="issogl3_4.2.3.4_общие_модули"><h4>4.2.3.4. Общие модули</h4></a>

<p class="MsoNormalCxSpFirst">Общие
модули располагаются в отдельной ветке дерева метаданных. Основным назначением
общих модулей является содержание общих алгоритмов конфигурации, доступных из
разных модулей. В общих модулях отсутствует раздел определения переменных и раздел
основной программы, то есть они содержат только раздел процедур и функций (см.
раздел «Структура программного модуля»).</p>

<p class="MsoNormalCxSpMiddle">В
любом общем модуле возможно объявление и описание процедур и функций, которые
будут доступны в любом модуле конфигурации.</p>

<p class="MsoNormalCxSpLast">Подробнее
про общие модули см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 5. объекты конфигурации.htm?_=1496848987#_ref9665031">здесь</a>.</p>

<a id="TI000000128" class="bookmark" name="issogl3_4.2.3.5_модули_прикладных_объектов"><h4>4.2.3.5. Модули прикладных объектов</h4></a>

<p class="MsoNormal">Набор
прикладных объектов имеет собственные модули. К таким объектам относятся:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Менеджеры значения константы,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Справочники,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Документы,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Отчеты,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Обработки,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Планы видов характеристик,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Планы счетов,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Планы видов расчетов,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Планы обмена,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Бизнес-процессы,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Задачи,</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Регистры.</p>

<p class="MsoNormalCxSpFirst">Модули
располагаются в ветках конфигурации, в которых содержатся сами объекты, и
являются свойствами объектов. Каждый объект имеет свой индивидуальный модуль. В
этих модулях возможно объявление переменных, процедур и функций, которые будут
доступны при работе с объектом извне во встроенном языке, дополняя контекст
объекта.</p>

<p class="MsoNormalCxSpLast">В
контексте модуля прикладного объекта имеется доступ к реквизитам и табличным
частям объекта, а также его методам и событиям.</p>

<a id="TI000000129" class="bookmark" name="issogl3_4.2.3.6_модули_менеджеров_объектов"><h4>4.2.3.6. Модули менеджеров объектов</h4></a>

<p class="MsoNormalCxSpFirst">Каждый прикладной объект имеет менеджер,
предназначенный для управления этим объектом как объектом конфигурации. С помощью
менеджера можно создавать объекты, работать с формами и макетами. Модуль
менеджера позволяет расширить функциональность менеджеров за счет введения
процедур и функций на встроенном языке. Фактически это позволяет описать методы
для объекта конфигурации (например, справочника), которые относятся не к
конкретному экземпляру объекта базы данных, а к самому объекту конфигурации.</p>

<p class="MsoNormalCxSpLast">Контекст модуля менеджера образуется:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
свойствами и методами глобального контекста;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
экспортируемыми процедурами и функциями глобальных
общих модулей (если эти модули компилируются на сервере);</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
экспортируемыми процедурами и функциями неглобальных
общих модулей (если эти модули компилируются на сервере);</p>

<p class="MsoListBulletCxSpLast">&#9679; 
локальным контекстом самого модуля.</p>

<p class="MsoNormalCxSpFirst">Модуль менеджера не может иметь переменных и
тела модуля.</p>

<p class="MsoNormalCxSpMiddle">Если функции или процедуры модуля менеджера
объявлены как экспортируемые, к ним можно будет получить доступ через менеджер
объекта.</p>

<p class="MsoNormalCxSpLast">Например, опишем функцию в модуле менеджера
справочника <span class="Term">Контрагенты</span>:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">Функция</span> ПолучитьСписокДебиторов<span class="operator">(</span><span class="operator">)</span> <span class="keyword">Экспорт</span>
 …
<span class="keyword">КонецФункции</span></pre>

<p class="MsoNormal">Тогда вызов этой функции из прикладного кода
будет выглядеть следующим образом:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">Дебиторы <span class="operator">=</span> Справочники<span class="operator">.</span>Контрагенты<span class="operator">.</span>ПолучитьСписокДебиторов<span class="operator">(</span><span class="operator">)</span><span class="operator">;</span></pre>

<a id="TI000000130" class="bookmark" name="issogl3_4.2.3.7_модули_форм"><h4>4.2.3.7. Модули форм</h4></a>

<p class="MsoNormalCxSpFirst">Эти
модули содержатся в формах конфигурации (см. <a href="#_ref216266201">здесь</a>). Каждая форма имеет свой индивидуальный модуль. В
этих модулях возможно объявление переменных, процедур и функций, которые будут
доступны при работе с формой извне во встроенном языке, дополняя контекст формы.</p>

<p class="MsoNormalCxSpLast">Контекст
формы будет образован:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
локальным контекстом самого модуля формы, реквизитами
формы, которой «принадлежит» модуль;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
свойствами и методами объекта <span class="Term">УправляемаяФорма</span> встроенного языка;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
свойствами и методами расширения формы,
определяемого типом того объекта, данные которого содержатся в основном
реквизите формы;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
глобальным контекстом, в том числе неглобальными
общими модулями и экспортируемыми функциями и процедурами глобальных общих
модулей, при этом нужно обеспечивать согласованность того, как описана
процедура в модуле формы (<span class="Term">&amp;НаКлиенте</span>, <span class="Term">&amp;НаСервере</span> и т. д.), и того,
какие свойства установлены у общего модуля (<span class="Interface">Клиент (управляемое
приложение)</span>, <span class="Interface">Сервер</span> и т. д.);</p>

<p class="MsoListBulletCxSpLast">&#9679; 
экспортируемыми переменными, процедурами и
функциями модуля управляемого приложения.</p>

<a id="TI000000131" class="bookmark" name="issogl3_4.2.3.8_модули_команд"><h4>4.2.3.8. Модули команд</h4></a>

<p class="MsoNormalCxSpFirst">Модуль
команды предназначен для того, чтобы описать в нем на встроенном языке те
действия, которые должна выполнить система при вызове команды. Модуль команды может содержать только
описание процедур и функций. Модуль команды не может иметь переменных и
тела модуля.</p>

<p class="MsoNormalCxSpMiddle">Обработчик <span class="Term">ОбработкаКоманды()</span> обязательно должен предваряться инструкцией препроцессора <span class="Term">&amp;НаКлиенте</span>, т. к. именно там начинается
исполнение команды.</p>

<p class="MsoNormalCxSpLast">Контекст
клиентских процедур модуля команды образуется:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
глобальным контекстом, в том числе неглобальными
общими модулями и экспортируемыми функциями и процедурами глобальных общих
модулей, при этом нужно обеспечивать согласованность того, как описана
процедура в модуле формы (<span class="Term">&amp;НаКлиенте</span>,
<span class="Term">&amp;НаСервере</span>
и т. д.), и того, какие свойства установлены у общего модуля (<span class="Interface">Клиент (управляемое приложение)</span>, <span class="Interface">Сервер</span> и т. д.);</p>

<p class="MsoListBulletCxSpLast">&#9679; 
локальным
контекстом самого модуля команды.</p>

<p class="MsoNormal">Контекст серверных процедур модуля команды
образуется:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
свойствами
и методами глобального контекста;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
экспортируемыми процедурами и функциями глобальных
общих модулей, если эти модули компилируются на сервере;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
неглобальными
общими модулями, если эти модули компилируются на сервере; доступны экспортируемые
методы таких модулей;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
серверными
методами модуля команды.</p>

<p class="MsoNormal">В
модуле команды можно описывать методы с ключевым словом <span class="Term">Экспорт</span>. Однако как-либо использовать их за
пределами этого модуля нельзя. Из встроенного языка невозможно получить доступ
к командам и, следовательно, к их контексту тоже.</p>

<a id="TI000000132" class="bookmark" name="issogl2_4.2.4_формат_программного_модуля"><h3>4.2.4. Формат программного модуля</h3></a>

<p class="MsoNormal">Структуру
программного модуля можно подразделить на следующие разделы:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
раздел определения переменных,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
раздел процедур и функций,</p>

<p class="MsoListBulletCxSpLast">&#9679; 
раздел основной программы.</p>

<p class="MsoNormalCxSpFirst">В
конкретном программном модуле любой из разделов может отсутствовать.</p>

<p class="MsoNormalCxSpMiddle">Раздел
определения переменных размещается от начала текста модуля до первого оператора
<span class="Term">Процедура</span>, или оператора <span class="Term">Функция</span>, или любого исполняемого оператора. В
этом разделе могут находиться только операторы объявления переменных <span class="Term">Перем</span>.</p>

<p class="MsoNormalCxSpMiddle">Раздел
процедур и функций размещается от первого оператора <span class="Term">Процедура</span> или оператора <span class="Term">Функция</span> до любого исполняемого оператора вне
тела описания процедур или функций.</p>

<p class="MsoNormalCxSpMiddle">Раздел
основной программы размещается от первого исполняемого оператора вне тела последней
процедуры или функции до конца модуля. В этом разделе могут находиться только исполняемые
операторы. Раздел основной программы исполняется в момент инициализации модуля.
Обычно в разделе основной программы имеет смысл размещать операторы
инициализации переменных какими-либо конкретными значениями, которые необходимо
провести до первого вызова любой из процедур или функций модуля.</p>

<p class="MsoNormalCxSpLast">Исходный
текст программного модуля может состоять из операторов и комментариев.</p>

<a name="_ref391395254"></a><a id="TI000000133" class="bookmark" name="issogl3_4.2.4.1_комментарии"><h4>4.2.4.1. Комментарии</h4></a>

<p class="MsoNormal">Комментарий
используется для размещения в исходном тексте программного модуля всякого рода
пояснений к работе модуля. Хорошим тоном программирования считается, когда исходный
текст содержит исчерпывающий комментарий с описанием алгоритма. В режиме
исполнения программы комментарии пропускаются. В тексте программного модуля
комментарий начинается парой символов «<span class="Interface">//</span>» и
заканчивается концом строки. Это значит, что комментарий можно начинать с
начала строки или записывать его после оператора на той же строке. После начала
комментария нельзя писать оператор на той же строке, необходимо закончить комментарий
концом строки.</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">А<span class="operator">=</span>В<span class="operator">;</span> <span class="comment">// Это – комментарий</span>
<span class="comment">// Это тоже комментарий</span></pre>

<p class="MsoNormal">Комментарий,
предшествующий процедуре или функции, может использоваться контекстной
подсказкой конфигуратора. Формат такого комментария и схема работы см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 27. инструменты разработки.htm?_=1496848987#_ref371695051">здесь</a>.</p>

<a id="TI000000134" class="bookmark" name="issogl3_4.2.4.2_формат_операторов"><h4>4.2.4.2. Формат операторов</h4></a>

<p class="MsoNormalCxSpFirst">Операторы
имеют вид стандартного обращения к процедуре, за исключением оператора
присваивания (<span class="Term">А = В;</span>) и синтаксических конструкций
встроенного языка (например, таких как <span class="Term">Для</span>, <span class="Term">Пока</span>, <span class="Term">Если</span>). Между собой операторы обязательно
следует разделять символом точка с запятой. Конец строки не является признаком
конца оператора, т. е. операторы могут свободно переходить через
строки и продолжаться на другой строке. Можно располагать произвольное число
операторов в одной строке, разделяя их символом точка с запятой.</p>

<p class="MsoNormalCxSpMiddle">Операторы
языка в программном модуле можно подразделить на две категории: операторы
объявления переменных и исполняемые операторы.</p>

<p class="MsoNormalCxSpMiddle">Операторы
объявления переменных создают имена переменных, которыми манипулируют
исполняемые операторы.</p>

<p class="MsoNormalCxSpMiddle">Любой
исполняемый оператор может иметь метку, используемую в качестве точки перехода
в операторе <span class="Term">Перейти</span>.</p>

<p class="MsoNormalCxSpLast">В
общем случае формат оператора языка следующий:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">~метка:Оператор<span class="operator">[</span><span class="operator">(</span>параметры<span class="operator">)</span><span class="operator">]</span> <span class="operator">[</span>ДобКлючевоеСлово<span class="operator">]</span><span class="operator">;</span></pre>

<p class="MsoNormal">В
качестве меток используются специальные идентификаторы, начинающиеся с символа
тильда и состоящие из последовательности букв, цифр и символов подчеркивание.
Чтобы пометить оператор, нужно поместить перед ним метку и следующий за ней
символ двоеточие.</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">~метка:А<span class="operator">=</span>В<span class="operator">;</span></pre>

<a name="_ref216101998"></a><a name="_ref214182136"></a><a id="TI000000135" class="bookmark" name="issogl3_4.2.4.3_имена_переменных_процедур_и_функций"><h4>4.2.4.3. Имена переменных, процедур и функций</h4></a>

<p class="MsoNormal">Именем
переменной, объявленной процедуры или функции может быть любая
последовательность букв, цифр и знаков подчеркивания, начинающаяся с буквы или
знака подчеркивания. Вновь создаваемые имена не должны совпадать с зарезервированными
словами языка или именами свойств, непосредственно доступных в текущем
контексте. Распознавание имен переменных, процедур и функций ведется без учета
регистра букв.</p>

<a id="TI000000136" class="bookmark" name="issogl3_4.2.4.4_язык_написания_программных_модулей"><h4>4.2.4.4. Язык написания программных модулей</h4></a>

<p class="MsoNormal">Встроенный
язык системы «1С:Предприятие» является двуязычным. Почти все зарезервированные
слова, имена типов значений, свойств, методов, событий имеют два имени: русское
и английское. Исключение составляют слова, не имеющие аналогов в русском языке.
В тексте программных модулей эти имена можно свободно смешивать, используя то
русские, то английские имена без каких-либо ограничений.</p>

<a id="TI000000137" class="bookmark" name="issogl3_4.2.4.5_регистры_букв_при_написании_программных_модулей"><h4>4.2.4.5. Регистры букв при написании программных модулей</h4></a>

<p class="MsoNormal">Регистр
букв (строчные или заглавные) при написании имен переменных, свойств, методов,
процедур, функций, а также функций встроенного языка не имеет значения.</p>

<a id="TI000000138" class="bookmark" name="issogl3_4.2.4.6_зарезервированные_слова"><h4>4.2.4.6. Зарезервированные слова</h4></a>

<p class="Regularbeforetable">Приведенные
далее ключевые слова являются зарезервированными и не могут использоваться в
качестве создаваемых имен переменных, реквизитов объектов конфигурации и объявляемых
процедур и функций. В данном варианте языка каждое из ключевых слов имеет два
представления – русское и английское.</p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0">
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpFirst"><b>Русское имя</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Английское имя</b></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Если</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">If</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Тогда</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Then</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">ИначеЕсли</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">ElsIf</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Иначе</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Else</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">КонецЕсли</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">EndIf</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Для</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">For</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Каждого</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Each</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Из</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">In</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">По</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">To</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Пока</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">While</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Цикл</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Do</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">КонецЦикла</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">EndDo</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Процедура</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Procedure</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Функция</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Function</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">КонецПроцедуры</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">EndProcedure</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">КонецФункции</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">EndFunction</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Перем</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Var</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Перейти</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Goto</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Возврат</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Return</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Продолжить</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Continue</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Прервать</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Break</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">И</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">And</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Или</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Or</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Не</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Not</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Попытка</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Try</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Исключение</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Except</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">ВызватьИсключение</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Raise</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">КонецПопытки</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">EndTry</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Новый</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">New</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Выполнить</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Execute</span></p>
  </td>
  
 </tr>
</table>

<p class="Note">Примечание. Регистр букв (строчные или заглавные) при
написании не имеет значения.</p>

<a id="TI000000139" class="bookmark" name="issogl2_4.2.5_специальные_символы_используемые_в_исходном_тексте"><h3>4.2.5. Специальные символы, используемые в исходном тексте</h3></a>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0">
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpFirst"><b>Сим­вол</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Описание</b></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">//</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Двумя
  знаками косая черта начинается комментарий. Комментарием считается весь текст
  от символа
  до конца текущей строки</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">|</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Используется
  только в строковых константах в начале строки и
  означает, что данная строка является продолжением предыдущей (перенос строки)</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">~</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Начало метки
  оператора</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">:</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Окончание
  метки
  оператора</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">;</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Символ
  разделения операторов</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">(
  )</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">В круглые скобки заключается список
  параметров методов, процедур, функций и конструкторов.</p>
  <p class="MsoNormalCxSpMiddle">Также они используются в выражениях
  встроенного языка</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">[
  ]</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">С
  помощью оператора квадратные скобки производится обращение к свойствам
  объекта по строковому представлению имени свойства.</p>
  <p class="MsoNormalCxSpMiddle">Также
  возможно обращение к элементам коллекций по индексу или другому параметру</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">,</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Разделяет
  параметры в списке параметров методов, процедур, функций и конструкторов</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">&quot;
  &quot;</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Обрамляет строковые литералы</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">'
  '</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Обрамляет
  литералы даты</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">.</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Десятичная точка в числовых литералах.</p>
  <p class="MsoNormalCxSpMiddle">Разделитель, используемый для обращения к
  свойствам и методам объектов встроенного языка</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Операция сложения.</p>
  <p class="MsoNormalCxSpMiddle">Операция конкатенации строк</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">-</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Операция
  вычитания</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">*</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Операция
  умножения</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">/</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Операция
  деления</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">%</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Получение
  остатка от деления. Допускается использование дробных значений делимого и
  делителя</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">&gt; </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Логическая
  операция
  <span class="Interface">Больше</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">&gt;=</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Логическая
  операция
  <span class="Interface">Больше или равно</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">&lt; </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Логическая
  операция
  <span class="Interface">Меньше</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">&lt;=</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Логическая
  операция <span class="Interface">Меньше или равно</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">=</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Операция присваивания.</p>
  <p class="MsoNormalCxSpMiddle">Логическая операция <span class="Interface">Равно</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">&lt;&gt; </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Логическая
  операция
  <span class="Interface">Не равно</span></p>
  </td>
  
 </tr>
</table>

<a name="_ref362360169"></a><a name="_ref362360168"></a><a name="_ref452121217"></a><a name="_ref452121216"></a><a id="TI000000140" class="bookmark" name="issogl1_4.3_примитивные_типы_данных"><h2>4.3. Примитивные типы данных</h2></a>

<p class="MsoNormal">Во встроенном языке системы «1С:Предприятие»
поддерживается набор примитивных типов данных. Для большинства примитивных
типов данных предусмотрена возможность использования в тексте модуля литералов,
то есть указание значения соответствующего типа непосредственно в модуле.</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="comment">// Пример использования литерала типа Строка</span>
А <span class="operator">=</span> <span class="string">&quot;Моя строка&quot;</span><span class="operator">;</span>
<span class="comment">// Пример использования литерала типа Булево</span>
Б <span class="operator">=</span> <span class="keyword">Истина</span><span class="operator">;</span>
<span class="comment">// Пример использования литерала типа Число</span>
В <span class="operator">=</span> <span class="number">12345</span><span class="number">.</span><span class="number">6789</span><span class="operator">;</span></pre>

<p class="Lang">NULL</p>

<p class="Lang-subheader">Описание:</p>

<p class="MsoNormal">Значения
данного типа используются исключительно для определения отсутствующего значения
при работе с базой данных, например, при соединении таблиц.</p>

<p class="Lang-subheader">Литералы:</p>

<p class="MsoNormal"><span class="Term">NULL</span></p>

<p class="Lang">Булево (Boolean)</p>

<p class="Lang-subheader">Описание:</p>

<p class="MsoNormal">Значения данного типа имеют два значения –
<span class="Term">Истина</span>
и <span class="Term">Ложь</span>,
задаваемых соответствующими литералами. Значения данного типа возвращаются в
качестве результата вычисления логических выражений.</p>

<p class="Lang-subheader">Примечание:</p>

<p class="MsoNormal">В операциях сравнения встроенного языка
используются логические выражения. Это означает, что в выражении сравнения не
обязательно писать так:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">Если</span> МояПеременная <span class="operator">=</span> <span class="keyword">Истина</span> <span class="keyword">Тогда</span>
<span class="keyword">КонецЕсли</span><span class="operator">;</span></pre>

<p class="MsoNormal">Достаточно написать так:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">Если</span> МояПеременная <span class="keyword">Тогда</span>
<span class="keyword">КонецЕсли</span><span class="operator">;</span></pre>

<p class="Lang-subheader">Литералы:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Term">Истина</span> (<span class="Term">True</span>),</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Term">Ложь</span> (<span class="Term">False</span>).</p>

<p class="Lang">Дата (Date)</p>

<p class="Lang-subheader">Описание:</p>

<p class="MsoNormal">Значения данного типа содержат дату от
Рождества Христова (с 01 января 0001 года) и время с точностью до секунды.</p>

<p class="Lang-subheader">Литералы:</p>

<p class="MsoNormal">Строка цифр, заключенная в одинарные кавычки
вида <span class="Term">‘ГГГГММДДччммсс’</span>,
где:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Term">ГГГГ</span> – четыре цифры года (включая
тысячелетие и век);</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">ММ</span> – две цифры месяца;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">ДД</span> – две цифры даты;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">чч</span> – две цифры часа (в 24-часовом
формате);</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">мм</span> – две цифры минут;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Term">сс</span> – две цифры секунд.</p>

<p class="MsoNormalCxSpFirst">Во встроенном языке в литерале типа <span class="Term">Дата</span>
обязательно должно задаваться значение года, месяца и дня. Для задания даты,
соответствующей началу отсчета, достаточно указать <span class="Term">'00010101'</span>.
Допускается при указании литералов типа <span class="Term">Дата</span>
опускать значение секунд. В этом случае секунды будут равны 0.</p>

<p class="MsoNormalCxSpLast">В литерале даты игнорируются все значения,
отличные от цифр. Разделители в литерале можно указывать для упрощения ввода
даты.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">Дата<span class="operator">(</span><span class="date">'2008.03.23 10:45:23'</span><span class="operator">)</span> <span class="operator">=</span> <span class="string">&quot;23.03.2008 10:45:23&quot;</span>
Дата<span class="operator">(</span><span class="date">'2008\03\23-10~45~23'</span><span class="operator">)</span> <span class="operator">=</span> <span class="string">&quot;23.03.2008 10:45:23&quot;</span></pre>

<p class="Lang">Число (Number)</p>

<p class="Lang-subheader">Описание:</p>

<p class="MsoNormal">Числовым типом может быть представлено любое
десятичное число. Определены основные арифметические операции над данными
числового типа: сложение, вычитание, умножение и деление.</p>

<p class="Note"><span class="Note">ВНИМАНИЕ!</span> Максимально допустимая
разрядность числа – 32 знака.</p>

<p class="Lang-subheader">Литералы:</p>

<p class="MsoNormalCxSpFirst">Набор цифр, написанных непосредственно в
тексте модуля вида:</p>

<p class="MsoNormalCxSpMiddle"><span class="Term">[+|-]{0|1|2|3|4|5|6|7|8|9}[.{0|1|2|3|4|5|6|7|8|9}]</span></p>

<p class="MsoNormalCxSpLast">В качестве разделителя целой и дробной части
используется точка.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">А <span class="operator">=</span> <span class="number">15</span><span class="operator">;</span>
Б <span class="operator">=</span> <span class="operator">-</span><span class="number">968</span><span class="number">.</span><span class="number">612</span><span class="operator">;</span></pre>

<p class="Lang">Строка (String)</p>

<p class="Lang-subheader">Описание:</p>

<p class="MsoNormal">Значения данного типа
содержат строку произвольной длины в формате Unicode. Строка закодирована в формате UTF-16. При необходимости указания в строке суррогатной пары,
следует использовать два вызова функции <span class="Term">Символ()</span> с последовательным указанием значения
каждого code unit из суррогатной пары.</p>

<p class="Lang-subheader">Литералы:</p>

<p class="MsoNormalCxSpFirst">Литералы строкового типа представляют собой
набор символов, заключенных в кавычки. Для задания в строке символа
&quot; (кавычка) необходимо записать две кавычки подряд (&quot;&quot;).</p>

<p class="MsoNormalCxSpLast">Кроме того, допускаются «многострочные»
строковые константы. В исходном тексте многострочные константы могут задаваться
двумя способами:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Между фрагментами, представляющими отдельные
строки многострочной строки, не должно встречаться никаких символов, за
исключением пробелов, переводов строки и строк комментариев.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Каждая отдельная составляющая не замыкается
кавычками, а на каждой последующей строке помещен символ переноса строки «|»
(вертикальная черта). В этом варианте комментарии допускаются, если строка
начинается с символа комментария «<span class="Interface">//</span>».</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="comment">// Пример строки</span>
МояСтрока <span class="operator">=</span> <span class="string">&quot;Это правильная строка&quot;</span><span class="operator">;</span>
<span class="comment">// Пример 1 многострочной строки</span>
МояМногострочнаяСтрока <span class="operator">=</span> <span class="string">&quot;Это</span>
<span class="string">            |правильная</span>
<span class="string">            |многострочная</span>
<span class="string">            |строка&quot;</span><span class="operator">;</span>
<span class="comment">// Пример 2 многострочной строки</span>
МояМногострочнаяСтрока <span class="operator">=</span> <span class="string">&quot;Это тоже&quot;</span> <span class="comment">//Это комментарий</span>
            <span class="string">&quot;правильная&quot;</span>
            <span class="string">&quot;многострочная&quot;</span>
            <span class="string">&quot;строка&quot;</span><span class="operator">;</span>
<span class="comment">// Пример 3 строки с кавычками</span>
НазваниеФирмы <span class="operator">=</span> <span class="string">&quot;ООО &quot;</span><span class="string">&quot;Василек&quot;</span><span class="string">&quot;&quot;</span><span class="operator">;</span>
<span class="comment">// Пример 4 суррогатная пара</span>
ТекстССуррогатнойПарой <span class="operator">=</span> <span class="string">&quot;Иероглиф: &quot;</span> <span class="operator">+</span> Символ<span class="operator">(</span><span class="number">55401</span><span class="operator">)</span> <span class="operator">+</span> Символ<span class="operator">(</span><span class="number">56997</span><span class="operator">)</span><span class="operator">;</span></pre>

<p class="MsoNormal">Результат вывода на экран или печать строки <span class="Term">НазваниеФирмы</span>
(пример 3) будет выглядеть следующим образом:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_res">ООО &quot;Василек&quot;</pre>

<p class="Lang">Неопределено (Undefined)</p>

<p class="Lang-subheader">Описание:</p>

<p class="MsoNormal">Значение данного типа применяется, когда
необходимо использовать пустое значение, не принадлежащее ни к одному другому типу.
Например, такое значение изначально имеют реквизиты с составным типом значения.
Существует одно-единственное значение данного типа, задаваемое литералом.</p>

<p class="Lang-subheader">Литералы:</p>

<p class="MsoNormal"><span class="Term">Неопределено</span> (<span class="Term">Undefined</span>)</p>

<p class="Lang">Тип (Type)</p>

<p class="Lang-subheader">Описание:</p>

<p class="MsoNormal">Значения данного типа используются для
идентификации типов значений. Это необходимо для определения и сравнения типов.
Данный тип не имеет литералов и возвращается функциями встроенного языка <span class="Term">ТипЗнч</span>
и <span class="Term">Тип</span>
(см. ниже).</p>

<a name="_ref371692195"></a><a id="TI000000141" class="bookmark" name="issogl1_4.4_оператор_присваивания"><h2>4.4. Оператор присваивания</h2></a>

<p class="Lang">Оператор присваивания
(=)</p>

<p class="Lang-subheader">Описание:</p>

<p class="MsoNormalCxSpFirst">Оператор
присваивания (символ «<span class="Interface">=</span>») означает
присваивание значения <span class="Term">&lt;Источник&gt;</span> переменной, обозначенной как <span class="Term">&lt;Назначение&gt;</span>.</p>

<p class="MsoNormalCxSpLast">Присвоение
значения необъявленной переменной, совпадающей по имени со свойством, доступном
в текущем контексте, может диагностироваться как ошибка времени выполнения или
во время проверки конфигурации. Чтобы избежать появления ошибок, рекомендуется
явно объявлять переменные с такими именами с помощью оператора <span class="Term">Перем</span>.</p>

<p class="Lang-subheader">Синтаксис:</p>

<p class="MsoNormal"><span class="Term">&lt;Назначение&gt;
= &lt;Источник&gt;;</span></p>

<p class="Lang-subheader">Параметры:</p>

<p class="Lang-parameter">&lt;Назначение&gt;</p>

<p class="MsoNormal">В
качестве назначения может выступать переменная или свойство объекта встроенного
языка, которое допускает запись.</p>

<p class="Lang-parameter">&lt;Источник&gt;</p>

<p class="MsoNormal">Выражение,
значение которого необходимо присвоить.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">А <span class="operator">=</span> В<span class="operator">;</span>
Стр1 <span class="operator">=</span> <span class="string">&quot;777&quot;</span><span class="operator">;</span>
ДатаДокумента <span class="operator">=</span> <span class="date">'20020717'</span><span class="operator">;</span></pre>

<a id="TI000000142" class="bookmark" name="issogl1_4.5_выражения_языка"><h2>4.5. Выражения языка</h2></a>

<p class="MsoNormal"><span class="Bold">Выражение</span> – это
математическая, логическая или строковая формула, состоящая из соответствующих
операций, по которой вычисляется значение. Математическое и логическое выражение
может стоять справа от знака равенства в операторах присваивания, быть
параметром процедур или функций. Логическое выражение также может быть условием
в управляющих конструкциях <span class="Term">Если</span>,
<span class="Term">Пока</span>,
<span class="Term">Для</span>.
Выражения состоят из констант, переменных и функций, связанных символами логических
и/или арифметических операций.</p>

<a name="_ref363057015"></a><a name="_ref363057014"></a><a id="TI000000143" class="bookmark" name="issogl2_4.5.1_арифметические_операции"><h3>4.5.1. Арифметические операции</h3></a>

<p class="Regularbeforetable">В языке определены следующие виды
арифметических операций.</p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0">
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpFirst"><b>Название</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Выражение</b></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Сложение</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">(Оп1 + Оп2)</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Вычитание</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">(Оп1 – Оп2)</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Умножение</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">(Оп1 * Оп2)</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Деление</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">(Оп1 / Оп2)</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Остаток от деления</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">(Оп1 % Оп2)</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Унарный минус</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">(-Оп1)</p>
  </td>
  
 </tr>
</table>

<p class="Regularbeforetable">Арифметические операции имеют один или два
операнда, в зависимости от типа которых операция имеет ту или иную семантику.
Тот или иной семантический вариант операции определяется по первому операнду. В
случае несовпадения типа второго операнда с требуемым значение преобразуется к
требуемому типу в соответствии с правилами преобразования типов. Если тип
первого операнда не соответствует ни одному из допустимых типов, то в зависимости
от ситуации может производиться преобразование типов или возбуждаться состояние
ошибки выполнения.</p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0">
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpFirst"><b>Операция</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Описание действия</b></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Сложение определено для следующих
  типов операндов</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Число</span> + <span class="Term">Число</span></p>
  <p class="MsoNormalCxSpMiddle"><span class="Term">Дата</span> + <span class="Term">Число</span> (к дате прибавляется число секунд)</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Вычитание определено для следующих
  типов операндов</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Число</span> – <span class="Term">Число</span></p>
  <p class="MsoNormalCxSpMiddle"><span class="Term">Дата</span> – <span class="Term">Число</span> (от даты отнимается число секунд)</p>
  <p class="MsoNormalCxSpMiddle"><span class="Term">Дата</span> – <span class="Term">Дата</span> (результатом является разница между
  двумя датами, измеренная в секундах)</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Умножение</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Число</span> * <span class="Term">Число</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Деление</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Число</span> / <span class="Term">Число</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Остаток от деления</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Число</span> % <span class="Term">Число</span></p>
  </td>
  
 </tr>
</table>

<p class="MsoNormalCxSpLast">При выполнении
арифметических операций с типом <span class="Term">Дата</span> следует помнить, что результат может
иметь точность до 4 знаков после запятой (точность времени – сотни
микросекунд). Однако, при выполнении операции записи такого значения в базу
данных (в реквизите соответствующего типа), дробная часть числа будет отброшена.
В связи с этим рекомендуется округлять до целого значение типа <span class="Term">Число</span> при выполнении арифметических операций
со значением типа <span class="Term">Дата</span>.</p>

<a id="TI000000144" class="bookmark" name="issogl2_4.5.2_операция_конкатенации"><h3>4.5.2. Операция конкатенации</h3></a>

<p class="MsoNormal">Операция конкатенации («<span class="Interface">+</span>») используется для того, чтобы присоединить одну строку
к другой. Длина результирующей строки равна сумме длин соединяемых строк. В
случае несовпадения типа данных второго или последующих операндов со строковым
типом их значение преобразуется к строковому типу в соответствии с правилами
преобразования типов.</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">ФИО <span class="operator">=</span> Фамилия <span class="operator">+</span> <span class="string">&quot; &quot;</span> <span class="operator">+</span> Имя <span class="operator">+</span> <span class="string">&quot; &quot;</span> <span class="operator">+</span> Отчество<span class="operator">;</span></pre>

<a id="TI000000145" class="bookmark" name="issogl2_4.5.3_логические_операции"><h3>4.5.3. Логические операции</h3></a>

<p class="MsoNormal">Логическая операция сравнивает операнды и
вырабатывает значение типа <span class="Term">Булево</span>:
<span class="Term">Истина</span>
или <span class="Term">Ложь</span>.
Существует два вида логических операций: операции сравнения и булевы операции.
В операциях сравнения сравниваются два значения. Булевы операции выполняются
над значениями типа <span class="Term">Булево</span>,
реализуя булеву алгебру. Символы булевых операций могут комбинироваться,
образуя составные операции.</p>

<p class="Lang-subheader">Операции сравнения:</p>

<p class="Regularbeforetable">В языке определены следующие виды операций
сравнения.</p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0">
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpFirst"><b>Операция</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Выражение операции</b></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Больше</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Оп1
  &gt; Оп2</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Больше
  или равно</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Оп1
  &gt;= Оп2</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Равно</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Оп1
  = Оп2</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Не
  равно</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Оп1
  &lt;&gt; Оп2</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Меньше</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Оп1
  &lt; Оп2</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Меньше
  или равно</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Оп1
  &lt;= Оп2</p>
  </td>
  
 </tr>
</table>

<p class="Regularbeforetable">Операции сравнения определены для следующих
типов операндов.</p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0">
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpFirst"><b>Операция</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Выражение операции</b></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Больше</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Число</span> &gt; <span class="Term">Число</span></p>
  <p class="MsoNormalCxSpMiddle"><span class="Term">Строка</span> &gt; <span class="Term">Строка</span></p>
  <p class="MsoNormalCxSpMiddle"><span class="Term">Дата</span> &gt; <span class="Term">Дата</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Больше
  или равно</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Число</span> &gt;= <span class="Term">Число</span></p>
  <p class="MsoNormalCxSpMiddle"><span class="Term">Строка</span> &gt;= <span class="Term">Строка</span></p>
  <p class="MsoNormalCxSpMiddle"><span class="Term">Дата</span> &gt;= <span class="Term">Дата</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Меньше</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Число</span> &lt; <span class="Term">Число</span></p>
  <p class="MsoNormalCxSpMiddle"><span class="Term">Строка</span> &lt; <span class="Term">Строка</span></p>
  <p class="MsoNormalCxSpMiddle"><span class="Term">Дата</span> &lt; <span class="Term">Дата</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Меньше
  или равно</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Число</span> &lt;= <span class="Term">Число</span></p>
  <p class="MsoNormalCxSpMiddle"><span class="Term">Строка</span> &lt;= <span class="Term">Строка</span></p>
  <p class="MsoNormalCxSpMiddle"><span class="Term">Дата</span> &lt;= <span class="Term">Дата</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Равно</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Любой
  тип = Любой тип</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Не
  равно</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Любой
  тип &lt;&gt; Любой тип</p>
  </td>
  
 </tr>
</table>

<p class="Lang-subheader">Булевы операции:</p>

<p class="Regularbeforetable">В языке определены следующие виды булевых
операций.</p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0">
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpFirst"><span class="Term">И</span> (<span class="Term">AND</span>)</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">конъюнкция
  (булево <span class="Term">И</span>)</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">ИЛИ</span> (<span class="Term">OR</span>)</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">дизъюнкция
  (булево <span class="Term">ИЛИ</span>)</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">НЕ</span> (<span class="Term">NOT</span>)</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">логическое
  отрицание (булево отрицание <span class="Term">НЕ</span>)</p>
  </td>
  
 </tr>
</table>

<p class="MsoNormalCxSpLast">Логические выражения
вычисляются слева направо. Для того чтобы избежать неоднозначности и
управлять последовательностью операндов, следует применять круглые скобки.</p>

<p class="Lang-subheader">Уровни
старшинства логических операций:</p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0">
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpFirst">Уровень 1</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">операнды, заключенные в скобки</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Уровень 2</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">НЕ</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Уровень 3</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">И</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Уровень 4</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">ИЛИ</span></p>
  </td>
  
 </tr>
</table>

<p class="Note">Примечание.
При вычислении логического выражения вычисляются только необходимые части выражения.
Например, в выражении <span class="Term">(Цена &gt; 0) И ПроверкаСуммы()</span>, если <span class="Term">Цена &lt;= 0</span>, функция <span class="Term">ПроверкаСуммы()</span> не вызывается.</p>

<a name="_ref226282494"></a><a name="_ref362952184"></a><a id="TI000000146" class="bookmark" name="issogl2_4.5.4_приоритеты_вычисления_выражений_встроенного_языка"><h3>4.5.4. Приоритеты вычисления выражений встроенного языка</h3></a>

<p class="Regularbeforetable">В следующей таблице представлен список операторов встроенного
языка в порядке увеличения приоритета. Операторы с одинаковым приоритетом
вычисляются слева направо.</p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0">
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpFirst"><b>Операция</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Описание</b></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">OR</span>/<span class="Term">ИЛИ</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Логическое
  сложение</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">AND</span>/<span class="Term">И</span>
  </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Логическое
  умножение</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">NOT</span>/<span class="Term">НЕ</span>
  </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Логическое
  отрицание</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">&lt;</span>,
  <span class="Term">&lt;=</span>,
  <span class="Term">=</span>,
  <span class="Term">&gt;=</span>,
  <span class="Term">&gt;</span>,
  <span class="Term">&lt;&gt;</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Сравнение</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">+</span>,
  <span class="Term">-</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Сложение,
  вычитание</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">*</span>,
  <span class="Term">/</span>,
  <span class="Term">%</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Умножение,
  деление</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">-</span>,<span class="Term">+</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Унарные
  плюс и минус</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">.</span>,
  <span class="Term">()</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Разыменование,
  вызов метода и т. п.</p>
  </td>
  
 </tr>
</table>

<p class="MsoNormalCxSpLast">Для того чтобы избежать неоднозначности и
управлять последовательностью операндов, следует применять круглые скобки.</p>

<a name="_ref363227622"></a><a name="_ref395796162"></a><a id="TI000000147" class="bookmark" name="issogl1_4.6_операторы_и_синтаксические_конструкции"><h2>4.6. Операторы и синтаксические конструкции</h2></a>

<p class="Lang">?
(вычислить выражение по условию)</p>

<p class="Lang-subheader">Описание:</p>

<p class="MsoNormal">Позволяет
вычислить одно из двух заданных выражений в зависимости от результата вычисления
логического выражения.</p>

<p class="Lang-subheader">Синтаксис:</p>

<p class="MsoNormal"><span class="Term">?(&lt;Логическое
выражение&gt;, &lt;Выражение 1&gt;, &lt;Выражение 2&gt;)</span></p>

<p class="Lang-subheader">Параметры:</p>

<p class="Lang-parameter">&lt;Логическое
выражение&gt;</p>

<p class="MsoNormal">Логическое
выражение, результат вычисления которого определяет одно из результирующих
выражений, которые будут вычислены. Если результат его вычисления <span class="Term">Истина</span>, то будет вычисляться <span class="Term">&lt;Выражение 1&gt;</span>. Если результат <span class="Term">Ложь</span>, то <span class="Term">&lt;Выражение 2&gt;</span>.</p>

<p class="Lang-parameter">&lt;Выражение
1&gt;</p>

<p class="MsoNormal">Результирующее
выражение, которое будет вычисляться, если результат логического выражения <span class="Term">Истина</span>.</p>

<p class="Lang-parameter">&lt;Выражение
2&gt;</p>

<p class="MsoNormal">Результирующее
выражение, которое будет вычисляться, если результат логического выражения <span class="Term">Ложь</span>.</p>

<p class="Lang-parameter">Возвращаемое
значение:</p>

<p class="MsoNormal">Результат
вычисления одного из результирующих выражений.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">Статус <span class="operator">=</span> <span class="operator">?</span><span class="operator">(</span>ПолучитьСкидку<span class="operator">(</span><span class="operator">)</span> <span class="operator">&gt;</span> <span class="number">10</span><span class="operator">,</span> <span class="string">&quot;Особый клиент&quot;</span><span class="operator">,</span> <span class="string">&quot;Обычный клиент&quot;</span><span class="operator">)</span><span class="operator">;</span>
Предупреждение<span class="operator">(</span>Статус<span class="operator">)</span><span class="operator">;</span></pre>

<p class="Lang">ВызватьИсключение
(Raise)</p>

<p class="Lang-subheader">Описание:</p>

<p class="MsoNormal">При использовании данной формы оператора
вызывается новое исключение.</p>

<p class="Lang-subheader">Синтаксис:</p>

<p class="MsoNormal"><span class="Term">ВызватьИсключение &lt;Выражение&gt;</span></p>

<p class="Lang-subheader">Англоязычный синтаксис:</p>

<p class="MsoNormal"><span class="Term">Raise &lt;Expression&gt;</span></p>

<p class="Lang-subheader">Параметры:</p>

<p class="Lang-parameter">&lt;Выражение&gt;</p>

<p class="MsoNormal">Результат вычисления выражения преобразуется
к строке, и данная строка используется в качестве описания исключения.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">ВызватьИсключение</span> <span class="string">&quot;Документ не может быть проведен&quot;</span><span class="operator">;</span></pre>

<p class="Lang-subheader">См. также:</p>

<p class="MsoNormal">Описание оператора <span class="Term">Попытка</span>.</p>

<p class="Lang">Выполнить (Execute)</p>

<p class="Lang-subheader">Описание:</p>

<p class="MsoNormal">Позволяет выполнить фрагмент кода, который
передается ему в качестве строкового значения.</p>

<p class="NoteCxSpFirst"><span class="Note">ВНИМАНИЕ!</span> Не
рекомендуется реализовывать с помощью этого метода существенную часть
функциональности прикладных решений.</p>

<p class="NoteCxSpLast"><span class="Note">Примечание.</span>
Исполняемый код не может содержать в себе отдельных процедур или функций, т. к.
исполнение кода само по себе идет в рамках процедуры или функции, в которой
использован этот оператор. А также не может содержать явного объявления переменных.</p>

<p class="Lang-subheader">Синтаксис:</p>

<p class="MsoNormal"><span class="Term">Выполнить(&lt;Строка&gt;)</span></p>

<p class="Lang-subheader">Англоязычный синтаксис:</p>

<p class="MsoNormal"><span class="Term">Execute(&lt;Строка&gt;)</span></p>

<p class="Lang-subheader">Параметры:</p>

<p class="Lang-parameter">&lt;Строка&gt;</p>

<p class="MsoNormal">Строка, содержащая текст исполняемого кода.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="comment">// Выводит в окно сообщений текущую дату</span>
<span class="keyword">Выполнить</span><span class="operator">(</span><span class="string">&quot;Сообщить(ТекущаяДата())&quot;</span><span class="operator">)</span><span class="operator">;</span></pre>

<p class="Lang">ДобавитьОбработчик
(AddHandler)</p>

<p class="Lang-subheader">Описание:</p>

<p class="MsoNormalCxSpFirst">Добавляет обработчик события.</p>

<p class="MsoNormalCxSpLast">При добавлении обработчика события
производится проверка соответствия числа параметров события числу параметров метода,
назначаемого в качестве обработчика.</p>

<p class="Lang-subheader">Синтаксис:</p>

<p class="MsoNormal"><span class="Term">ДобавитьОбработчик &lt;Событие&gt;,
&lt;ОбработчикСобытия&gt;;</span></p>

<p class="Lang-subheader">Англоязычный синтаксис:</p>

<p class="MsoNormal"><span class="Term">AddHandler &lt;Событие&gt;, &lt;ОбработчикСобытия&gt;;</span></p>

<p class="Lang-subheader">Параметры:</p>

<p class="Lang-parameter">&lt;Событие&gt;</p>

<p class="MsoNormalCxSpFirst">Событие, которому добавляется обработчик.</p>

<p class="MsoNormalCxSpLast">Событие задается в форме <span class="Term">&lt;Выражение&gt;.&lt;ИмяСобытия&gt;</span>,
где:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Term">&lt;Выражение&gt;</span> – произвольное
выражение на встроенном языке. Его результатом должен быть объект, к событию
которого добавляется обработчик.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Term">&lt;ИмяСобытия&gt;</span> – идентификатор (имя)
события.</p>

<p class="Lang-parameter">&lt;ОбработчикСобытия&gt;</p>

<p class="MsoNormalCxSpFirst">Процедура/функция-обработчик события.</p>

<p class="MsoNormalCxSpLast">Обработчиком события может являться метод
объекта встроенного языка. Тогда <span class="Term">&lt;ОбработчикСобытия&gt;</span>
задается как <span class="Term">&lt;Выражение&gt;.&lt;ИмяОбработчика&gt;</span>,
где:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Term">&lt;Выражение&gt;</span> – произвольное
выражение на встроенном языке. Его результатом должен быть объект, метод которого
служит обработчиком события.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Term">&lt;ИмяОбработчика&gt;</span> – имя метода
обработчика события.</p>

<p class="MsoNormalCxSpFirst">Также в качестве обработчика события может
быть задана процедура/функция, находящаяся в области видимости. В этом случае
обработчик события задается как имя процедуры/функции.</p>

<p class="MsoNormalCxSpLast">Имеется возможность оформлять подписку на
одноименные (в COM-объектах) события, но с разным числом параметров. Для этого
на встроенном языке необходимо создать несколько обработчиков (каждый с
указанием уникального имени и с указанием нужного количества параметров), а
механизм подписки сам выберет нужный обработчик для нужной подписки.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">Обработка <span class="operator">=</span> Обработки<span class="operator">.</span>КонтрольДокумента<span class="operator">.</span>Создать<span class="operator">(</span><span class="operator">)</span><span class="operator">;</span>
Накладная <span class="operator">=</span> Документы<span class="operator">.</span>Накладная<span class="operator">.</span>СоздатьДокумент<span class="operator">(</span><span class="operator">)</span><span class="operator">;</span>
ДобавитьОбработчик Накладная<span class="operator">.</span>ПриЗаписи<span class="operator">,</span> Обработка<span class="operator">.</span>ПриЗаписиДокумента<span class="operator">;</span>
msword <span class="operator">=</span> <span class="keyword">Новый</span> COMОбъект<span class="operator">(</span><span class="string">&quot;Word.Application&quot;</span><span class="operator">)</span><span class="operator">;</span>
ДобавитьОбработчик msword<span class="operator">.</span>DocumentChange<span class="operator">,</span> ПриИзмененииДокумента<span class="operator">;</span>
<span class="keyword">Процедура</span> ПриИзмененииДокумента<span class="operator">(</span><span class="operator">)</span>
    Сообщить<span class="operator">(</span><span class="string">&quot;Документ изменен&quot;</span><span class="operator">)</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span></pre>

<p class="Lang-subheader">Пример с разными параметрами:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="comment">// Обработчик без параметров</span>
<span class="keyword">Процедура</span> ОбработкаСобытия<span class="operator">(</span><span class="operator">)</span>
<span class="keyword">КонецПроцедуры</span>
<span class="comment">// Обработчик с одним параметром</span>
<span class="keyword">Процедура</span> ОбработкаСобытия2<span class="operator">(</span>Параметр<span class="operator">)</span>
<span class="keyword">КонецПроцедуры</span>
<span class="comment">// Объект может генерировать события как с параметром,</span>
<span class="comment">// так и без параметров</span>
Объект <span class="operator">=</span> <span class="keyword">Новый</span> COMОбъект<span class="operator">(</span><span class="string">&quot;Test.Events&quot;</span><span class="operator">)</span><span class="operator">;</span>
ДобавитьОбработчик Объект<span class="operator">.</span>TestEvent<span class="operator">,</span> ОбработкаСобытия
ДобавитьОбработчик Объект<span class="operator">.</span>TestEvent<span class="operator">,</span> ОбработкаСобытия2</pre>

<p class="Lang">Для (For)</p>

<p class="Lang-subheader">Описание:</p>

<p class="MsoNormal">Оператор цикла <span class="Term">Для</span>
предназначен для циклического повторения операторов, находящихся внутри
конструкции <span class="Term">Цикл</span> –
<span class="Term">КонецЦикла</span>.
Перед началом выполнения цикла значение <span class="Term">&lt;Выражение
1&gt;</span> присваивается переменной <span class="Term">&lt;Имя
переменной&gt;</span>. Значение <span class="Term">&lt;Имя
переменной&gt;</span> автоматически увеличивается при каждом проходе
цикла. Величина приращения счетчика при каждом выполнении цикла равна 1. Цикл
выполняется, пока значение переменной <span class="Term">&lt;Имя
переменной&gt;</span> меньше или равно значению <span class="Term">&lt;Выражение
2&gt;</span>. Условие выполнения цикла всегда проверяется вначале, перед
выполнением цикла.</p>

<p class="Lang-subheader">Синтаксис:</p>

<p class="MsoNormalCxSpFirst"><span class="Term">Для &lt;Имя переменной&gt; = &lt;Выражение 1&gt; По
&lt;Выражение 2&gt; Цикл</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">[Прервать;]</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">[Продолжить;]</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы</span></p>

<p class="MsoNormalCxSpLast"><span class="Term">КонецЦикла;</span></p>

<p class="Lang-subheader">Англоязычный синтаксис:</p>

<p class="MsoNormalCxSpFirst"><span class="Term">For &lt;Имя переменной&gt; = &lt;Выражение 1&gt; To
&lt;Выражение 2&gt; Do</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">[Break;]</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">[Continue;]</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы</span></p>

<p class="MsoNormalCxSpLast"><span class="Term">EndDo;</span></p>

<p class="Lang-subheader">Параметры:</p>

<p class="Lang-parameter">&lt;Имя переменной&gt;</p>

<p class="MsoNormal">Идентификатор переменной (счетчика цикла),
значение которой автоматически увеличивается на 1 при каждом повторении цикла.
Так называемый счетчик цикла.</p>

<p class="Lang-parameter">&lt;Выражение 1&gt;</p>

<p class="MsoNormal">Числовое выражение, которое задает начальное
значение, присваиваемое счетчику цикла при первом проходе цикла.</p>

<p class="Lang-parameter">По</p>

<p class="MsoNormal">Синтаксическая связка для параметра &lt;Выражение
2&gt;.</p>

<p class="Lang-parameter">&lt;Выражение 2&gt;</p>

<p class="MsoNormal">Максимальное значение счетчика цикла. Когда
переменная <span class="Term">&lt;Имя
переменной&gt;</span> становится больше чем <span class="Term">&lt;Выражение
2&gt;</span>, выполнение оператора цикла <span class="Term">Для</span>
прекращается.</p>

<p class="Lang-parameter">Цикл</p>

<p class="MsoNormal">Операторы, следующие за ключевым словом <span class="Term">Цикл</span>,
выполняются, пока значение переменной <span class="Term">&lt;Имя
переменной&gt;</span> меньше или равно значению <span class="Term">&lt;Выражение
2&gt;</span>.</p>

<p class="Lang-parameter">// Операторы</p>

<p class="MsoNormal">Исполняемый оператор или последовательность
таких операторов.</p>

<p class="Lang-parameter">Прервать</p>

<p class="MsoNormal">Позволяет прервать выполнение цикла в любой
точке. После выполнения этого оператора управление передается оператору, следующему
за ключевым словом <span class="Term">КонецЦикла</span>.</p>

<p class="Lang-parameter">Продолжить</p>

<p class="MsoNormal">Немедленно передает управление в начало
цикла, где производится вычисление и проверка условий выполнения цикла. Операторы,
следующие в теле цикла за ним, на данной итерации обхода не выполняются.</p>

<p class="Lang-parameter">КонецЦикла</p>

<p class="MsoNormal">Ключевое слово, которое завершает структуру
оператора цикла.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="comment">// Перебор дней текущего месяца</span>
ПоследнийДеньМесяца <span class="operator">=</span> День<span class="operator">(</span>КонецМесяца<span class="operator">(</span>ТекущаяДата<span class="operator">(</span><span class="operator">)</span><span class="operator">)</span><span class="operator">)</span><span class="operator">;</span>
<span class="keyword">Для</span> ТекДень <span class="operator">=</span> <span class="number">1</span> <span class="keyword">по</span> ПоследнийДеньМесяца <span class="keyword">Цикл</span>
    Состояние<span class="operator">(</span><span class="string">&quot;Обрабатывается день: &quot;</span><span class="operator">+</span> ТекДень<span class="operator">)</span><span class="operator">;</span>
    <span class="comment">// Операторы обработки очередного дня месяца</span>
    . . .
<span class="keyword">КонецЦикла</span><span class="operator">;</span></pre>

<p class="Lang">Для
каждого (For each)</p>

<p class="Lang-subheader">Описание:</p>

<p class="MsoNormal">Оператор
цикла <span class="Term">Для каждого</span> предназначен для циклического обхода
коллекций значений. При каждой итерации цикла возвращается новый элемент
коллекции. Обход осуществляется до тех пор, пока не будут перебраны все элементы
коллекции, или может быть завершен досрочно при выполнении оператора <span class="Term">Прервать</span>.</p>

<p class="Lang-subheader">Синтаксис:</p>

<p class="MsoNormalCxSpFirst"><span class="Term">Для каждого
&lt;Имя переменной 1&gt; Из &lt;Имя переменной 2&gt; Цикл</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">[Прервать;]</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">[Продолжить;]</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы</span></p>

<p class="MsoNormalCxSpLast"><span class="Term">КонецЦикла</span></p>

<p class="Lang-subheader">Англоязычный
синтаксис:</p>

<p class="MsoNormalCxSpFirst"><span class="Term">For each
&lt;Имя переменной 1&gt; In &lt;Имя переменной 2&gt; Do</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">[Break;]</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">[Continue;]</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы</span></p>

<p class="MsoNormalCxSpLast"><span class="Term">EndDo;</span></p>

<p class="Lang-subheader">Параметры:</p>

<p class="Lang-parameter">&lt;Имя
переменной 1&gt;</p>

<p class="MsoNormal">Переменная,
которой при каждом повторении цикла присваивается значение очередного элемента
коллекции.</p>

<p class="Lang-parameter">Из</p>

<p class="MsoNormal">Синтаксическая
связка для параметра <span class="Term">&lt;Имя переменной 2&gt;</span>.</p>

<p class="Lang-parameter">&lt;Имя
переменной 2&gt;</p>

<p class="MsoNormal">Переменная
или выражение, предоставляющее коллекцию. Элементы этой коллекции будут
присваиваться параметру <span class="Term">&lt;Имя переменной 1&gt;</span>.</p>

<p class="Lang-parameter">Цикл</p>

<p class="MsoNormal">Операторы,
следующие за ключевым словом <span class="Term">Цикл</span>, выполняются до тех пор, пока не будут
перебраны все элементы коллекции.</p>

<p class="Lang-parameter">//
Операторы</p>

<p class="MsoNormal">Исполняемый
оператор или последовательность таких операторов.</p>

<p class="Lang-parameter">Прервать</p>

<p class="MsoNormal">Позволяет
прервать выполнение цикла в любой точке. После выполнения этого оператора
управление передается оператору, следующему за ключевым словом <span class="Term">КонецЦикла</span>.</p>

<p class="Lang-parameter">Продолжить</p>

<p class="MsoNormal">Немедленно
передает управление в начало цикла, где производится вычисление и проверка
условий выполнения цикла. Операторы, следующие в теле цикла за ним, на данной
итерации обхода не выполняются.</p>

<p class="Lang-parameter">КонецЦикла</p>

<p class="MsoNormal">Ключевое
слово, которое завершает структуру оператора цикла.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="comment">// Перебор строк табличной части документа.</span>
Документ <span class="operator">=</span> Документы<span class="operator">.</span>РасходнаяНакладная<span class="operator">.</span>НайтиПоКоду<span class="operator">(</span><span class="number">12345</span><span class="operator">)</span><span class="operator">;</span>
<span class="comment">// Проверим, найден нужный нам документ или нет</span>
<span class="keyword">Если</span> <span class="keyword">Не</span> Документ<span class="operator">.</span>Пустая<span class="operator">(</span><span class="operator">)</span> <span class="keyword">Тогда</span>
    <span class="keyword">Для</span> <span class="keyword">каждого</span> СтрокаСостава <span class="keyword">из</span> Документ<span class="operator">.</span>Состав <span class="keyword">Цикл</span>
        Состояние<span class="operator">(</span><span class="string">&quot;Строка: &quot;</span> <span class="operator">+</span> Документ<span class="operator">.</span>Состав<span class="operator">.</span>Индекс<span class="operator">(</span>СтрокаСостава<span class="operator">)</span><span class="operator">+</span><span class="number">1</span><span class="operator">)</span><span class="operator">;</span>
        <span class="comment">// Операторы обработки очередной строки табличной части</span>
        ...
    <span class="keyword">КонецЦикла</span><span class="operator">;</span>
<span class="keyword">КонецЕсли</span><span class="operator">;</span></pre>

<p class="Lang">Если (If)</p>

<p class="Lang-subheader">Описание:</p>

<p class="MsoNormal">Оператор
<span class="Term">Если</span> управляет выполнением программы, основываясь
на результаты одного или более логических выражений. Оператор может содержать
любое количество групп операторов, возглавляемых конструкциями <span class="Term">ИначеЕсли – Тогда</span>.</p>

<p class="Lang-subheader">Синтаксис:</p>

<p class="MsoNormalCxSpFirst"><span class="Term">Если
&lt;Логическое выражение&gt; Тогда</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">[ИначеЕсли
&lt;Логическое выражение&gt; Тогда]</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">[Иначе]</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы</span></p>

<p class="MsoNormalCxSpLast"><span class="Term">КонецЕсли;</span></p>

<p class="Lang-subheader">Англоязычный
синтаксис:</p>

<p class="MsoNormalCxSpFirst"><span class="Term">If
&lt;Логическое выражение&gt; Then</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">[ElsIf
&lt;Логическое выражение&gt; Then]</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">[Else]</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы</span></p>

<p class="MsoNormalCxSpLast"><span class="Term">EndIf;</span></p>

<p class="Lang-subheader">Параметры:</p>

<p class="Lang-parameter">&lt;Логическое
выражение&gt;</p>

<p class="MsoNormal">Логическое
выражение.</p>

<p class="Lang-parameter">Тогда</p>

<p class="MsoNormal">Операторы,
следующие за <span class="Term">Тогда</span>,<span class="Bold"> </span>выполняются,
если результатом логического выражения является значение <span class="Term">Истина</span>.</p>

<p class="Lang-parameter">//
Операторы</p>

<p class="MsoNormal">Исполняемый
оператор или последовательность таких операторов.</p>

<p class="Lang-parameter">ИначеЕсли</p>

<p class="MsoNormal">Логическое
выражение, следующее за ключевым словом <span class="Term">ИначеЕсли</span>, вычисляется только тогда, когда
условия в <span class="Term">Если</span> и всех предшествующих <span class="Term">ИначеЕсли</span> оказались равны <span class="Term">Ложь</span>. Операторы, следующие за конструкцией <span class="Term">ИначеЕсли</span> – <span class="Term">Тогда</span>, выполняются, если результат логического
выражения в данном <span class="Term">ИначеЕсли</span> равен <span class="Term">Истина</span>.</p>

<p class="Lang-parameter">Иначе</p>

<p class="MsoNormal">Операторы,
следующие за ключевым словом <span class="Term">Иначе</span>, выполняются, если результаты логических
выражений в конструкции <span class="Term">Если</span> и всех предшествующих конструкциях <span class="Term">ИначеЕсли</span> оказались равны <span class="Term">Ложь</span>.</p>

<p class="Lang-parameter">КонецЕсли</p>

<p class="MsoNormal">Ключевое
слово, которое завершает структуру оператора условного выполнения.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">Если</span> ДеньНедели<span class="operator">(</span>ТекущаяДата<span class="operator">(</span><span class="operator">)</span><span class="operator">)</span> <span class="operator">=</span> <span class="number">6</span> <span class="keyword">Тогда</span>
    Сообщить<span class="operator">(</span><span class="string">&quot;Сегодня суббота.&quot;</span><span class="operator">)</span><span class="operator">;</span>
<span class="keyword">ИначеЕсли</span> ДеньНедели<span class="operator">(</span>ТекущаяДата<span class="operator">(</span><span class="operator">)</span><span class="operator">)</span> <span class="operator">=</span> <span class="number">7</span> <span class="keyword">Тогда</span>
    Сообщить<span class="operator">(</span><span class="string">&quot;Сегодня воскресенье.&quot;</span><span class="operator">)</span><span class="operator">;</span>
<span class="keyword">Иначе</span>
    Сообщить<span class="operator">(</span><span class="string">&quot;Сегодня рабочий день.&quot;</span><span class="operator">)</span><span class="operator">;</span>
<span class="keyword">КонецЕсли</span><span class="operator">;</span></pre>

<p class="Lang">Новый (New)</p>

<p class="Lang-subheader">Описание:</p>

<p class="MsoNormalCxSpFirst">Оператор позволяет создать значение
указанного типа. Допустим только для тех типов, для которых разрешено создание
новых значений. Для прикладных объектов необходимо использовать функциональную
форму оператора <span class="Term">Новый</span>
(вариант 2), так как при проверке модулей в конфигураторе не определены типы
для прикладных объектов.</p>

<p class="MsoNormalCxSpLast">При работе с функциональной формой оператора <span class="Term">Новый</span>
следует помнить, что операция разыменования непосредственно к результату работы
оператора не может быть применена. Вначале следует присвоить результат работы
оператора <span class="Term">Новый</span>
какой-либо переменной, а затем использовать уже эту переменную.</p>

<p class="Lang-subheader">Синтаксис (вариант 1):</p>

<p class="MsoNormal"><span class="Term">Новый &lt;Имя типа&gt;[(&lt;Парам 1&gt;, ..., &lt;Парам
N&gt;)]</span></p>

<p class="Lang-subheader">Параметры:</p>

<p class="Lang-parameter">Имя типа</p>

<p class="MsoNormal">Указывается имя типа, значение которого создается.</p>

<p class="Lang-parameter">&lt;Парам 1&gt;, ..., &lt;Парам N&gt;</p>

<p class="MsoNormal">После имени типа в скобках могут указываться
параметры, если они определены в конструкторах для данного типа. Допустимое
количество параметров и их назначение указываются в описании конструкторов объекта.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="comment">// Пример создания массива из трех элементов.</span>
Массив <span class="operator">=</span> <span class="keyword">Новый</span> Массив<span class="operator">(</span><span class="number">3</span><span class="operator">)</span><span class="operator">;</span></pre>

<p class="Lang-subheader">Синтаксис (вариант 2):</p>

<p class="MsoNormal"><span class="Term">Новый (&lt;Тип&gt;[, &lt;Параметры конструктора&gt;])</span></p>

<p class="Lang-subheader">Параметры:</p>

<p class="Lang-parameter">Тип</p>

<p class="MsoNormal">Имя типа или значение типа <span class="Term">Тип</span>.</p>

<p class="Lang-parameter">&lt;Параметры конструктора&gt;</p>

<p class="MsoNormal">Массив параметров конструктора.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">ТипЗначения <span class="operator">=</span> Тип<span class="operator">(</span><span class="string">&quot;КвалификаторыСтроки&quot;</span><span class="operator">)</span><span class="operator">;</span>
Параметры <span class="operator">=</span> <span class="keyword">Новый</span> Массив<span class="operator">(</span><span class="number">2</span><span class="operator">)</span><span class="operator">;</span>
Параметры<span class="operator">[</span><span class="number">0</span><span class="operator">]</span> <span class="operator">=</span> <span class="number">20</span><span class="operator">;</span>
Параметры<span class="operator">[</span><span class="number">1</span><span class="operator">]</span> <span class="operator">=</span> ДопустимаяДлина<span class="operator">.</span>Переменная<span class="operator">;</span>
КвалифСтр <span class="operator">=</span> <span class="keyword">Новый</span><span class="operator">(</span>ТипЗначения<span class="operator">,</span> Параметры<span class="operator">)</span><span class="operator">;</span></pre>

<p class="Lang">Перейти
(Goto)</p>

<p class="Lang-subheader">Описание:</p>

<p class="MsoNormalCxSpFirst">Безусловная
передача управления на другой оператор программы. Передает управление от одного
оператора к другому.</p>

<p class="MsoNormalCxSpLast">Область
действия оператора ограничивается программным модулем, процедурой или функцией;
он не может передать управление за пределы программного модуля, процедуры или
функции.</p>

<p class="NoteCxSpFirst"><span class="Note">Примечание 1.</span> Метка в этом операторе не должна быть
меткой перехода на оператор <span class="Term">Процедура</span> или <span class="Term">Функция</span>.</p>

<p class="NoteCxSpLast"><span class="Note">Примечание 2.</span> Оператор безусловного перехода не может
быть использован для передачи управления на операторы, находящиеся внутри
конструкций: <span class="Term">Пока</span> – <span class="Term">КонецЦикла</span>, <span class="Term">Для</span> – <span class="Term">КонецЦикла</span>, <span class="Term">Для каждого</span> – <span class="Term">КонецЦикла</span>, <span class="Term">Если</span> – <span class="Term">КонецЕсли</span>, <span class="Term">Попытка</span> – <span class="Term">Исключение</span> – <span class="Term">КонецПопытки</span> извне этих конструкций.</p>

<p class="Lang-subheader">Синтаксис:</p>

<p class="MsoNormal"><span class="Term">Перейти
&lt;Метка&gt;;</span></p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">Перейти</span> ~Метка1<span class="operator">;</span>
...
~ Метка1: Сообщить<span class="operator">(</span><span class="string">&quot;Осуществлен переход по метке.&quot;</span><span class="operator">)</span><span class="operator">;</span></pre>

<p class="Lang">Перем (Var)</p>

<p class="Lang-subheader">Описание:</p>

<p class="MsoNormal">Позволяет
в явном виде объявить переменную.</p>

<p class="Lang-subheader">Синтаксис:</p>

<p class="MsoNormal"><span class="Term">Перем &lt;Имя
переменной 1&gt; [Экспорт] [, &lt;Имя переменной 2&gt;, …];</span></p>

<p class="Lang-subheader">Англоязычный
синтаксис:</p>

<p class="MsoNormal"><span class="Term">Var &lt;Имя
переменной 1&gt; [Export] [, &lt;Имя переменной 2&gt;, …];</span></p>

<p class="Lang-subheader">Параметры:</p>

<p class="Lang-parameter">&lt;Имя
переменной 1&gt;[, &lt;Имя переменной 2&gt;, …]</p>

<p class="MsoNormal">Задается
имя или имена объявляемых переменных.</p>

<p class="Lang-parameter">Экспорт</p>

<p class="MsoNormal">Необязательное
ключевое слово. Указывает, что данная переменная доступна при обращении к
контексту этого модуля из других модулей. Данное ключевое слово необходимо указывать
для каждой объявляемой переменной отдельно. Не имеет смысла при объявлении
переменных отдельных процедур или функций.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="comment">// Пример объявления одной переменной</span>
<span class="keyword">Перем</span> А <span class="keyword">Экспорт</span><span class="operator">;</span>
<span class="keyword">Перем</span> Б<span class="operator">;</span>
<span class="comment">// Пример объявления нескольких переменных одним оператором</span>
<span class="keyword">Перем</span> А<span class="operator">,</span> Б <span class="keyword">Экспорт</span><span class="operator">;</span></pre>

<p class="Lang-subheader">Неявное объявление
переменных:</p>

<p class="MsoNormal">В языке необязательно объявлять переменные в
явном виде. Неявным определением переменной является первое ее появление в левой
части оператора присваивания. Тип переменной определяется типом присвоенного ей
значения. Не допускается использование в выражениях переменных, не объявленных
ранее в явном или неявном виде.</p>

<p class="Lang-subheader">Область использования переменной:</p>

<p class="MsoNormal">Область использования переменных зависит от
места их определения в конфигурации. Существует три области, в которых можно
объявить переменные:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
В разделе определения переменных программного
модуля управляемого приложения. Это глобальные переменные.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
В разделе определения переменных модуля. Это
переменные модуля.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
В процедуре или функции. Это локальные
переменные.</p>

<p class="MsoNormalCxSpFirst">Глобальные переменные, объявленные с ключевым
словом <span class="Term">Экспорт</span>,
доступны для использования в исполняемых операторах, выражениях, в любой
процедуре и функции любого клиентского программного модуля конфигурации.</p>

<p class="MsoNormalCxSpMiddle">Переменные модуля доступны для использования
в исполняемых операторах, выражениях, в любой процедуре и функции того программного
модуля, в пределах которого они объявлены. Если они объявлены с ключевым словом
<span class="Term">Экспорт</span>,
то они доступны из других модулей через контекст модуля, в котором они
объявлены.</p>

<p class="MsoNormalCxSpMiddle">Локальные переменные доступны в пределах той
процедуры или функции, в которой они объявлены.</p>

<p class="MsoNormalCxSpMiddle">Если переменная определена как глобальная, то
она видна из всех процедур и функций любого клиентского программного модуля конфигурации.
Если же переменная определена внутри процедуры, то ее областью видимости
является данная процедура или функция.</p>

<p class="MsoNormalCxSpMiddle">Таким образом, если две переменные с
одинаковыми именами используются в двух различных процедурах модуля и имя этой
переменной не упоминается как глобальное, то это две различные переменные,
локальные для процедур. Если же переменная определена как глобальная
переменная, то любое использование имени этой переменной будет приводить к обращению
к одной и той же переменной.</p>

<p class="MsoNormalCxSpLast">Единственный способ создать для процедуры
локальную переменную с именем, совпадающим с именем переменной, определенной
как глобальная, – это объявить ее явно при помощи оператора <span class="Term">Перем</span>.</p>

<p class="Lang">Пока (While)</p>

<p class="Lang-subheader">Описание:</p>

<p class="MsoNormal">Оператор цикла <span class="Term">Пока</span>
предназначен для циклического повторения операторов, находящихся внутри
конструкции <span class="Term">Цикл</span> –
<span class="Term">КонецЦикла</span>.
Цикл выполняется, пока логическое выражение равно <span class="Term">Истина</span>.
Условие выполнения цикла всегда проверяется вначале, перед выполнением цикла.</p>

<p class="Lang-subheader">Синтаксис:</p>

<p class="MsoNormalCxSpFirst"><span class="Term">Пока &lt;Логическое выражение&gt; Цикл</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">[Прервать;]</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">[Продолжить;]</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы</span></p>

<p class="MsoNormalCxSpLast"><span class="Term">КонецЦикла</span></p>

<p class="Lang-subheader">Англоязычный синтаксис:</p>

<p class="MsoNormalCxSpFirst"><span class="Term">While &lt;Логическое выражение&gt; Do</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">[Break;]</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">[Continue;]</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы</span></p>

<p class="MsoNormalCxSpLast"><span class="Term">EndDo;</span></p>

<p class="Lang-subheader">Параметры:</p>

<p class="Lang-parameter">&lt;Логическое выражение&gt;</p>

<p class="MsoNormal">Логическое выражение.</p>

<p class="Lang-parameter">Цикл</p>

<p class="MsoNormal">Операторы, следующие за ключевым словом <span class="Term">Цикл</span>,
выполняются, пока результат логического выражения равен <span class="Term">Истина</span>.</p>

<p class="Lang-parameter">// Операторы</p>

<p class="MsoNormal">Исполняемый оператор или последовательность
таких операторов.</p>

<p class="Lang-parameter">Прервать</p>

<p class="MsoNormal">Позволяет прервать выполнение цикла в любой
точке. После выполнения этого оператора управление передается оператору, следующему
за ключевым словом <span class="Term">КонецЦикла</span>.</p>

<p class="Lang-parameter">Продолжить</p>

<p class="MsoNormal">Немедленно передает управление в начало
цикла, где производится вычисление и проверка условий выполнения цикла. Операторы,
следующие в теле цикла за ним, на данной итерации обхода не выполняются.</p>

<p class="Lang-parameter">КонецЦикла</p>

<p class="MsoNormal">Ключевое слово, которое завершает структуру
оператора цикла.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">ВыборкаДок <span class="operator">=</span> Документы<span class="operator">.</span>РасходнаяНакладная<span class="operator">.</span><span class="keyword">Выбрать</span><span class="operator">(</span><span class="operator">)</span><span class="operator">;</span>
<span class="comment">// Цикл по всем документам</span>
<span class="keyword">Пока</span> ВыборкаДок<span class="operator">.</span>Следующий<span class="operator">(</span><span class="operator">)</span> <span class="keyword">Цикл</span>
    <span class="comment">// Отобразим Документ в панели состояния</span>
    Состояние<span class="operator">(</span><span class="string">&quot;Обрабатывается документ №&quot;</span> <span class="operator">+</span> ВыборкаДок<span class="operator">.</span>Номер<span class="operator">)</span><span class="operator">;</span>
    <span class="comment">// Операторы выполнения действий над документом</span>
<span class="keyword">КонецЦикла</span><span class="operator">;</span></pre>

<p class="Lang">Попытка
(Try)</p>

<p class="Lang-subheader">Описание:</p>

<p class="MsoNormalCxSpFirst">Оператор
<span class="Term">Попытка</span> управляет выполнением программы, основываясь
на возникающих при выполнении модуля ошибочных (исключительных) ситуациях, и
определяет обработку этих ситуаций.</p>

<p class="MsoNormalCxSpMiddle">В
качестве ошибочных (исключительных) ситуаций воспринимаются ошибки времени
выполнения модуля. Не предусмотрено определяемых пользователем исключений.</p>

<p class="MsoNormalCxSpMiddle">Если
при выполнении последовательности операторов попытки произошла ошибка времени
выполнения, то выполнение оператора, вызвавшего ошибку, прерывается и управление
передается на первый оператор последовательности операторов исключения. При
этом управление будет передано даже в том случае, если ошибку вызвал оператор,
находящийся в процедуре или функции, вызванной из операторов попытки. Если
ошибка произошла в вызванной процедуре или функции, то ее выполнение будет
прервано, а локальные переменные – уничтожены. Это справедливо для любой
вложенности вызовов. После выполнения последовательности операторов исключения
управление передается на следующий за ключевым словом <span class="Term">КонецПопытки</span> оператор. Если же последовательность
операторов попытки выполнилась без ошибок, то последовательность операторов
исключения будет пропущена и управление также будет продолжено с оператора,
следующего за ключевым словом <span class="Term">КонецПопытки</span>.</p>

<p class="MsoNormalCxSpMiddle">Конструкции
<span class="Term">Попытка</span> – <span class="Term">Исключение</span> – <span class="Term">КонецПопытки</span> могут быть вложенными. При этом
при возникновении исключительной ситуации управление передается на тот обработчик,
в попытке которого произошла ошибка. Если же в последовательности операторов
исключения этого обработчика выполняется оператор <span class="Term">ВызватьИсключение</span>, выполнение передается
вышестоящему обработчику исключения и так далее. Если вышестоящего обработчика
нет, исключительная ситуация обрабатывается системно с прекращением выполнения
программного модуля.</p>

<p class="MsoNormalCxSpMiddle">В
выдаче диагностики помощь могут оказать встроенные функции <span class="Term">ОписаниеОшибки()</span> и <span class="Term">ИнформацияОбОшибке()</span> (см. описание функций
встроенного языка). Также следует учитывать, что попадание во
вложенный обработчик исключения приводит к тому, что информация о «родительском»
исключении теряется.</p>

<p class="MsoNormalCxSpLast">С
помощью конструкции<span class="Term"> Попытка – Исключение – КонецПопытки</span>
не могут быть перехвачены следующие ошибки:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Ошибки компиляции модулей встроенного языка во
время исполнения.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Ошибки времени исполнения, возникающие в
обработчиках <span class="Term">ПередЗакрытием()</span> и <span class="Term">ПриЗакрытии()</span> управляемой формы.</p>

<p class="MsoNormal">Такие
ошибки всегда будет отображаться системой «1С:Предприятие» и приводить к
прекращению выполнения встроенного языка.</p>

<p class="Lang-subheader">Синтаксис:</p>

<p class="MsoNormalCxSpFirst"><span class="Term">Попытка</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы
попытки</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">Исключение</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы
исключения</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">[ВызватьИсключение;]</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы
исключения</span></p>

<p class="MsoNormalCxSpLast"><span class="Term">КонецПопытки;</span></p>

<p class="Lang-subheader">Англоязычный
синтаксис:</p>

<p class="MsoNormalCxSpFirst"><span class="Term">Try</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы
попытки</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">Except</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы
исключения</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">[Raise;]</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы
исключения</span></p>

<p class="MsoNormalCxSpLast"><span class="Term">EndTry;</span></p>

<p class="Lang-subheader">Параметры:</p>

<p class="Lang-parameter">//
Операторы попытки</p>

<p class="MsoNormal">Исполняемый
оператор или последовательность таких операторов.</p>

<p class="Lang-parameter">Исключение</p>

<p class="MsoNormal">Операторы,
следующие за ключевым словом <span class="Term">Исключение</span>, выполняются, если при выполнении
последовательности операторов произошла ошибка времени выполнения.</p>

<p class="Lang-parameter">//
Операторы исключения</p>

<p class="MsoNormal">Исполняемый
оператор или последовательность операторов, которые обрабатывают исключительную
ситуацию.</p>

<p class="Lang-parameter">ВызватьИсключение</p>

<p class="MsoNormalCxSpFirst">Оператор
позволяет вызвать исключение в тех случаях, когда, несмотря на отработку
исключительной ситуации, необходимо прервать выполнение модуля с ошибкой
времени выполнения. Оператор допустим только внутри операторных скобок <span class="Term">Исключение</span> – <span class="Term">КонецПопытки</span>.</p>

<p class="MsoNormalCxSpLast">Выполнение
данного оператора прекращает выполнение последовательности операторов
исключения, и производится поиск более «внешнего» обработчика исключения (при
вложенных попытках). Если таковой есть, то управление передается на его первый
оператор. Если нет, то исключительная ситуация обрабатывается системно,
выдается сообщение о первоначально возникшей ошибке, а выполнение модуля
прекращается.</p>

<p class="Lang-parameter">КонецПопытки</p>

<p class="MsoNormal">Ключевое
слово, которое завершает структуру оператора обработки исключительных ситуаций.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">Процедура</span> СформироватьВExcel<span class="operator">(</span><span class="operator">)</span>
    <span class="keyword">Попытка</span>
        <span class="comment">// Пытаемся обратиться к программе MS Excel</span>
        Табл <span class="operator">=</span> <span class="keyword">Новый</span> ComObject<span class="operator">(</span><span class="string">&quot;Excel.Application&quot;</span><span class="operator">)</span><span class="operator">;</span>
    <span class="keyword">Исключение</span>
        Предупреждение<span class="operator">(</span>ОписаниеОшибки<span class="operator">(</span><span class="operator">)</span><span class="operator">)</span><span class="operator">;</span>
        <span class="keyword">Возврат</span><span class="operator">;</span>
    <span class="keyword">КонецПопытки</span><span class="operator">;</span>
    <span class="comment">// Операторы формирования отчета</span>
    ...
<span class="keyword">КонецПроцедуры</span></pre>

<p class="Lang">Процедура
(Procedure)</p>

<p class="Lang-subheader">Описание:</p>

<p class="MsoNormalCxSpFirst">Ключевое слово <span class="Term">Процедура</span>
начинает секцию исходного текста, выполнение которого можно инициировать из
любой точки программного модуля, просто указав <span class="Term">ИмяПроцедуры()</span>
со списком параметров (если параметры не передаются, то круглые скобки, тем не
менее, обязательны). Если в модуле приложения или общем программном модуле в
теле описания процедуры использовано ключевое слово <span class="Term">Экспорт</span>,
то это означает, что данная процедура является доступной из всех других программных
модулей конфигурации.</p>

<p class="MsoNormalCxSpMiddle">При выполнении оператора <span class="Term">Возврат</span>
процедура заканчивается и возвращает управление в точку вызова. Если в тексте
процедуры не встретился оператор <span class="Term">Возврат</span>,
то после выполнения последнего исполняемого оператора происходит выполнение
неявного оператора <span class="Term">Возврат</span>.
Конец программной секции процедуры определяется по оператору <span class="Term">КонецПроцедуры</span>.</p>

<p class="MsoNormalCxSpLast">Переменные, объявленные в теле процедуры в
разделе <span class="Interface">Объявления локальных переменных</span>, являются локальными переменными
данной процедуры, поэтому доступны только в этой процедуре (за исключением
случая передачи их как параметров при вызове других процедур, функций или методов).</p>

<p class="Note"><span class="Note">Примечание.</span> Ключевые слова <span class="Term">Процедура</span>,
<span class="Term">КонецПроцедуры</span>
являются не операторами, а операторными скобками, поэтому не должны
заканчиваться точкой с запятой (это может приводить к ошибкам выполнения модуля).</p>

<p class="Lang-subheader">Синтаксис:</p>

<p class="MsoNormalCxSpFirst"><span class="Term">Процедура &lt;ИмяПроцедуры&gt;([[Знач] &lt;Парам 1&gt;
[=&lt;ДефЗнач&gt;], ... ,[Знач] &lt;Парам N&gt; [=&lt;ДефЗнач&gt;]])[Экспорт]</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Объявления локальных переменных;</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы;</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">...</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">[Возврат;]</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы;</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">...</span></p>

<p class="MsoNormalCxSpLast"><span class="Term">КонецПроцедуры</span></p>

<p class="Lang-subheader">Англоязычный синтаксис:</p>

<p class="MsoNormalCxSpFirst"><span class="Term">Procedure &lt;ИмяПроцедуры&gt;([[Val] &lt;Парам 1&gt;
[=&lt;ДефЗнач&gt;], ... ,[Val] &lt;Парам N&gt;[=&lt;ДефЗнач&gt;]])[Export]</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Объявления локальных переменных;</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы;</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">...</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">[Return;]</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы;</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">...</span></p>

<p class="MsoNormalCxSpLast"><span class="Term">EndProcedure</span></p>

<p class="Lang-subheader">Параметры:</p>

<p class="Lang-parameter">&lt;ИмяПроцедуры&gt;</p>

<p class="MsoNormal">Назначает имя процедуры.</p>

<p class="Lang-parameter">Знач</p>

<p class="MsoNormal">Необязательное ключевое слово, которое
указывает на то, что следующий за ним параметр передается по значению, т. е.
изменение значения формального параметра при выполнении процедуры никак не
повлияет на фактический параметр, переданный при вызове процедуры. Если это
ключевое слово не указано, то параметр процедуры передается по ссылке, то есть
изменение внутри процедуры значения формального параметра приведет к изменению
значения соответствующего фактического параметра.</p>

<p class="Lang-parameter">&lt;Парам 1&gt;, ..., &lt;Парам N&gt;</p>

<p class="MsoNormal">Необязательный список формальных параметров,
разделяемых запятыми. Значения формальных параметров должны соответствовать
значениям передаваемых при вызове процедуры фактических параметров. В этом
списке определяются имена каждого из параметров так, как они используются в
тексте процедуры. Список формальных параметров может быть пуст.</p>

<p class="Lang-parameter">=&lt;ДефЗнач&gt;</p>

<p class="MsoNormal">Необязательная установка значения параметра
по умолчанию. Параметры с установленными значениями по умолчанию можно располагать
в любом месте списка формальных параметров (подробнее см. раздел «Передача
параметров процедур и функций»).</p>

<p class="Lang-parameter">Экспорт</p>

<p class="MsoNormal">Необязательное ключевое слово, которое
указывает на то, что данная процедура является доступной из других программных
модулей.</p>

<p class="Lang-parameter">// Объявления локальных переменных</p>

<p class="MsoNormal">Объявляются локальные переменные, на которые
можно ссылаться только в рамках этой процедуры (см. оператор <span class="Term">Перем</span>).</p>

<p class="Lang-parameter">// Операторы</p>

<p class="MsoNormal">Исполняемые операторы процедуры.</p>

<p class="Lang-parameter">Возврат</p>

<p class="MsoNormal">Необязательное ключевое слово, которое
завершает выполнение процедуры и осуществляет возврат в точку программы, из которой
было обращение к процедуре. Использование данного оператора в процедуре
необязательно.</p>

<p class="Lang-parameter">КонецПроцедуры</p>

<p class="MsoNormal">Обязательное ключевое слово, обозначающее
конец исходного текста процедуры, завершение выполнения процедуры. Возврат в точку,
из которой было обращение к процедуре.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">Перем</span> Глоб<span class="operator">;</span>
<span class="comment">// Описание процедуры</span>
<span class="keyword">Процедура</span> МояПроцедура<span class="operator">(</span>Пар1<span class="operator">,</span> Пар2<span class="operator">,</span> Пар3<span class="operator">)</span> <span class="keyword">Экспорт</span>
    Глоб <span class="operator">=</span> Глоб <span class="operator">+</span> Пар1 <span class="operator">+</span> Пар2 <span class="operator">+</span> Пар3<span class="operator">;</span>
    <span class="keyword">Возврат</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span>
Глоб <span class="operator">=</span> <span class="number">123</span><span class="operator">;</span>
МояПроцедура<span class="operator">(</span><span class="number">5</span><span class="operator">,</span> <span class="number">6</span><span class="operator">,</span> <span class="number">7</span><span class="operator">)</span><span class="operator">;</span> <span class="comment">// Вызов процедуры</span></pre>

<p class="Lang">УдалитьОбработчик
(RemoveHandler)</p>

<p class="Lang-subheader">Описание:</p>

<p class="MsoNormalCxSpFirst">Удаляет обработчик события.</p>

<p class="MsoNormalCxSpLast">При удалении обработчика события производится
проверка соответствия числа параметров события числу параметров метода, назначенного
в качестве обработчика.</p>

<p class="Lang-subheader">Синтаксис:</p>

<p class="MsoNormal"><span class="Term">УдалитьОбработчик &lt;Событие&gt;, &lt;ОбработчикСобытия&gt;;</span></p>

<p class="Lang-subheader">Англоязычный синтаксис:</p>

<p class="MsoNormal"><span class="Term">RemoveHandler &lt;Событие&gt;, &lt;ОбработчикСобытия&gt;;</span></p>

<p class="Lang-subheader">Параметры:</p>

<p class="Lang-parameter">&lt;Событие&gt;</p>

<p class="MsoNormalCxSpFirst">Событие, обработчик которого удаляется.</p>

<p class="MsoNormalCxSpLast">Событие задается в форме <span class="Term">&lt;Выражение&gt;.&lt;ИмяСобытия&gt;</span>,
где:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Term">&lt;Выражение&gt;</span> – произвольное
выражение на встроенном языке. Его результатом должен быть объект, обработчик
события которого удаляется.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Term">&lt;ИмяСобытия&gt;</span> – идентификатор (имя)
события.</p>

<p class="Lang-parameter">&lt;ОбработчикСобытия&gt;</p>

<p class="MsoNormalCxSpFirst">Процедура/функция-обработчик события.</p>

<p class="MsoNormalCxSpLast">Обработчиком события может являться метод
объекта встроенного языка. Тогда <span class="Term">&lt;ОбработчикСобытия&gt;</span>
задается как <span class="Term">&lt;Выражение&gt;.&lt;ИмяОбработчика&gt;</span>,
где:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Term">&lt;Выражение&gt;</span> – произвольное
выражение на встроенном языке. Его результатом должен быть объект, метод
которого служит обработчиком события.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Term">&lt;ИмяОбработчика&gt;</span> – имя метода
обработчика события.</p>

<p class="MsoNormal">Также в качестве обработчика события может
быть задана процедура/функция, находящаяся в области видимости. В этом случае
обработчик события задается как имя процедуры/функции.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">УдалитьОбработчик Накладная<span class="operator">.</span>ПриЗаписи<span class="operator">,</span> Обработка<span class="operator">.</span>ПриЗаписиДокумента<span class="operator">;</span></pre>

<p class="Lang">Функция (Function)</p>

<p class="Lang-subheader">Описание:</p>

<p class="MsoNormalCxSpFirst">Ключевое слово <span class="Term">Функция</span>
начинает секцию исходного текста функции, выполнение которой можно инициировать
из любой точки программного модуля, просто указав <span class="Term">ИмяФункции</span>
со списком параметров (если параметры не передаются, то круглые скобки, тем не
менее, обязательны). Если в модуле приложения или общем программном модуле в
теле описания функции использовано ключевое слово <span class="Term">Экспорт</span>,
то это означает, что данная функция является доступной из всех других
программных модулей конфигурации.</p>

<p class="MsoNormalCxSpMiddle">Выполнение функции заканчивается оператором <span class="Term">Возврат</span>.
Функции отличаются от процедур только тем, что возвращают <span class="Term">ВозвращаемоеЗначение</span>.
Конец программной секции функции определяется по оператору <span class="Term">КонецФункции</span>.</p>

<p class="MsoNormalCxSpMiddle">Вызов любой функции в тексте программного
модуля можно записывать как вызов процедуры, т. е. в языке
допускается не принимать от функции возвращаемое значение.</p>

<p class="MsoNormalCxSpMiddle">Если ключевое слово <span class="Term">Возврат</span>
в теле функции не указано или строка модуля, его содержащая, не выполнена, то
функция возвращает значение типа <span class="Term">Неопределено</span>.</p>

<p class="MsoNormalCxSpLast">Переменные, объявленные в теле функции в
разделе <span class="Interface">Объявления локальных переменных</span>, являются локальными
переменными данной функции, поэтому доступны только в этой функции (за исключением
случая передачи их как параметров при вызове других процедур, функций или
методов).</p>

<p class="Note"><span class="Note">Примечание.</span> Ключевые слова <span class="Term">Функция</span>,
<span class="Term">КонецФункции</span>
являются не операторами, а операторными скобками, поэтому не должны
заканчиваться точкой с запятой (это может приводить к ошибкам выполнения модуля).</p>

<p class="Lang-subheader">Синтаксис:</p>

<p class="MsoNormalCxSpFirst"><span class="Term">Функция &lt;ИмяФункции&gt;([[Знач] &lt;Парам
1&gt;[=&lt;ДефЗнач&gt;], ... ,[Знач] &lt;Парам
N&gt;[=&lt;ДефЗнач&gt;]])[Экспорт]</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Объявления локальных переменных;</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы;</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">...</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">Возврат &lt;Возвращаемое значение&gt;;</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы;</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">...</span></p>

<p class="MsoNormalCxSpLast"><span class="Term">КонецФункции</span></p>

<p class="Lang-subheader">Англоязычный синтаксис:</p>

<p class="MsoNormalCxSpFirst"><span class="Term">Function &lt;ИмяФункции&gt;([[Val] &lt;Парам 1&gt;[=&lt;ДефЗнач&gt;],
... ,[Val] &lt;Парам N&gt;[=&lt;ДефЗнач&gt;]])[Export]</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Объявления локальных переменных;</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы;</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">...</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">Return &lt;Возвращаемое значение&gt;;</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">// Операторы;</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">...</span></p>

<p class="MsoNormalCxSpLast"><span class="Term">EndFunction</span></p>

<p class="Lang-subheader">Параметры:</p>

<p class="Lang-parameter">&lt;ИмяФункции&gt;</p>

<p class="MsoNormal">Назначает имя функции.</p>

<p class="Lang-parameter">Знач</p>

<p class="MsoNormal">Необязательное ключевое слово, которое
указывает на то, что следующий за ним параметр передается по значению, т. е.
изменение значения формального параметра при выполнении функции никак не
повлияет на фактический параметр, переданный при вызове функции. Если это ключевое
слово не указано, то параметр функции передается по ссылке, то есть изменение
внутри функции значения формального параметра приведет к изменению значения соответствующего
фактического параметра.</p>

<p class="Lang-parameter">&lt;Парам 1&gt;, ..., &lt;Парам N&gt;</p>

<p class="MsoNormal">Необязательный список формальных параметров,
разделяемых запятыми. Значения формальных параметров должны соответствовать
значениям передаваемых при вызове функции фактических параметров. В этом списке
определяются имена каждого из параметров так, как они используются в тексте функции.
Список формальных параметров может быть пуст.</p>

<p class="Lang-parameter">=&lt;ДефЗнач&gt;</p>

<p class="MsoNormal">Необязательная установка значения параметра
по умолчанию. Параметры с установленными значениями по умолчанию можно располагать
в любом месте списка формальных параметров (подробнее см. раздел «Передача
параметров процедур и функций»).</p>

<p class="Lang-parameter">Экспорт</p>

<p class="MsoNormal">Необязательное ключевое слово, которое
указывает на то, что данная функция является доступной из других программных модулей.</p>

<p class="Lang-parameter">// Объявления локальных переменных</p>

<p class="MsoNormal">Объявляются локальные переменные, на которые
можно ссылаться только в рамках этой функции (см. оператор <span class="Term">Перем</span>).</p>

<p class="Lang-parameter">// Операторы</p>

<p class="MsoNormal">Исполняемые операторы функции.</p>

<p class="Lang-parameter">Возврат &lt;Возвращаемое значение&gt;</p>

<p class="MsoNormalCxSpFirst">Ключевое слово, которое завершает выполнение
функции и возвращает указанное значение в выражение, в котором используется функция.</p>

<p class="MsoNormalCxSpLast">В качестве возвращаемого значения может
выступать выражение или переменная, значение которого содержит результат обращения
к функции.</p>

<p class="Lang-parameter">КонецФункции</p>

<p class="MsoNormal">Ключевое слово, обозначающее конец исходного
текста функции.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">Перем</span> Глоб<span class="operator">;</span>
<span class="comment">// Описание функции</span>
<span class="keyword">Функция</span> МояФункция<span class="operator">(</span>Пар1<span class="operator">,</span> Пар2<span class="operator">,</span> Пар3<span class="operator">)</span> <span class="keyword">Экспорт</span>
    Глоб <span class="operator">=</span> Глоб <span class="operator">+</span> Пар1 <span class="operator">+</span> Пар2 <span class="operator">+</span> Пар3<span class="operator">;</span>
    <span class="keyword">Возврат</span> Глоб<span class="operator">;</span>
<span class="keyword">КонецФункции</span>
Глоб <span class="operator">=</span> <span class="number">123</span><span class="operator">;</span>
Рез <span class="operator">=</span> МояФункция<span class="operator">(</span><span class="number">5</span><span class="operator">,</span> <span class="number">6</span><span class="operator">,</span> <span class="number">7</span><span class="operator">)</span><span class="operator">;</span> <span class="comment">// Вызов функции</span></pre>

<a id="TI000000148" class="bookmark" name="issogl1_4.7_основные_приемы_работы"><h2>4.7. Основные приемы работы</h2></a>

<a id="TI000000149" class="bookmark" name="issogl2_4.7.1_обращение_к_свойствам_объектов"><h3>4.7.1. Обращение к свойствам объектов</h3></a>

<p class="MsoNormal">Помимо
основного обращения через точку, в языке системы «1С:Предприятие» предусмотрен
механизм обращения к свойствам объектов по строке с именем свойства с помощью
оператора <span class="Term">[]</span> (квадратные скобки).</p>

<p class="Lang">Свойство
объекта ([])</p>

<p class="Lang-subheader">Описание:</p>

<p class="MsoNormal">Такая
конструкция позволяет обращаться к свойствам объектов так же, как это делается
через точку с указанием имени свойства.</p>

<p class="Lang-subheader">Синтаксис:</p>

<p class="MsoNormal"><span class="Term">&lt;Объект&gt;[&lt;Имя
свойства&gt;]</span></p>

<p class="Lang-subheader">Параметры:</p>

<p class="Lang-parameter">&lt;Объект&gt;</p>

<p class="MsoNormal">Объект,
к свойству которого идет обращение.</p>

<p class="Lang-parameter">&lt;Имя
свойства&gt;</p>

<p class="MsoNormal">Тип
<span class="Term">Строка</span>. Имя свойства, к которому необходимо
обратиться.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">Спр <span class="operator">=</span> Справочники<span class="operator">.</span>Номенклатура<span class="operator">.</span>НайтиПоКоду<span class="operator">(</span>ИскомыйКод<span class="operator">)</span><span class="operator">;</span>
<span class="comment">// Обращение к наименованию справочника по строке с именем свойства</span>
A <span class="operator">=</span> Спр<span class="operator">[</span><span class="string">&quot;Наименование&quot;</span><span class="operator">]</span><span class="operator">;</span>
<span class="comment">// Обращение к наименованию справочника по имени свойства</span>
A <span class="operator">=</span> Спр<span class="operator">.</span>Наименование<span class="operator">;</span>
<span class="comment">// Оба эти обращения к свойству абсолютно равнозначны</span></pre>

<a id="TI000000150" class="bookmark" name="issogl2_4.7.2_дополнение_контекста_объектов_и_форм"><h3>4.7.2. Дополнение контекста объектов и форм</h3></a>

<p class="MsoNormal">В
языке есть возможность при обращении к объектам и формам извне, из других
программных модулей, обращаться к переменным, процедурам и функциям этих модулей,
как к свойствам и методам самих объектов и форм. Можно обращаться к тем переменным,
процедурам и функциям, которые объявлены с ключевым словом <span class="Term">Экспорт</span>. Для форм дополнительно возможно обращение
к реквизитам формы.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="comment">// Пример использования процедуры печати документов из журнала</span>
<span class="comment">// документов. Допустим, у нас есть несколько различных документов,</span>
<span class="comment">// причем у всех есть процедура Печать(). В модуле журнала</span>
<span class="comment">// документов располагается кнопка &quot;Печать&quot;, которая</span>
<span class="comment">// вызывает процедуру печати текущего документа журнала.</span>
<span class="keyword">Процедура</span> ПечатьНажатие<span class="operator">(</span>Элемент<span class="operator">)</span>
    <span class="comment">// Получим текущий документ, на котором установлен курсор.</span>
    ТекДок <span class="operator">=</span> ЭлементыФормы<span class="operator">.</span>ЖурналСписок<span class="operator">.</span>ТекущаяСтрока<span class="operator">;</span>
    <span class="comment">// Получим основную форму текущего документа.</span>
    ФрмТекДок <span class="operator">=</span> ТекДок<span class="operator">.</span>ПолучитьФорму<span class="operator">(</span><span class="operator">)</span><span class="operator">;</span>
    <span class="comment">// Вызовем процедуру печати, расположенную</span>
    <span class="comment">// в модуле формы документа.</span>
    ФрмТекДок<span class="operator">.</span>Печать<span class="operator">(</span><span class="operator">)</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span></pre>

<a id="TI000000151" class="bookmark" name="issogl2_4.7.3_передача_параметров_процедур_и_функций"><h3>4.7.3. Передача параметров процедур и функций</h3></a>

<p class="MsoNormalCxSpFirst">Передача параметров процедур и функций
выполняется двумя способами. Один способ называется передачей по
ссылке и представляет собой передачу не конкретного значения параметра,
а адреса памяти (ссылки на переменную), где расположено это значение. Изменение
переданного значения в вызываемой процедуре или функции приведет к изменению
передаваемой переменной в вызывающем методе.</p>

<p class="MsoNormalCxSpMiddle">Другой
способ называется передачей <span class="Bold">по значению</span> и представляет
собой передачу копии значения параметра. В этом случае изменение переданного
значения в вызываемой процедуре или функции не приведет к изменению значения
передаваемой переменной в вызывающем методе.</p>

<p class="MsoNormalCxSpLast">В то
же время механизм передачи параметров процедур и функций зависит от того, какой
вызов будет выполняться:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
вызов без передачи управления между клиентом и
сервером (только на клиенте или только на сервере);</p>

<p class="MsoListBulletCxSpLast">&#9679; 
вызов с передачей управления между клиентом и
сервером.</p>

<p class="MsoNormal">Подробнее
рассмотрим каждый из способов вызова.</p>

<a id="TI000000152" class="bookmark" name="issogl3_4.7.3.1_вызов_без_передачи_управления_с_клиента_на_сервер"><h4>4.7.3.1. Вызов без передачи управления с клиента на сервер</h4></a>

<p class="MsoNormal">Если
вызов происходит без передачи управления между клиентом и сервером (вызов
происходит только на клиентской или только на серверной стороне), то по
умолчанию параметры передаются по ссылке. При этом изменение формального
параметра ведет к изменению соответствующего фактического параметра. С помощью
модификатора <span class="Term">Знач</span> перед именем формального параметра можно
указать, что параметр передается по значению. В этом случае нельзя изменить
значение фактического параметра путем присвоения формальному параметру
какого-либо значения.</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="preprocessor">&amp;НаКлиенте</span>
<span class="keyword">Процедура</span> МояПроцедура<span class="operator">(</span><span class="operator">)</span>
    А <span class="operator">=</span> <span class="number">100</span><span class="operator">;</span>
    ПоСсылке<span class="operator">(</span>А<span class="operator">)</span><span class="operator">;</span>
    <span class="comment">// Переменная А = 40, так как в теле процедуры значение</span>
    <span class="comment">// параметра Параметр1 изменено на 40.</span>
    <span class="comment">// Изменение переменной А произошло потому, что параметр передавался по ссылке</span>
    А <span class="operator">=</span> <span class="number">100</span><span class="operator">;</span>
    ПоЗначению<span class="operator">(</span>А<span class="operator">)</span><span class="operator">;</span>    
    <span class="comment">// Переменная А = 100, несмотря на то, что в в теле процедуры</span>
    <span class="comment">// значение параметра Параметр1 изменено на 40.</span>
    <span class="comment">// Изменение переменной А не произошло, так как параметр передавался по значению</span>
<span class="keyword">КонецПроцедуры</span>
<span class="preprocessor">&amp;НаКлиенте</span>
<span class="keyword">Процедура</span> ПоСсылке<span class="operator">(</span>Параметр1<span class="operator">)</span>
    Параметр1 <span class="operator">=</span> <span class="number">40</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span>
<span class="preprocessor">&amp;НаКлиенте</span>
<span class="keyword">Процедура</span> ПоЗначению<span class="operator">(</span><span class="keyword">Знач</span> Параметр1<span class="operator">)</span>
    Параметр1 <span class="operator">=</span> <span class="number">40</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span></pre>

<p class="MsoNormal">Однако
необходимо помнить следующую особенность: если параметром передается агрегатный
объект, то невозможно присвоить фактическому параметру другое значение, но
возможно изменить сам переданный объект. Например, если в процедуру по значению
передан массив, то можно очистить этот массив методом <span class="Term">Очистить()</span>, но нельзя изменить в вызывающей
процедуре само значение параметра.</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="preprocessor">&amp;НаКлиенте</span>
<span class="keyword">Процедура</span> МояПроцедура<span class="operator">(</span><span class="operator">)</span>
    Массив <span class="operator">=</span> <span class="keyword">Новый</span> Массив<span class="operator">;</span>
    Массив<span class="operator">.</span>Добавить<span class="operator">(</span><span class="number">12</span><span class="operator">)</span><span class="operator">;</span>
    Массив<span class="operator">.</span>Добавить<span class="operator">(</span><span class="number">18</span><span class="operator">)</span><span class="operator">;</span>
    <span class="comment">// В массиве есть два элемента</span>
    ПоЗначению<span class="operator">(</span>Массив<span class="operator">)</span><span class="operator">;</span>
    <span class="comment">// Массив пустой, но это по-прежнему массив, а не Число</span>
<span class="keyword">КонецПроцедуры</span>
<span class="comment">// Параметр передается по значению</span>
<span class="preprocessor">&amp;НаКлиенте</span>
<span class="keyword">Процедура</span> ПоЗначению<span class="operator">(</span><span class="keyword">Знач</span> Параметр<span class="operator">)</span>
    <span class="comment">// В массиве два значения</span>
    Параметр<span class="operator">.</span>Очистить<span class="operator">(</span><span class="operator">)</span><span class="operator">;</span>
    <span class="comment">// В массиве нет значений!</span>
    <span class="comment">// Меняем формальный параметр</span>
    Параметр <span class="operator">=</span> <span class="number">14</span><span class="operator">;</span>
    <span class="comment">// Изменено значение только формального параметра</span>
<span class="keyword">КонецПроцедуры</span></pre>

<p class="MsoNormal">Также
следует учитывать особенности хранения переменных при организации вызовов:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="preprocessor">&amp;НаКлиенте</span>
<span class="keyword">Процедура</span> ТестоваяПроцедура<span class="operator">(</span><span class="operator">)</span>
    ЗначениеА <span class="operator">=</span> <span class="keyword">Новый</span> Массив<span class="operator">;</span>
    ЗначениеА<span class="operator">.</span>Добавить<span class="operator">(</span><span class="number">1</span><span class="operator">)</span><span class="operator">;</span>
    ЗначениеА<span class="operator">.</span>Добавить<span class="operator">(</span><span class="number">2</span><span class="operator">)</span><span class="operator">;</span>
    ЗначениеБ <span class="operator">=</span> ЗначениеА<span class="operator">;</span>
    <span class="comment">// обращение к любой переменной: ЗначениеА или ЗначениеБ вызывает</span>
    <span class="comment">// изменение одного и того же масива</span>
    МояПроцедура<span class="operator">(</span>ЗначениеА<span class="operator">,</span> ЗначениеБ<span class="operator">)</span><span class="operator">;</span>
    <span class="comment">// После завершения вызова процедуры обе переменные (ЗначениеА и ЗначениеБ)</span>
    <span class="comment">// ссылаются на один массив.</span>
    <span class="comment">// В массиве находятся следующие значения:</span>
    <span class="comment">// ЗначениеА[0] = ЗначениеБ[0] = &quot;А&quot;</span>
    <span class="comment">// ЗначениеА[1] = ЗначениеБ[1] = &quot;Б&quot;</span>
<span class="keyword">КонецПроцедуры</span>
<span class="preprocessor">&amp;НаКлиенте</span>
<span class="keyword">Процедура</span> МояПроцедура<span class="operator">(</span>Параметр1<span class="operator">,</span> Параметр2<span class="operator">)</span>
    <span class="comment">// Несмотря на то, что параметров два, фактически работа происходит с одним массивом</span>
    Параметр1<span class="operator">[</span><span class="number">0</span><span class="operator">]</span> <span class="operator">=</span> <span class="number">5</span><span class="operator">;</span>
    Параметр1<span class="operator">[</span><span class="number">1</span><span class="operator">]</span> <span class="operator">=</span> <span class="number">6</span><span class="operator">;</span>
    Параметр2<span class="operator">[</span><span class="number">0</span><span class="operator">]</span> <span class="operator">=</span> <span class="string">&quot;А&quot;</span><span class="operator">;</span>
    Параметр2<span class="operator">[</span><span class="number">1</span><span class="operator">]</span> <span class="operator">=</span> <span class="string">&quot;Б&quot;</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span></pre>

<p class="MsoNormalCxSpFirst">В данном
примере следует обратить внимание на тот факт, что операция присваивания <span class="Term">ЗначениеБ = ЗначениеА;</span> (в процедуре <span class="Term">ТестоваяПроцедура()</span>) не приведет к созданию
копии массива, который находится в переменной <span class="Term">ЗначениеА</span>. Обе переменные будут ссылаться на <span class="Bold">один и тот же</span> массив!</p>

<p class="MsoNormalCxSpLast">При
этом в процедуру <span class="Term">МояПроцедура()</span> параметры передаются по ссылке,
следовательно, при изменении двух разных формальных параметров происходит
изменение одного физического массива.</p>

<a name="_ref458092587"></a><a id="TI000000153" class="bookmark" name="issogl3_4.7.3.2_вызов_с_передачей_управления_с_клиента_на_сервер"><h4>4.7.3.2. Вызов с передачей управления с клиента на сервер</h4></a>

<p class="MsoNormal">Вызов
процедур и функций с передачей управления между клиентом и сервером характерен
тем, что в общем случае при таком вызове изменяется компьютер, на котором
происходит работа вызываемого метода. Это происходит потому, что (в общем случае)
клиент работает на одном компьютере, а сервер – на другом. Следовательно,
нельзя говорить о передаче параметров по ссылке, т. к. один компьютер
не может получить прямого доступа к памяти другого компьютера. При работе в
файл-серверном варианте клиент и сервер представляют собой один компьютер, но
на логику взаимодействия это не влияет. Поэтому передача параметров в случае
клиент-серверного взаимодействия происходит особым образом:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
При передаче управления с клиента на сервер (и
обратно) <span class="Bold">всегда</span> передаются <span class="Bold">копии</span>
параметров. При вызове серверной процедуры или функции с клиента происходит
создание копии фактического параметра и передача этой копии на сторону сервера.
При возврате управления с сервера на клиента также происходит создание копии
формального параметра (с которым происходила работы в вызванной процедуре или
функции) для передачи обратно на клиента.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Если формальный параметр указан с модификатором <span class="Term">Знач</span>, то значение параметра будет передаваться
только при вызове процедуры или функции и не будет передаваться обратно при
возврате управления на клиента.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Если для нескольких формальных параметров
указывается одно и то же фактическое значение, то создается столько копий
фактического значения, для скольких формальных параметров используется
значение.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Если в качестве формальных параметров указано
значение одной и той же переменной, то после возврата управления с сервера
значение этой переменной будет установлено в значение самого правого
формального параметра (без модификатора <span class="Term">Знач</span>), который изменялся в вызываемой функции.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Если во время исполнения серверного метода
произошло исключение, то значения параметров метода, переданных по ссылке,
будут неопределены при возврате на сторону клиента.</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="preprocessor">&amp;НаКлиенте</span>
<span class="keyword">Процедура</span> ТестоваяПроцедура<span class="operator">(</span>Команда<span class="operator">)</span>
    ЗначениеА <span class="operator">=</span> <span class="keyword">Новый</span> Массив<span class="operator">;</span>
    ЗначениеА<span class="operator">.</span>Добавить<span class="operator">(</span><span class="number">1</span><span class="operator">)</span><span class="operator">;</span>
    ЗначениеА<span class="operator">.</span>Добавить<span class="operator">(</span><span class="number">2</span><span class="operator">)</span><span class="operator">;</span>
    ЗначениеБ <span class="operator">=</span> ЗначениеА<span class="operator">;</span>
    <span class="comment">// обращение к любой переменной: ЗначениеА или ЗначениеБ вызывает</span>
    <span class="comment">// изменение одного и того же масива</span>
    <span class="comment">// При вызове процедуры создается копия массива для каждого формального параметра</span>
    СервернаяПроцедура<span class="operator">(</span>ЗначениеА<span class="operator">,</span> ЗначениеБ<span class="operator">)</span><span class="operator">;</span>
    <span class="comment">// После завершения вызова процедуры:</span>
    <span class="comment">// 1. Переменные ЗначениеА и ЗначениеБ ссылаются на разные массивы</span>
    <span class="comment">// 2. В массивах находятся разные значения</span>
    <span class="comment">// ЗначениеА[0] = 5</span>
    <span class="comment">// ЗначениеА[1] = 6</span>
    <span class="comment">// ЗначениеБ[0] = &quot;А&quot;</span>
    <span class="comment">// ЗначениеБ[1] = &quot;Б&quot;</span>
<span class="keyword">КонецПроцедуры</span>
<span class="preprocessor">&amp;НаСервере</span>
<span class="keyword">Процедура</span> СервернаяПроцедура<span class="operator">(</span>Параметр1<span class="operator">,</span> Параметр2<span class="operator">)</span>
    <span class="comment">// Так как передаются копии, для каждого формального параметра на сервере создан &quot;свой&quot; массив</span>
    Параметр1<span class="operator">[</span><span class="number">0</span><span class="operator">]</span> <span class="operator">=</span> <span class="number">5</span><span class="operator">;</span>
    Параметр1<span class="operator">[</span><span class="number">1</span><span class="operator">]</span> <span class="operator">=</span> <span class="number">6</span><span class="operator">;</span>
    Параметр2<span class="operator">[</span><span class="number">0</span><span class="operator">]</span> <span class="operator">=</span> <span class="string">&quot;А&quot;</span><span class="operator">;</span>
    Параметр2<span class="operator">[</span><span class="number">1</span><span class="operator">]</span> <span class="operator">=</span> <span class="string">&quot;Б&quot;</span><span class="operator">;</span>
    <span class="comment">// С сервера будут возвращаться копии переменных Параметр1 и Параметр2</span>
<span class="keyword">КонецПроцедуры</span></pre>

<p class="MsoNormal">Следует
всегда помнить о том, что при передаче параметров на сервер создается копия
значения. Это позволит избежать труднодиагностируемых ошибок при работе
системы. Рассмотрим пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="preprocessor">&amp;НаКлиенте</span>
<span class="keyword">Процедура</span> ТестоваяПроцедура<span class="operator">(</span>Команда<span class="operator">)</span>
    ЗначениеА <span class="operator">=</span> <span class="keyword">Новый</span> Массив<span class="operator">;</span>
    ЗначениеА<span class="operator">.</span>Добавить<span class="operator">(</span><span class="number">1</span><span class="operator">)</span><span class="operator">;</span>
    ЗначениеА<span class="operator">.</span>Добавить<span class="operator">(</span><span class="number">2</span><span class="operator">)</span><span class="operator">;</span>
    ЗначениеБ <span class="operator">=</span> ЗначениеА<span class="operator">;</span>
    Структура <span class="operator">=</span> <span class="keyword">Новый</span> Структура<span class="operator">(</span><span class="string">&quot;Ключ1, Ключ2&quot;</span><span class="operator">,</span> ЗначениеА<span class="operator">,</span> ЗначениеА<span class="operator">)</span><span class="operator">;</span>
    СервернаяПроцедура<span class="operator">(</span>Структура<span class="operator">)</span><span class="operator">;</span>
    ЗначениеА<span class="operator">[</span><span class="number">0</span><span class="operator">]</span> <span class="operator">=</span> <span class="number">9</span><span class="operator">;</span>
    ЗначениеА<span class="operator">[</span><span class="number">1</span><span class="operator">]</span> <span class="operator">=</span> <span class="number">8</span><span class="operator">;</span>
    ЗначениеБ<span class="operator">[</span><span class="number">0</span><span class="operator">]</span> <span class="operator">=</span> <span class="string">&quot;C&quot;</span><span class="operator">;</span>
    ЗначениеБ<span class="operator">[</span><span class="number">1</span><span class="operator">]</span> <span class="operator">=</span> <span class="string">&quot;D&quot;</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span>
<span class="preprocessor">&amp;НаСервере</span>
<span class="keyword">Процедура</span> СервернаяПроцедура<span class="operator">(</span>Параметр1<span class="operator">)</span>
 Параметр1<span class="operator">.</span>Ключ1<span class="operator">[</span><span class="number">0</span><span class="operator">]</span> <span class="operator">=</span> <span class="string">&quot;0&quot;</span><span class="operator">;</span>
 Параметр1<span class="operator">.</span>Ключ1<span class="operator">[</span><span class="number">1</span><span class="operator">]</span> <span class="operator">=</span> <span class="string">&quot;1&quot;</span><span class="operator">;</span>
 Параметр1<span class="operator">.</span>Ключ2<span class="operator">[</span><span class="number">0</span><span class="operator">]</span> <span class="operator">=</span> <span class="string">&quot;2&quot;</span><span class="operator">;</span>
 Параметр1<span class="operator">.</span>Ключ2<span class="operator">[</span><span class="number">1</span><span class="operator">]</span> <span class="operator">=</span> <span class="string">&quot;3&quot;</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span></pre>

<p class="MsoNormal">После
завершения вызова процедуры <span class="Term">ТестоваяПроцедура()</span> будет наблюдаться
следующее состояние переменных:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Массивы <span class="Term">ЗначениеА</span> и <span class="Term">ЗначениеБ</span> идентичны и содержат значения «<span class="Interface">С</span>» в первом
элементе и значение «<span class="Term">D</span>» во втором элементе, т. к.
переменная <span class="Term">ЗначениеБ</span> указывает на массив из переменной <span class="Term">ЗначениеА</span> и значения этих переменных не передавались
на сервер.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
В переменной <span class="Term">Структура</span> будут находиться два массива:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
Со значениями «<span class="Interface">0</span>» и «<span class="Interface">1</span>» для
элементов массива, находящегося в элементе структуры с ключом <span class="Term">Ключ1</span>.</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
Со значениями «<span class="Interface">2</span>» и «<span class="Interface">3</span>» для
элементов массива, находящегося в элементе структуры с ключом <span class="Term">Ключ2</span>.</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
Такое поведение будет обусловлено тем, что при
вызове процедуры происходит создание копии не только самого параметра
(переменная <span class="Term">Структура</span>), но и всех объектов, находящихся в
этой структуре: два массива, которые изначально указывали на один массив со
значениями элементов «<span class="Interface">0</span>» и «<span class="Interface">1</span>».</p>

<a name="_ref393889318"></a><a id="TI000000154" class="bookmark" name="issogl3_4.7.3.3_общие_особенности_указания_параметров"><h4>4.7.3.3. Общие особенности указания параметров</h4></a>

<p class="MsoNormal">При передаче параметров в метод (процедуру
или функцию) различаются две ситуации: когда параметр <span class="Bold">опущен</span>
и когда параметр <span class="Bold">пропущен</span>. Пропущенный параметр – это
параметр, значение которого явным образом не указано. Если пропускается несколько
параметров, то в строке с вызовом метода каждый из пропускаемых параметров
должен быть отмечен «своей» разделительной запятой.</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">Процедура</span> МояПроцедура<span class="operator">(</span>Параметр1<span class="operator">,</span> Параметр2<span class="operator">)</span>
…
<span class="keyword">КонецПроцедуры</span>
<span class="comment">// Параметр Параметр1 – пропущен</span>
МояПроцедура<span class="operator">(</span> <span class="operator">,</span><span class="number">1</span><span class="operator">)</span><span class="operator">;</span></pre>

<p class="MsoNormalCxSpFirst">Опущенным может быть только один или
несколько параметров, указанных справа в списке формальных параметрах при описании
метода. При этом опускать можно только параметры, которые имеют значение по
умолчанию. Если опущеными будут пармаетры, не имеющие значений по умолчанию, то
при компиляции данного программного кода будет выдана ошибка о несоответствии
числа параметров.</p>

<p class="MsoNormalCxSpLast">Значение опущенного параметра (одного или
нескольких) определяется значениями по умолчанию для опускаемых параметров.
Значение пропускаемого параметра равно значению по умолчанию (если таковое задано)
или значению <span class="Term">Неопределено</span>,
если для формального параметра не задано значение по умолчанию.</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">Процедура</span> МояПроцедура<span class="operator">(</span>Параметр1<span class="operator">,</span> Параметр2 <span class="operator">=</span> <span class="string">&quot;по умолчанию&quot;</span><span class="operator">,</span> Параметр3 <span class="operator">=</span> <span class="number">16</span><span class="operator">)</span>
…
<span class="keyword">КонецПроцедуры</span>
<span class="comment">// Параметр Параметр1 пропущен, значение параметра = Неопределено</span>
<span class="comment">// Параметр Параметр2 указан, значение параметра = 1</span>
МояПроцедура<span class="operator">(</span> <span class="operator">,</span><span class="number">1</span><span class="operator">)</span><span class="operator">;</span>
<span class="comment">// Параметр Параметр1 пропущен, значение параметра = Неопределено</span>
<span class="comment">// Параметр Параметр2 пропущен, значение параметра = &quot;по умолчанию&quot;</span>
<span class="comment">// Параметр Параметр3 опущен, значение параметра = 16</span>
МояПроцедура<span class="operator">(</span><span class="operator">,</span> <span class="operator">,</span><span class="operator">)</span><span class="operator">;</span>
<span class="comment">// Ошибка несоответствия количества параметров</span>
МояПроцедура<span class="operator">(</span><span class="operator">)</span><span class="operator">;</span></pre>

<p class="MsoNormalCxSpFirst">Если при вызове метода параметры не передаются
(пустой список параметров), то, тем не менее, круглые скобки обязательно
требуется ставить.</p>

<p class="MsoNormalCxSpMiddle">Не следует передавать с клиента на сервер (и
обратно), а также выполнять сериализацию данных, содержащих циклические ссылки.
В этом случае будет выдаваться ошибка и сеанс будет завершаться.</p>

<p class="MsoNormalCxSpLast">При передаче с клиента на сервер и обратно
строковых значений следует помнить, что эти значения не должны содержать символы,
недопустимые с точки зрения спецификации XML версии 1.0 (<a href="http://www.w3.org/TR/xml/" target="_blank">http://www.w3.org/TR/xml/</a>).</p>

<p class="Note"><span class="Note">Совет.</span> На стороне сервера такую
проверку можно выполнить с помощью функции <span class="Term">НайтиНедопустимыеСимволыXML()</span>.</p>

<p class="MsoNormal">Для конструкторов различных объектов понятие
необязательности параметра трактуется особым образом. Если в описании конструктора
указано, что параметр является необязательным, то это означает, что параметр
может быть опущен, но не гарантируется, что этот параметр может быть пропущен.
Опущенный параметр всегда имеет значение по умолчанию, а пропущенный параметр всегда
получит значение <span class="Term">Неопределено</span>.
В этом случае поведение конструктора зависит от реализации. Некоторые
конструкторы могут воспринимать значение <span class="Term">Неопределено</span>
как указание использовать некоторое значение по умолчанию, некоторые –
воспринимают это значение буквально (с возможным формированием ошибки времени
исполнения). Можно сформулировать следующую рекомендацию по использованию
необязательных параметров:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Не рекомендуется пропускать необязательные
параметры.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Если конструктор обладает необязательными
параметрами – рекомендуется опускать все необязательные параметры, если не
требуется явное указание какого-либо из них. В противном случае рекомендуется
явно указывать все необязательные параметры, предшествующие параметру, который
вы хотите указать явно.</p>

<a id="TI000000155" class="bookmark" name="issogl2_4.7.4_работа_с_коллекциями_значений"><h3>4.7.4. Работа с коллекциями значений</h3></a>

<p class="MsoNormalCxSpFirst">Ряд
объектов в языке системы «1С:Предприятие» представляет собой коллекции
значений. Большинство коллекций имеют набор схожих методов и свойств, таких как
<span class="Term">Количество()</span>, <span class="Term">Индекс()</span>, <span class="Term">Добавить()</span>, <span class="Term">Удалить()</span> и т. д. В качестве свойств
коллекции, как правило, выступают ее элементы. Для коллекций доступен обход элементов
коллекции посредством конструкции <span class="Term">Для каждого</span> – <span class="Term">Из</span> – <span class="Term">Цикл</span>. Для большинства коллекций доступно
обращение к элементам коллекции с помощью оператора <span class="Term">[&lt;Аргумент&gt;]</span> (квадратные скобки). Как
правило, в качестве аргумента передается индекс элемента коллекции. Индексирование
элементов коллекции начинается с 0. Это означает, что индекс последнего
элемента равен количеству элементов в коллекции минус 1.</p>

<p class="MsoNormalCxSpMiddle">Если
в процессе обхода коллекции происходит удаление или другие изменения состава
элементов, то дальнейшее поведение системы не определено.</p>

<p class="MsoNormalCxSpLast">Подробнее
описание конкретных коллекций, их свойств, методов и приемов работы с ними см.
в описаниях конкретных объектов.</p>

<a id="TI000000156" class="bookmark" name="issogl2_4.7.5_использование_номеров_и_индексов"><h3>4.7.5. Использование номеров и индексов</h3></a>

<p class="MsoNormalCxSpFirst">В
языке системы «1С:Предприятие» есть ряд объектов, отдельные части которых имеют
нумерацию. К таким объектам, например, относится строка, символы которой имеют
номер в строке, или табличный документ, строки и колонки которого имеют номер,
и т. п. При обращении к частям объектов обычно используется понятие <span class="Bold">Номер</span>. Номера начинаются с 1.</p>

<p class="MsoNormalCxSpLast">При
обращении к элементам коллекций используется понятие <span class="Bold">Индекс</span>.
Индексирование элементов коллекций начинается с 0.</p>

<a id="TI000000157" class="bookmark" name="issogl2_4.7.6_работа_с_системными_перечислениями"><h3>4.7.6. Работа с системными перечислениями</h3></a>

<p class="MsoNormal">Во
встроенном языке системы «1С:Предприятие» существует понятие системных
перечислений. Они предназначены для определения некоторого ограниченного набора
предопределенных значений. Доступ к системным перечислениям осуществляется как
к свойствам глобального контекста его имени. Конкретные значения указываются
через точку от имени системного перечисления. Системные перечисления используются,
как правило, для задания значений параметров системных методов или свойств объектов,
а также в качестве возвращаемых значений методов.</p>

<a id="TI000000158" class="bookmark" name="issogl2_4.7.7_работа_с_предопределенными_значениями"><h3>4.7.7. Работа с предопределенными значениями</h3></a>

<a id="TI000000159" class="bookmark" name="issogl3_4.7.7.1_с_помощью_менеджера_объекта"><h4>4.7.7.1. С помощью менеджера объекта</h4></a>

<p class="MsoNormal">Получить предопределенное значение на
стороне сервера «1С:Предприятия» можно с помощью менеджера соответствующего
объекта. Строка, определяющая получаемый реквизит, имеет следующий вид:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">ТипПредопределенногоЗначения<span class="operator">.</span>ИмяОбъектаМетаданных<span class="operator">.</span>Значение</pre>

<p class="MsoNormal">Рассмотрим составляющие этой строки
подробнее:</p>

<p class="MsoListBullet">&#9679; 
<span class="Term">ТипПредопределенногоЗначения</span> – для
получения предопределенных значений доступно указание следующих типов данных
(написание во множественном числе):</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
<span class="Term">Справочники</span>,</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
<span class="Term">ПланыВидовХарактеристик</span>,</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
<span class="Term">ПланыСчетов</span>,</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
<span class="Term">ПланыВидовРасчета</span>,</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
<span class="Term">Перечисления</span>.</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Term">ИмяОбъектаМетаданных</span> – указывается имя
объекта метаданных так, как оно задано в конфигураторе.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Term">Значение</span> – может быть одним из следующих:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
для перечислений указывается имя значения
перечисления;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
для получения предопределенного значения
указывается его имя, как оно задано в конфигураторе;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
<span class="Term">ТочкиМаршрута.ИмяТочки</span> – точка маршрута
бизнес-процесса.</p>

<p class="MsoNormal">В случае, если требуется получить точку
маршрута бизнес-процесса, строка, описывающая получаемое значение, будет выглядеть
следующим образом:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">БизнесПроцессы<span class="operator">.</span>ИмяОбъектаМетаданных<span class="operator">.</span>ТочкиМаршрута<span class="operator">.</span>ИмяТочкиМаршрута</pre>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="comment">// Получение значения перечисления.</span>
Вид <span class="operator">=</span> Перечисления<span class="operator">.</span>ВидыТоваров<span class="operator">.</span>Товар<span class="operator">;</span>
<span class="comment">// Получение предопределенных данных справочника.</span>
Элемент <span class="operator">=</span> Справочники<span class="operator">.</span>Валюта<span class="operator">.</span>Рубль<span class="operator">;</span>
<span class="comment">// Точка маршрута бизнес-процесса</span>
Точка <span class="operator">=</span> БизнесПроцесс<span class="operator">.</span>Согласование<span class="operator">.</span>ТочкиМаршрута<span class="operator">.</span>Одобрение<span class="operator">;</span></pre>

<a id="TI000000160" class="bookmark" name="issogl3_4.7.7.2_с_помощью_функции_предопределенноезначение"><h4>4.7.7.2. С помощью функции ПредопределенноеЗначение()</h4></a>

<p class="MsoNormalCxSpFirst">В связи с тем, что на стороне клиента
недоступны прикладные объекты, получение предопределенных реквизитов с помощью
менеджеров объектов становится невозможным. Поэтому для их получения существует
метод глобального контекста <span class="Term">ПредопределенноеЗначение()</span>.
Параметром этого метода является строка, описывающая то, какое предопределенное
значение требуется получить. Синтаксис описания предопределенного значения
совпадает с синтаксисом оператора <span class="Term">ЗНАЧЕНИЕ</span>
языка запросов (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 8. работа с запросами.htm?_=1496848987#_ref219028495">здесь</a>).</p>

<p class="MsoNormalCxSpLast">Строка, определяющая получаемый реквизит,
имеет следующий вид:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">ТипПредопределенногоЗначения<span class="operator">.</span>ИмяОбъектаМетаданных<span class="operator">.</span>Значение</pre>

<p class="MsoNormal">Рассмотрим составляющие этой строки
подробнее:</p>

<p class="MsoListBullet">&#9679; 
<span class="Term">ТипПредопределенногоЗначения</span> – для
получения предопределенных значений доступно указание следующих типов данных
(написание в единственном числе):</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
<span class="Term">Справочник</span>,</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
<span class="Term">ПланВидовХарактеристик</span>,</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
<span class="Term">ПланСчетов</span>,</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
<span class="Term">ПланВидовРасчета</span>,</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
<span class="Term">Перечисление</span>,</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
<span class="Term">БизнесПроцесс</span>.</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Term">ИмяОбъектаМетаданных</span> – указывается имя
объекта метаданных так, как оно задано в конфигураторе.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Term">Значение</span> – может быть одним из следующих:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
для перечислений указывается имя значения
перечисления;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
для получения предопределенного значения
указывается его имя, как оно задано в конфигураторе;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
<span class="Term">ТочкаМаршрута.ИмяТочки</span> – точка маршрута
бизнес-процесса;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
<span class="Term">ПустаяСсылка</span> – для получения пустой
ссылки.</p>

<p class="MsoNormal">В случае необходимости получить значение
системного перечисления параметр метода будет выглядеть следующим образом: <span class="Term">ИмяСистемногоПеречисления.ЗначениеСистемногоПеречисления</span>.</p>

<p class="Lang-subheader">Например:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">ТипДиаграммы <span class="operator">=</span> ПредопределенноеЗначение<span class="operator">(</span><span class="string">&quot;ТипДиаграммы.ВогнутаяПоверхность&quot;</span><span class="operator">)</span><span class="operator">;</span></pre>

<p class="MsoNormal">В случае если требуется получить точку
маршрута бизнес-процесса, строка, описывающая получаемое значение, будет выглядеть
следующим образом:</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="comment">// Получение значения перечисления.</span>
Вид <span class="operator">=</span> ПредопределенноеЗначение<span class="operator">(</span><span class="string">&quot;Перечисление.ВидыТоваров.Товар&quot;</span><span class="operator">)</span><span class="operator">;</span>
<span class="comment">// Получение значения пустой ссылки.</span>
ПустаяСсылка <span class="operator">=</span>
    ПредопределенноеЗначение<span class="operator">(</span><span class="string">&quot;Документ.РасходнаяНакл.ПустаяСсылка&quot;</span><span class="operator">)</span><span class="operator">;</span>
<span class="comment">// Получение предопределенных данных справочника.</span>
Элемент <span class="operator">=</span> ПредопределенноеЗначение<span class="operator">(</span><span class="string">&quot;Справочник.Валюта.Рубль&quot;</span><span class="operator">)</span><span class="operator">;</span>
<span class="comment">// Точка маршрута бизнес-процесса</span>
Точка <span class="operator">=</span>    ПредопределенноеЗначение<span class="operator">(</span><span class="string">&quot;БизнесПроцесс.Согласование. ТочкаМаршрута.Одобрение&quot;</span><span class="operator">)</span><span class="operator">;</span></pre>

<a name="_ref400551070"></a><a name="_ref405477268"></a><a name="_ref405477267"></a><a id="TI000001505" class="bookmark" name="issogl2_4.7.8_синхронные_и_асинхронные_методы_работы"><h3>4.7.8. Синхронные и асинхронные методы работы</h3></a>

<a name="_ref451869217"></a><a id="TI000001506" class="bookmark" name="issogl3_4.7.8.1_общая_информация"><h4>4.7.8.1. Общая информация</h4></a>

<p class="MsoNormalCxSpFirst">При работе с объектами, которые реализуют
некоторую, достаточно специфичную (работа с файлами, блокирующими окнами,
криптографией и внешними компонентами), функциональность, можно выделить два
различных подхода: <span class="Bold">синхронный</span> и <span class="Bold">асинхронный</span>.
Отличие в этих подходах определяется их названиями.</p>

<p class="MsoNormalCxSpMiddle">При синхронном подходе вызов какого-либо
метода объекта приведет к тому, что работа вызывающего кода будет остановлена
до тех пор, пока не завершится вызов метода объекта (со всеми вложенными
вызовами). Обычный вызов процедуры или функции встроенного языка является
синхронным вызовом.</p>

<p class="MsoNormalCxSpMiddle">При асинхронном подходе вызов метода объекта
выполняется как обычно, но управление сразу возвращается вызывающему коду и его
исполнение продолжается. При этом вызванный метод гарантирует, что после
завершения своей работы он оповестит о своем завершении заинтересованное «лицо»
(если такое оповещение требуется). Оповещение выполняется с помощью вызова
специального метода, который передается в вызываемый метод объекта. Все
вышеописанное верно только для тех методов, для которых заявлена поддержка
асинхронной работы.</p>

<p class="MsoNormalCxSpLast">В системе «1С:Предприятие» асинхронную технику
можно использовать для работы:</p>

<p class="MsoListNumberCxSpFirst">1. 
С блокирующими окнами (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 7. формы.htm?_=1496848987#_ref371695222">здесь</a>);</p>

<p class="MsoListNumberCxSpMiddle">2.  Расширением
работы с файлами (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 20. механизм временного хранилища, работа с файлами и картинками.htm?_=1496848987#_ref400971879">здесь</a>);</p>

<p class="MsoListNumberCxSpMiddle">3.  Расширением
криптографии (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 22. механизм криптографии.htm?_=1496848987#_ref400962578">здесь</a>);</p>

<p class="MsoListNumberCxSpLast">4.  Внешними
компонентами (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 34. внешние компоненты.htm?_=1496848987#_ref403661285">здесь</a>).</p>

<p class="MsoNormalCxSpFirst">Все варианты предполагают асинхронное
использование только на стороне клиентского приложения. На стороне сервера
по-прежнему доступны синхронные техники работы, за исключением работы с
блокирующими окнами (по причинам их отсутствия на стороне сервера).</p>

<p class="MsoNormalCxSpMiddle">С точки зрения имен методов встроенного
языка, асинхронные методы отличаются от синхронных тем, что имя асинхронного
метода (как правило) начинается со слов <span class="Term">Начать</span>
или <span class="Term">Показать</span>.
Знание этой особенности позволит упростить поиск аналогов синхронных методов.</p>

<p class="MsoNormalCxSpLast">Рассмотрим организацию асинхронного вызова
на примере отображения предупреждения. Для асинхронного вывода предупреждения
используется метод <span class="Term">ПоказатьПредупреждение()</span>.
Для того, чтобы сообщить о том, что диалог предупреждения закрыт, в этот метод
передается <span class="Bold">описание оповещения</span>. Описание оповещения
содержит имя и месторасположения процедуры, которая будет вызвана системой
после закрытия диалога. Соответственно, метод <span class="Term">ПоказатьПредупреждение()</span>
отличается от метода <span class="Term">Предупреждение()</span>
тем, что в методе <span class="Term">ПоказатьПредупреждение()</span>
существует еще один параметр, через который и передается описание оповещения.
Эта разница означает, что метод поддерживает асинхронную работу.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="preprocessor">&amp;НаКлиенте</span>
<span class="keyword">Процедура</span> ВыполнитьКоманду<span class="operator">(</span>Команда<span class="operator">)</span>
    ОбратныйВызов <span class="operator">=</span> <span class="keyword">Новый</span> ОписаниеОповещения<span class="operator">(</span><span class="string">&quot;ПредупреждениеЗавершение&quot;</span><span class="operator">,</span> ЭтотОбъект<span class="operator">)</span><span class="operator">;</span>
    ПоказатьПредупреждение<span class="operator">(</span>ОбратныйВызов<span class="operator">,</span> <span class="string">&quot;Закрытие формы обрабатывается отдельно&quot;</span><span class="operator">)</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span>
<span class="preprocessor">&amp;НаКлиенте</span>
<span class="keyword">Процедура</span> ПредупреждениеЗавершение<span class="operator">(</span>ДополнительныеПараметры<span class="operator">)</span> <span class="keyword">Экспорт</span>
    <span class="comment">// какие-то действия</span>
<span class="keyword">КонецПроцедуры</span></pre>

<p class="MsoNormalCxSpFirst">Для описания оповещения используется
специальный объект <span class="Term">ОписаниеОповещения</span>.
При его создании необходимо указать имя процедуры оповещения, место ее
(процедуры) расположения и дополнительные параметры, если необходимо.
Дополнительные параметры могут использоваться процедурой обработки оповещения
для своей работы. В приведенном выше примере дополнительные параметры не
указываются.</p>

<p class="MsoNormalCxSpMiddle">Также следует отметить, что процедуры
обработки оповещений (обратного вызова) могут располагаться только на стороне
клиентского приложения в модуле формы, общем модуле и модуле команды. Процедура
обратного вызова должна быть описана с ключевым словом <span class="Term">Экспорт</span>.</p>

<p class="MsoNormalCxSpMiddle">Таким образом, из приведенного примера
видно, что работа с асинхронными методами существенно изменяет подходы к разработке.
Основное изменение заключается в том, что единый фрагмент текста на встроенном
языке (для случаев использования синхронных методов) разбивается на несколько изолированных
фрагментов (в случае использования асинхронных методов).</p>

<p class="MsoNormalCxSpMiddle">Так, если в приведенном примере после
отображения предупреждения должны были выполняться какие-то действия (именно после
реакции пользователя, а не после вызова метода!), то эти действия следует
перенести в процедуру <span class="Term">ПредупреждениеЗавершение()</span>.</p>

<p class="MsoNormalCxSpMiddle">Более сложные алгоритмы, очевидно, приведут и
к более сложному рефакторингу (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 27. инструменты разработки.htm?_=1496848987#_ref371683520">здесь</a>) исходного текста. Возможно, что переработки
потребует сам алгоритм, а не только его реализация, которая может существенно усложниться.
Например, в синхронном режиме, если алгоритму требуется какая-либо реакция
пользователя, то эту реакцию получают непосредственно в том месте, где эта
реакция требуется. Если перерабатывать такой алгоритм с использованием
асинхронной техники, то логично разработать отдельный диалог, в котором
пользователь ответит на все возможные вопросы, а затем результат этого «опроса»
будет передан методу, который реализует нужный алгоритм. При этом вопросы «по
месту» больше задавать не требуется, а вместо этого следует анализировать
результаты «опроса» пользователя.</p>

<p class="MsoNormalCxSpLast">Кроме изменения подходов к разработке, при
использовании асинхронных методов несколько изменяется и подход к обработке
ошибок. Например, ошибки могут возникать в то время, когда код на встроенном
языке не исполняется и нельзя использовать конструкцию <span class="Term">Попытка …
Исключение</span>. Для обработки таких ситуаций при создании обработчика
оповещения можно указать процедуру, которая будет вызываться системой при
возникновении ошибки. Примером такой ошибки может быть ошибка, возникающая в
процессе удаления файлов.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="preprocessor">&amp;НаКлиенте</span>
<span class="keyword">Процедура</span> УдалитьВсеФайлыКаталога<span class="operator">(</span>ПутьККаталогу<span class="operator">)</span>
    ОбратныйВызов <span class="operator">=</span> <span class="keyword">Новый</span> ОписаниеОповещения<span class="operator">(</span><span class="string">&quot;УдалитьЗавершение&quot;</span><span class="operator">,</span> ЭтотОбъект<span class="operator">,</span> <span class="operator">,</span> <span class="string">&quot;УдалитьОшибка&quot;</span><span class="operator">,</span> ЭтотОбъект<span class="operator">)</span><span class="operator">;</span>
    НачатьУдалениеФайлов<span class="operator">(</span>ОбратныйВызов<span class="operator">,</span> ПутьККаталогу<span class="operator">,</span> ПолучитьМаскуВсеФайлыКлиента<span class="operator">(</span><span class="operator">)</span><span class="operator">)</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span>
<span class="preprocessor">&amp;НаКлиенте</span>
<span class="keyword">Процедура</span> УдалитьЗавершение<span class="operator">(</span>ДополнительныеПараметры<span class="operator">)</span> <span class="keyword">Экспорт</span>
    Сообщить<span class="operator">(</span><span class="string">&quot;Удаление успешно завершено&quot;</span><span class="operator">)</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span>
<span class="preprocessor">&amp;НаКлиенте</span>
<span class="keyword">Процедура</span> УдалитьОшибка<span class="operator">(</span>ИнформацияОбОшибке<span class="operator">,</span> СтандартнаяОбработка<span class="operator">,</span> ДополнительныеПараметры<span class="operator">)</span> <span class="keyword">Экспорт</span>
    Сообщить<span class="operator">(</span><span class="string">&quot;При удалении обнаружена ошибка: &quot;</span> <span class="operator">+</span> КраткоеПредставлениеОшибки<span class="operator">(</span>ИнформацияОбОшибке<span class="operator">)</span><span class="operator">)</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span></pre>

<p class="MsoNormalCxSpFirst">В приведенной реализации есть одна
особенность: если во время удаления файлов произойдет ошибка, то наряду с
сообщением об ошибке в окне сообщений платформы, пользователь увидит также и
системный диалог с сообщением об ошибке. В том случае, если системный диалог не
нужен – следует в обработчике <span class="Term">УдалитьОшибка()</span>
установить параметр <span class="Term">СтандартнаяОбработка</span>
в значение <span class="Term">Ложь</span>.</p>

<p class="MsoNormalCxSpMiddle">Также следует учитывать, что указание
обработчика ошибок в описании оповещения игнорируется при использовании асинхронных
методов работы с блокирующими окнами (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 7. формы.htm?_=1496848987#_ref371695222">здесь</a>).</p>

<p class="MsoNormalCxSpMiddle">Еще одной особенностью работы с асинхронными
вызовами является их отладка. В данный момент отладчик умеет отлаживать
действия, которые синхронно выполняются в предмете отладки (фактически, по
инициативе отладчика).</p>

<p class="MsoNormalCxSpLast">В случае использования асинхронных вызовов
асинхронный вызов выполняется в момент времени, отличный от фактического
выполнения строки кода на встроенном языке, которая инициирует данный вызов. В
связи с этим, если во время фактического исполнения асинхронного вызова в этом
вызове случается ошибка, отладчик не может корректно определить состояние отлаживаемого
приложения. Поэтому недоступна текущая строка исполнения, стек вызовов и так
далее.</p>

<a name="_ref404250037"></a><a id="TI000000822" class="bookmark" name="issogl3_4.7.8.2_работа_в_веб-клиенте"><h4>4.7.8.2. Работа в веб-клиенте</h4></a>

<p class="MsoNormalCxSpFirst">Работа в веб-клиенте имеет некоторые
особенности. Эти отличия вызваны особенностями реализации веб-браузеров
(отсутствие поддержки модальных окон, синхронных вызовов, особенности модели
безопасности). При работе в веб-клиенте не поддерживается синхронная техника
работы (во всех вариантах). Для работы с файлами (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 20. механизм временного хранилища, работа с файлами и картинками.htm?_=1496848987#_ref404183483">здесь</a>) и криптографией (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 22. механизм криптографии.htm?_=1496848987#_ref404183495">здесь</a>) требуется наличие специальных расширений,
установленных в используемом веб-браузере. При использования веб-браузера Google Chrome, перед установкой
расширений платформы, необходимо выполнить установку расширения веб-браузера <span class="Interface">Расширение для работы с 1С:Предприятием</span>, которое
устанавливается из <span class="Interface">Интернет-магазина Chrome</span> (при необходимости переход на
страницу установки будет выполнен автоматически). Без установки этого
расширения будет невозможно использование расширений платформы.</p>

<p class="MsoNormalCxSpLast">Для работы с расширениями необходимо:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Соответствующим образом настроить веб-браузер (см. <a href="/db/v8310doc/bookmark/adm/TI000000250" target="_top">здесь</a>).</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Расширение работы с файлами:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
Установить расширение – с помощью метода <span class="Term">НачатьУстановкуРасширенияРаботыСФайлами()</span>
или <span class="Term">УстановитьРасширениеРаботыСФайлами()</span>.
Это интерактивное действие, которое необходимо выполнить один раз для каждого
пользователя локального компьютера, использующего расширение.</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
Подключить расширение – с помощью метода <span class="Term">НачатьПодключениеРасширенияРаботыСФайлами()</span>
или <span class="Term">ПодключитьРасширениеРаботыСФайлами()</span>.</p>

<p class="MsoListBullet">&#9679; 
Расширение работы с криптографией:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
Установить расширение – с помощью метода <span class="Term">НачатьУстановкуРасширенияРаботыСКриптографией()</span>
или <span class="Term">УстановитьРасширениеРаботыСКриптографией()</span>.Это
интерактивное действие, которое необходимо выполнить один раз для каждого
пользователя локального компьютера, использующего расширение.</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
Подключить расширение – с помощью метода <span class="Term">НачатьПодключениеРасширенияРаботыСКриптографией()</span>
или <span class="Term">ПодключитьРасширениеРаботыСКриптографией()</span>.</p>

<p class="MsoListBullet">&#9679; 
Внешние компоненты – более подробно о
работе с внешними компонентами см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 34. внешние компоненты.htm?_=1496848987#_ref404185574">здесь</a>.</p>

<a id="TI000000161" class="bookmark" name="issogl1_4.8_особенности_различных_вариантов_запуска_системы"><h2>4.8. Особенности различных вариантов запуска системы</h2></a>

<p class="MsoNormalCxSpFirst">Система
«1С:Предприятие» может использоваться в файловом и клиент-серверном вариантах,
во внешнем соединении, а также в виде Интернет-сервисов (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 17. механизмы интернет-сервисов.htm?_=1496848987#_ref380404113">здесь</a>).</p>

<p class="MsoNormalCxSpLast">Конфигуратор
позволяет настроить использование процедур и функций общих модулей и модулей
объектов для каждого варианта.</p>

<a id="TI000000162" class="bookmark" name="issogl2_4.8.1_исполнение_процедур_и_функций"><h3>4.8.1. Исполнение процедур и функций</h3></a>

<p class="MsoNormal">Для
указания разрешения применения процедур и функций различных модулей (про виды
модулей см. <a href="#_ref225834609">здесь</a>) используют инструкции препроцессору и директивы
компиляции.</p>

<a name="_ref231122751"></a><a name="_ref369795512"></a><a id="TI000000163" class="bookmark" name="issogl3_4.8.1.1_различие_инструкций_препроцессора_и_директив_компиляции"><h4>4.8.1.1. Различие инструкций препроцессора и директив компиляции</h4></a>

<p class="MsoNormalCxSpFirst">Инструкции
препроцессора и директивы компиляции предназначены для того, чтобы оставить в
скомпилированном модуле только то, что действительно должно присутствовать в
том или ином контексте. При этом инструкции препроцессора действуют на исходный
текст модуля (т. е. удаляют из модуля текст, который не может в нем
находится), а директивы компиляции действуют на структурные единицы
программного кода (методы – процедуры или функции, а также объявления
переменных).</p>

<p class="MsoNormalCxSpLast">Фактически
все программные модули, присутствующие в системе, можно разделить на две большие
группы модулей:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Модули, которые могут существовать (и
выполняться) только в одном контексте, например, модуль управляемого приложения
может выполняться только на стороне клиента (тонкого или веб-клиента).</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Модули, которые могут существовать (и
выполняться) в нескольких контекстах. Такими модулями является модуль управляемой
формы, модуль команды и общий модуль. Например, модуль управляемой формы может
существовать в четырех экземплярах, при этом в процессе работы управление может
передаваться между различными экземплярами модуля:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
клиентский контекстный модуль,</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
серверный контекстный модуль,</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
клиентский внеконтекстный модуль,</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
серверный внеконтекстный модуль.</p>

<p class="MsoNormalCxSpFirst">При
этом у модуля команды и общего модуля не может существовать контекстных
экземпляров (в отличие от модуля формы). Поэтому некоторые модули могут компилироваться
несколько раз, в зависимости от того, есть ли в этом модуле фрагменты кода, которые могут
выполняться в том или ином контексте.</p>

<p class="MsoNormalCxSpMiddle">Рассмотрим,
какое влияние оказывают директивы компиляции и инструкции препроцессора на
исходный программный текст модуля в процессе его преобразования в «исполняемый»
код.</p>

<p class="MsoNormalCxSpMiddle">Рассмотрим
это на примере модуля управляемой формы.</p>

<p class="MsoNormalCxSpMiddle">В
момент создания формы формируется четыре экземпляра модуля формы и выполняется
определение всех необходимых инструкций препроцессору для каждого экземпляра
модуля. Затем происходит обработка каждого экземпляра модуля и исключение
текста, обрамленного инструкциями препроцессора.</p>

<p class="MsoNormalCxSpMiddle">Затем
происходит компиляция получившегося программного кода в соответствии с
контекстом и директивами компиляции. В результате получается исполняемый
модуль.</p>

<p class="MsoNormalCxSpLast">Предположим,
в исходном тексте модуля формы встречается конструкция:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="preprocessor">&amp;НаКлиенте</span>
<span class="keyword">Процедура</span> РаботаСФайлами<span class="operator">(</span><span class="operator">)</span>
<span class="preprocessor">    #Если ВебКлиент Тогда</span>
        <span class="comment">// программный текст 1</span>
        <span class="comment">// исполняется только на веб-клиенте</span>
<span class="preprocessor">    #Иначе</span>
        <span class="comment">// программный текст 2</span>
        <span class="comment">// исполняется на других типах клиента</span>
<span class="preprocessor">    #КонецЕсли</span>
<span class="keyword">КонецПроцедуры</span></pre>

<p class="MsoNormal">Тогда
будет выполнено следующее:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Данная процедура будет компилироваться на любом
клиенте (как следует из директивы компиляции).</p>

<p class="MsoListBulletCxSpLast">&#9679; 
В то же время инструкции препроцессора будут
определять, какой именно текст и на каком клиенте будет оставлен в модуле (и,
как следствие, скомпилирован). В данном примере на веб-клиенте будет доступен
только «программный текст 1», а на других клиентах – «программный текст 2».</p>

<p class="MsoNormal">Однако
если в модуле формы будет использован следующий код:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="preprocessor">#Если НаСервере Тогда</span>
<span class="preprocessor">&amp;НаКлиенте</span>
<span class="keyword">Процедура</span> Клиентская<span class="operator">(</span><span class="operator">)</span>
<span class="keyword">КонецПроцедуры</span>
<span class="preprocessor">#КонецЕсли</span></pre>

<p class="MsoNormal">Тогда
произойдет следующее:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
на сервере будет присутствовать исходный текст
нашей процедуры, но он не будет скомпилирован, т. к. директива компиляции
<span class="Term">&amp;НаКлиенте</span>
исключает возможность появления процедуры на стороне сервера;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
на клиенте не будет даже исходного текста нашей
процедуры, т. к. его «вырежет» инструкция препроцессора, а значит,
эта процедура не будет скомпилирована и не будет доступна для вызова.</p>

<p class="MsoNormalCxSpFirst">Исходя
из описанного механизма и следует подходить к пониманию взаимодействия директив
и инструкций, а также к их совместному применению.</p>

<p class="MsoNormalCxSpLast">Также
нужно отметить, что методы, отмеченные в
программном модуле директивами <span class="Term">&amp;НаКлиентеНаСервереБезКонтекста</span> и <span class="Term">&amp;НаКлиентеНаСервере</span>, попадут одновременно в разные экземпляры
программных модулей.</p>

<a name="_ref231122750"></a><a name="_ref448859501"></a><a id="TI000000164" class="bookmark" name="issogl3_4.8.1.2_инструкции_препроцессора"><h4>4.8.1.2. Инструкции препроцессора</h4></a>

<p class="MsoNormal">Синтаксис
инструкций препроцессору следующий:</p>

<p class="Lang-subheader">Инструкция
препроцессору</p>

<p class="MsoNormalCxSpFirst"><span class="Term">#Если
&lt;Логическое выражение&gt; Тогда</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">#ИначеЕсли
&lt;Логическое выражение&gt; Тогда</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">…</span></p>

<p class="MsoNormalCxSpMiddle"><span class="Term">#Иначе</span></p>

<p class="MsoNormalCxSpLast"><span class="Term">#КонецЕсли</span></p>

<p class="Lang-subheader">Логическое
выражение</p>

<p class="MsoNormal"><span class="Term">&lt;Логическое
выражение&gt; = [НЕ] &lt;Символ препроцессора&gt; [&lt;Булева операция&gt; [НЕ]
&lt;Символ препроцессора&gt; [&lt;Булева операция&gt; [НЕ] &lt;Символ
препроцессора&gt;]…]</span></p>

<p class="Lang-subheader">Символ
препроцессора</p>

<p class="MsoNormal"><span class="Term">&lt;Символ
препроцессора&gt; = { Сервер | НаСервере |
Клиент | НаКлиенте | ТонкийКлиент | ВебКлиент | ВнешнееСоединение |
ТолстыйКлиентУправляемоеПриложение | ТолстыйКлиентОбычноеПриложение |
МобильноеПриложениеКлиент | МобильноеПриложениеСервер |
Область | КонецОбласти }</span></p>

<p class="Lang-subheader">Булева
операция</p>

<p class="MsoNormalCxSpFirst"><span class="Term">&lt;Булева
операция&gt; = {И | ИЛИ}</span></p>

<p class="MsoNormalCxSpMiddle"> </p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0">
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Русское
  имя</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Английское
  имя</b></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">#Если</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">#If</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">#Тогда</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">#Then</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">#Иначе</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">#Else</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">#ИначеЕсли</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">#ElsIf</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">#КонецЕсли</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">#EndIf</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">#Область</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">#Region</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">#КонецОбласти</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">#EndRegion</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">И</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">AND</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">ИЛИ</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">OR</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">НЕ</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">NOT </span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Сервер</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Server</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">НаСервере </span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">AtServer</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Клиент</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Client</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">НаКлиенте</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">AtClient</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">ТонкийКлиент</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">ThinClient</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">ВебКлиент</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">WebClient</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">ВнешнееСоединение</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">ExternalConnection</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">ТолстыйКлиентУправляемоеПриложение</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">ThickClientManagedApplication</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">ТолстыйКлиентОбычноеПриложение</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">ThickClientOrdinaryApplication</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">МобильноеПриложениеКлиент</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">MobileAppClient</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">МобильноеПриложениеСервер</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">MobileAppServer</span></p>
  </td>
  
 </tr>
</table>

<p class="MsoNormalCxSpMiddle"> </p>

<p class="MsoNormalCxSpLast">Далее
приведен перечень инструкций препроцессора и их краткое описание:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Term">Сервер</span>, <span class="Term">НаСервере</span> – определяет сервер;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">Клиент</span>, <span class="Term">НаКлиенте</span> – определяет любого клиента;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">ТонкийКлиент</span> – определяет тонкого клиента;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">ВебКлиент</span> – определяет веб-клиента;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">ВнешнееСоединение</span> – определяет внешнее
соединение;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">ТолстыйКлиентУправляемоеПриложение</span> – определяет
режим управляемого приложения толстого клиента;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">ТолстыйКлиентОбычноеПриложение</span> – определяет
обычный режим толстого клиента;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">МобильноеПриложениеКлиент</span> – определяет
клиентскую часть мобильного приложения;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">МобильноеПриложениеСервер</span> – определяет
серверную часть мобильного приложения;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Term">Область</span>, <span class="Term">КонецОбласти</span> – не предназначены для
определения места выполнения кода на встроенном языке. Служат для выделения фрагмента
текста, который можно будет свернуть (аналогично процедурам, функциям и т. д.).
Подробнее см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 27. инструменты разработки.htm?_=1496848987#_ref354052189">здесь</a>.</p>

<p class="Regularbeforetable">Далее
приведена таблица, указывающая, какие инструкции препроцессора определены в
каких режимах работы «1С:Предприятия»:</p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0">
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpFirst"><b>Режим</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Сервер,
  НаСервере</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Клиент,
  НаКлиенте</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>ТонкийКлиент</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>ВебКлиент</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>ТолстыйКлиентУправляемоеПриложение</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>ТолстыйКлиентОбычноеПриложение</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>ВнешнееСоединение</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>МобильноеПриложениеКлиент</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>МобильноеПриложениеСервер</b></p>
  </td>
  
 </tr>
 <tr>
  <td colspan="8" valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Bold">В клиент-серверном
  варианте</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Bold"> </span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Bold"> </span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">На стороне сервера</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">В толстом клиенте в обычном режиме</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">В толстом клиенте в управляемом режиме</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">В тонком клиенте</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">В веб-клиенте</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Во внешнем соединении</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
 </tr>
 <tr>
  <td colspan="8" valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Bold">В файл-серверном варианте</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Bold"> </span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Bold"> </span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">В толстом клиенте в обычном режиме</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">В толстом клиенте в управляемом режиме</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">В тонком клиенте</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">На
  серверной стороне тонкого клиента</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">В веб-клиенте</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Во внешнем соединении</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">В клиенте мобильного приложения</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">На серверной стороне мобильного приложения</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
 </tr>
</table>

<p class="MsoNormalCxSpMiddle">Если используется неглобальный общий модуль, для которого
установлено использование на клиенте (любом) и на сервере, то методы,
заключенные в условие <span class="Term">#Если Сервер
Тогда #КонецЕсли</span>, будут доступны только в том случае, если вызов
этих методов выполняется со стороны сервера. Вызов таких методов со стороны клиента
недоступен.</p>

<p class="MsoNormalCxSpMiddle">В модуле управляемой формы, выполняемой в файловом
варианте в толстом клиенте, будет различаться инструкции <span class="Term">Сервер</span>
и <span class="Term">НаСервере</span>,
а также <span class="Term">Клиент</span>
и <span class="Term">НаКлиенте</span>.
Так, директивы <span class="Term">Сервер</span>
и <span class="Term">Клиент</span>
будут определены и в клиентских и в серверных экземплярах модуля формы, в том
время как директива <span class="Term">НаСервере</span>
будет определена только в серверных экземплярах модуля формы, а директива <span class="Term">НаКлиенте</span> –
только в клиентских экземплярах модуля формы. Подробнее о разделении модуля
формы на различные экземпляры см. <a href="#_ref369795512">здесь</a>.</p>

<p class="MsoNormalCxSpLast">В остальных случаях инструкции <span class="Term">Сервер</span>
и <span class="Term">НаСервере</span>
полностью идентичны и инструкции <span class="Term">Клиент</span>
и <span class="Term">НаКлиенте</span>
также полностью идентичны.</p>

<p class="Note"><span class="Note">Примечание</span>. Перед передачей программного модуля на тонкий
или веб-клиент сервер выполняет обработку инструкций препроцессора, находящихся
в модуле. В ходе обработки текст на встроенном языке, который не исполняется на
стороне вышеуказанных клиентов, заменяется на пробелы (т. е. фактически
удаляется). При этом символы переноса строк и табуляции остаются на своих
местах.</p>

<a name="_ref231122752"></a><a name="_ref371693648"></a><a id="TI000000165" class="bookmark" name="issogl3_4.8.1.3_директивы_компиляции"><h4>4.8.1.3. Директивы компиляции</h4></a>

<p class="MsoNormal">Синтаксис
директивы компиляции следующий:</p>

<p class="Lang-subheader">Директива
компиляции</p>

<p class="MsoNormalCxSpFirst"><span class="Term">&amp;&lt;Директива&gt;</span></p>

<p class="MsoNormalCxSpLast"><span class="Term">&lt;Конструкция
языка&gt;</span></p>

<p class="Lang-subheader">Директива</p>

<p class="MsoNormal"><span class="Term">&lt;Директива&gt;
= { НаКлиенте | НаСервере | НаСервереБезКонтекста | НаКлиентеНаСервереБезКонтекста
| НаКлиентеНаСервере }</span></p>

<p class="Lang-subheader">Конструкция
языка</p>

<p class="MsoNormal"><span class="Term">&lt;Конструкция
языка&gt; = { &lt;Описание переменной&gt; | &lt;Описание процедуры&gt; |
&lt;Описание функции&gt; }</span></p>

<p class="Regularbeforetable">Подробное
описание конструкций языка см. <a href="#_ref226282494">здесь</a>.</p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0">
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpFirst"><b>Русское
  имя</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Английское
  имя</b></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">НаКлиенте</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">AtClient</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">НаСервере</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">AtServer</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">НаСервереБезКонтекста</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">AtServerNoContext</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">НаКлиентеНаСервереБезКонтекста</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">AtClientAtServerNoContext</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">НаКлиентеНаСервере</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">AtClientAtServer</span></p>
  </td>
  
 </tr>
</table>

<p class="MsoNormalCxSpLast">Далее
приведен перечень директив компиляции и их краткое описание:</p>

<p class="MsoListBullet">&#9679; 
<span class="Term">НаКлиенте</span> – означает, что метод
выполняется на стороне клиента в контексте формы.</p>

<p class="IndentlistCxSpFirst">Переменная
существует все время жизни клиентской части формы.</p>

<p class="IndentlistCxSpMiddle">Из
метода доступны клиентские переменные модуля формы.</p>

<p class="IndentlistCxSpLast">Допустимы
вызовы любых методов.</p>

<p class="MsoListBullet">&#9679; 
<span class="Term">НаСервере</span> – означает, что метод
выполняется на стороне сервера в контексте формы.</p>

<p class="IndentlistCxSpFirst">Переменная
существует только во время вызова выполнения серверного вызова.</p>

<p class="IndentlistCxSpMiddle">Из
метода доступны серверные переменные модуля формы.</p>

<p class="IndentlistCxSpLast">Допустимы
вызовы:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
серверных;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
серверных внеконтекстных;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
клиент-серверных внеконтекстных методов;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
методов неглобальных серверных общих модулей.</p>

<p class="MsoListBullet">&#9679; 
<span class="Term">НаСервереБезКонтекста</span> – означает, что
метод исполняется на сервере вне контекста формы.</p>

<p class="IndentlistCxSpFirst">Переменные
не могут предваряться такой директивой компиляции.</p>

<p class="IndentlistCxSpMiddle">Из
метода недоступны переменные модуля формы.</p>

<p class="IndentlistCxSpLast">Допустимы
вызовы:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
серверных внеконтекстных;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
клиент-серверных внеконтекстных методов;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
методов не глобальных серверных общих модулей.</p>

<p class="MsoListBullet">&#9679; 
<span class="Term">НаКлиентеНаСервереБезКонтекста</span> – означает,
что метод исполняется как на клиенте, так и на сервере, вне контекста формы.</p>

<p class="IndentlistCxSpFirst">Переменные
не могут предваряться такой директивой компиляции.</p>

<p class="IndentlistCxSpMiddle">Из
метода недоступны переменные модуля формы.</p>

<p class="IndentlistCxSpLast">Допустимы
вызовы:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
серверных внеконтекстных;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
клиент-серверных внеконтекстных методов;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
методов неглобальных серверных общих модулей;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
методов неглобальных общих модулей с флажками <span class="Interface">Сервер</span> и <span class="Interface">Клиент (управляемое
приложение</span>).</p>

<p class="Indentlist">Не поддерживается вызов экспортных процедур, обозначенных
такой директивой, как методов объекта Эт<span class="Term">отОбъект</span>.</p>

<p class="MsoListBullet">&#9679; 
<span class="Term">НаКлиентеНаСервере</span> – означает, что методы
выполняются на клиенте и на сервере. Переменные не могут предваряться такой
директивой компиляции.</p>

<p class="Indentlist">Допустимы
вызовы:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
серверных внеконтекстных;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
клиент-серверных внеконтекстных методов;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
методов неглобальных серверных общих модулей;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
методов неглобальных общих модулей с флажками <span class="Interface">Сервер</span> и <span class="Interface">Клиент (управляемое
приложение</span>).</p>

<p class="Regularbeforetable">Ниже
приведена таблица, показывающая, какие директивы компиляции доступны в каких
модулях системы «1С:Предприятие»:</p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0">
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpFirst"><b> </b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Модуль<br>
  формы</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Перемен-<br>
  ные модуля формы</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Модуль<br>
  команды</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Общий<br>
  модуль</b></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">НаКлиенте</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">НаСервере</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">НаСервереБезКонтекста</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">НаКлиентеНаСервереБезКонтекста</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">НаКлиентеНаСервере</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">+</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"> </p>
  </td>
  
 </tr>
</table>

<a name="_ref449020993"></a><a name="_ref449105857"></a><a id="TI000001838" class="bookmark" name="issogl2_4.8.2_аннотации"><h3>4.8.2. Аннотации</h3></a>

<p class="MsoNormal">Аннотация это специальная форма
синтаксических метаданных, которая добавляется в исходный код для
функционирования механизма расширения конфигурации (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 32. расширение конфигурации.htm?_=1496848987#_ref405464478">здесь</a>). Аннотации используются для анализа кода и во время
выполнения. Аннотироваться могут методы и переменные в модулях на встроенном
языке. Аннотации и директивы компиляции (см. <a href="#_ref371693648">здесь</a>) могут чередоваться между собой.</p>

<p class="Lang-subheader">Аннотация</p>

<p class="MsoNormalCxSpFirst"><span class="Term">&amp;&lt;Перед|После|Вместо&gt;[([&lt;Имя&gt;=&lt;Значение&gt;[,
&lt;Имя&gt;=&lt;Значение&gt;, …]])]</span></p>

<p class="MsoNormalCxSpMiddle">Аннотация начинается с символа «<span class="Term">&amp;</span>»
(аналогично директивам компиляции), затем идет имя аннотации (доступные имена
аннотаций приведены далее), затем идут параметры аннотации, разделенные
символом «<span class="Term">,</span>»,
если аннотация требует параметры. Параметры аннотации заключаются в круглые
скобки. Доступны следующие аннотации:</p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0">
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Русское имя</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Английское имя</b></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Перед</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Before</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">После</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">After</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Вместо</span></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Around</span></p>
  </td>
  
 </tr>
</table>

<p class="MsoNormalCxSpMiddle">Важно помнить, что система не поддерживает
пользовательских аннотаций. Другими словами, разработчик не может создать
собственную аннотацию для прикладного применения, которой он может
распоряжаться по собственному усмотрению.</p>

<p class="MsoNormalCxSpLast">Более подробное описание аннотаций (и их
применения) см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 32. расширение конфигурации.htm?_=1496848987#_ref449093131">здесь</a>.</p>

<a name="_ref417645360"></a><a id="TI000000166" class="bookmark" name="issogl2_4.8.3_особенности_использования_объектов_их_свойств_и_методов"><h3>4.8.3. Особенности использования объектов, их свойств и методов</h3></a>

<p class="MsoNormalCxSpFirst">Каждый
объект, метод или свойство встроенного языка (далее в этом разделе – объект)
обладает определенной доступностью (см. синтакс-помощник), которая определяет,
где можно использовать объект, метод или свойство. Кроме того, в синтакс-помощнике
указываются некоторые вспомогательные данные, которые могут помочь
разработчику.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Тонкий клиент</span> – указывает, что объект доступен в
тонком клиенте.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Веб-клиент</span> – указывает, что объект доступен в
веб-клиенте.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Сервер</span> – указывает, что объект доступен на сервере «1С:Предприятия».</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Внешнее соединение</span> – указывает, что объект доступен
в режиме внешнего соединения.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Толстый клиент</span> – указывает, что объект доступен в
толстом клиенте.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Мобильное приложение (клиент)</span> – указывает, что
объект доступен в клиентской части мобильной платформы.</p>

<p class="MsoNormalCxSpLast"><span class="Interface">Мобильное приложение (сервер)</span> – указывает, что
объект доступен на стороне сервера мобильной платформы.</p>

<p class="NoteCxSpFirst"><span class="Note">ВНИМАНИЕ!</span> Если для объекта указано, что он недоступен для
какого-либо из режимов запуска, то свойства и методы данного объекта также недоступны.
Поэтому специального упоминания об этом при описании свойств и методов не
приводится.</p>

<p class="NoteCxSpLast"><span class="Note">Примечание.</span><span class="Interface"> </span>Если объект
недоступен на стороне какого-либо клиентского приложения, то в этом клиентском
приложении также недоступен и тип этого объекта. Например, если в тонком
клиенте недоступен объект <span class="Term">СправочникОбъект.Контрагенты</span>, то <span class="Term">Тип(&quot;СправочникОбъект.Контрагенты&quot;)</span>
также недоступен в тонком клиенте.</p>

<p class="MsoNormalCxSpFirst"><span class="Interface">Сериализуется</span>. Указывает возможность сохранения значения
объектов (например, методами <span class="Term">СохранитьЗначение()</span> и <span class="Term">ЗначениеВФайл()</span>), сохранения параметров форм отчетов
и обработок, а также помещения в <span class="Term">ХранилищеЗначения</span> и временное хранилище.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Данный объект может быть сериализован в/из XML</span>.
Указывает возможность поддержки чтения/записи значений данных системы «1С:Предприятие»
в/из XML. Подробнее см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 15. механизмы обмена данными.htm?_=1496848987#_ref214882152">здесь</a>.</p>

<p class="MsoNormalCxSpLast"><span class="Interface">Возможен обмен с сервером</span>. Указывает возможность обмена
значениями данного типа между клиентом и сервером.</p>

<p class="Note"><span class="Note">Примечание.</span>
Для управляемого режима запуска обмен между клиентом и сервером возможен только
для объектов, которые поддерживают XDTO-сериализацию.</p>

<p class="MsoNormalCxSpFirst"><span class="Interface">Данный объект может быть сериализован в/из XDTO</span>.
Указывает на то, что данный тип имеет возможность отображения в модель данных XDTO.
При этом указывается квалифицированное имя типа (типов) (указывается URI
пространство имен и имя типа), в который отображается данный тип. Например, для
типа <span class="Term">ХранилищеЗначения</span>: <span class="Interface">{http://v8.1c.ru/8/data/core}ValueStorage</span>.</p>

<p class="MsoNormalCxSpMiddle">Синтакс-помощник
содержит информацию о кешировании результатов работы некоторых методов
«1С:Предприятия». Например, для метода глобального контекста <span class="Term">ПредопределенноеЗначение()</span> будет указана
следующая информация: <span class="Interface">Результат выполнения ке</span><span class="Interface">шируется при первом обращении до изменения
конфигурации или версии платформы</span>.</p>

<p class="MsoNormalCxSpLast">В
некоторых случаях система накладывает ограничения на возможные действия в обработчиках
событий. В этих случаях синтакс-помощник содержит указание на запрещенное
действие или описание действия, которое может привести к недопустимому действию:</p>

<p class="MsoListNumberCxSpFirst">1.  <span class="Interface">В обработчике данного события нельзя использовать серверные
методы формы с директивой компиляции &amp;НаСервере</span>.</p>

<p class="MsoListNumberCxSpMiddle">2.  <span class="Interface">Изменение свойства на клиенте может потребовать обращения к
серверу</span>.</p>

<p class="MsoListNumberCxSpLast">3.  <span class="Interface">Вызов метода выполняет обращение к серверу</span>. Данное
предупреждение расположено в описании клиентских методов. Оно означает, что
разработчик не может вызывать данный метод в обработчике события, для которого
запрещены контекстные серверные вызовы.</p>

<p class="MsoNormalCxSpFirst">Во
время исполнения прикладного решения имеется возможность включения диагностики
нарушения вышеуказанных ограничений. Если в командной строке запуска
клиентского приложения присутствует ключ <span class="Term">/EnableCheckServerCalls</span> (подробнее
см. <a href="/db/v8310doc/bookmark/adm/TI000000495" target="_top">здесь</a>), то при обнаружении нарушения указанных правил, в окно
сообщений выводится диагностика. Эта же диагностика будет присутствовать в
диалоге <span class="Interface">Инфорация для
технической поддержки</span>.</p>

<p class="MsoNormalCxSpMiddle">При
запуске клиентского приложения из конфигуратора, включение этого ключа
выполняется с помощью флажка настройки параметров конфигуратора <span class="Interface">Проверять серверные
вызовы в обработчиках событий</span> (подробнее см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 33. сервисные возможности.htm?_=1496848987#_ref455674156">здесь</a>).</p>

<p class="MsoNormalCxSpMiddle"> </p>

<br>		<script type="text/javascript">listenCopy('zeroclipboard.swf');</script>
	</body>
</html>