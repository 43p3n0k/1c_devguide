<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=Windows-1251">
		<title>&#1043;&#1083;&#1072;&#1074;&#1072; 5. &#1054;&#1073;&#1098;&#1077;&#1082;&#1090;&#1099; &#1082;&#1086;&#1085;&#1092;&#1080;&#1075;&#1091;&#1088;&#1072;&#1094;&#1080;&#1080;</title>
		<LINK REL="stylesheet" href="style.css?_=1496848987">
		<SCRIPT src="script.js?_=1496848987" TYPE="text/javascript"></script>		<!--[if !IE]>--><SCRIPT src="zeroclipboard.js?_=1496848987" TYPE="text/javascript"></script><!--<![endif]-->
	<meta name="robots" content="noarchive">
<meta name="googlebot" content="noarchive">
<link href="/db/content/v8310doc/src/руководство разработчика/глава 5. объекты конфигурации.htm" rel="canonical">
<link href="/static/its.content.css?_=1490872753" type="text/css" rel="stylesheet">
<script type="text/javascript" src="/static/its.content.js?_=1489758009"></script>
<!--[if lt IE 9]><script type="text/javascript" src="/static/html5shiv.js?_=1484636606"></script><![endif]-->

</head>
	<body class="v8310doc">
<a name="_ref237783370"></a><a id="TI000000167" class="bookmark"><h1>Глава 5.  Объекты конфигурации</h1></a>

<p class="MsoNormalCxSpFirst">В этой главе рассказывается о работе с конфигурацией в целом и о
тех режимах и механизмах, которые используются для всех объектов конфигурации.</p>

<p class="MsoNormalCxSpLast">Описание
действий по созданию и настройке основных объектов конфигурации (константы, справочники,
документы, последовательности, журналы, перечисления, отчеты, обработки,
регистры), а также некоторых объектов, располагающихся в ветви конфигурации <span class="Interface">Общие</span> (критерии
отбора, стили), производится в документации на примере использования окна
редактирования объекта (подробнее см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 2. работа с конфигурацией.htm?_=1496848987#_ref216000055">здесь</a>). Аналогичные действия можно выполнять и в палитре
свойств объектов.</p>

<a name="_ref42924531"></a><a name="_ref42924529"></a><a name="_ref9665012"></a><a name="_ref9659745"></a><a name="_ref229044260"></a><a id="TI000000168" class="bookmark" name="issogl1_5.1_свойства_конфигурации"><h2>5.1. Свойства конфигурации</h2></a>

<p class="MsoNormalCxSpFirst"><span class="Interface">Конфигурация</span> в целом имеет свои свойства, которые можно
редактировать. Палитра свойств открывается для корневой ветки дерева
конфигурации.</p>

<p class="MsoNormalCxSpLast">Помимо
основных свойств (см. <a href="#_ref216000149">здесь</a>), присущих каждому объекту конфигурации, конфигурация
имеет следующие рассмотренные ниже свойства.</p>

<a name="_ref360017154"></a><a name="_ref360017153"></a><a name="_ref335324134"></a><a name="_ref335129965"></a><a name="_ref335129964"></a><a name="_ref370811599"></a><a id="TI000000169" class="bookmark" name="issogl2_5.1.1_категория_свойств_основные"><h3>5.1.1. Категория свойств «Основные»</h3></a>

<p class="MsoNormalCxSpFirst"><span class="Interface">Основной режим запуска</span> – выбирается режим запуска
системы по умолчанию (<span class="Interface">Управляемое приложение</span>
или <span class="Interface">Обычное приложение</span>).
Для новой конфигурации устанавливается режим запуска <span class="Interface">Управляемое приложение</span>.
Также режим запуска можно изменять для пользователя системы (см. <a href="/db/v8310doc/bookmark/adm/TI000000123" target="_top">здесь</a>). Данное свойство нельзя изменить, если свойство <span class="Interface">Режим совместимости</span>
установлено в значение <span class="Interface">Версия 8.1</span>.</p>

<p class="MsoNormalCxSpLast"><span class="Interface">Назначения использования</span> – указывает назначение
использования прикладного решения (<span class="Interface">Мобильное устройство</span>
или <span class="Interface">Персональный компьютер</span>).
Свойство доступно только в том случае, если свойство <span class="Interface">Основной режим запуска</span>
установлено в значение <span class="Interface">Управляемое приложение</span>.
В зависимости от выбранного назначения использования, изменяются возможности
конфигуратора:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">Мобильное устройство</span> –
возможна разработка прикладного решения для работы на мобильном устройстве
(подробнее см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 25. разработка решений для мобильной платформы.htm?_=1496848987#_ref335129928">здесь</a>). При этом разработчику будет доступен ограниченный
набор прикладных объектов (список ограничений см. <A href="/db/content/v8310doc/src/руководство разработчика/приложение 7. особенности поведения системы в различных режимах.htm?_=1496848987#_ref335130545">здесь</a>);</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Персональный компьютер</span> –
возможна разработка прикладного решения, не предназначенного для
функционирования на мобильном устройстве и являющееся собой управляемое
приложение;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Установлены оба флажка (<span class="Interface">Мобильное устройство</span> и <span class="Interface">Персональный компьютер</span>) – возможна
разработка прикладного решения, которое будет содержать объекты, доступные и на
мобильном устройстве и на персональном компьютере в управляемом приложении.</p>

<p class="MsoNormal">Следует
помнить о следующих особенностях:</p>

<p class="MsoListBullet">&#9679; 
Если установлены оба флажка (<span class="Interface">Мобильное устройство</span>
и <span class="Interface">Персональный компьютер</span>),
то возможно изменение значения свойства конфигурации <span class="Interface">Режим совместимости
интерфейса</span>. Перед изменением будет задан вопрос. Изменение будет выполнено
только в случае утвердительного ответа на вопрос.</p>

<p class="Indentlist">Значение
свойства <span class="Interface">Режим совместимости
интерфейса</span> будет изменяться только в том случае, если это свойство
установлено в значение <span class="Interface">Такси</span>. Свойство
будет установлено в значение <span class="Interface">Такси. Разрешить 8.2</span>.</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Если устанавливается только флажок <span class="Interface">Мобильное устройство</span>,
то свойство <span class="Interface">Режим совместимости
интерфейса</span> устанавливается в значение <span class="Interface">Версия 8.2</span>.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Если среди назначений использования отсутствует <span class="Interface">Персональный компьютер</span>,
то:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
недоступна возможность изменения основного
режима запуска;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
в палитре свойств (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 2. работа с конфигурацией.htm?_=1496848987#_ref335132504">здесь</a>) объектов конфигурации недоступны свойства,
неиспользуемые на мобильной платформе;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
в качестве типов реквизитов могут выступать
только типы объектов, доступные на мобильной платформе.</p>

<p class="MsoListBullet">&#9679; 
Если среди назначений конфигурации присутствует <span class="Interface">Мобильное приложение</span>,
то:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
проверка модулей использует настройку для режима
<span class="Interface">Мобильное приложение</span>,
этот режим, по умолчанию, предлагается для изменения при редактировании
параметров;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
проверка конфигурации использует отдельно
хранимую настройку выполняемых проверок;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
синтакс-помощник использует отдельно хранимую
настройку наложенных отборов.</p>

<p class="MsoNormalCxSpFirst"><span class="Interface">Вариант встроенного языка</span> – выбирается основной
язык программирования (русский или английский). Выбор определяет, на каком
языке будут формироваться языковые конструкции в модулях (например, при
использовании синтакс-помощника), формироваться имена свойств для объектов,
создаваемых платформой в качестве результата работы, а также имена компонентов
формы (элементы, команды, реквизиты, параметры) для форм создаваемых платформой
(как в режиме «1С:Предприятие», так и в конфигураторе). Вне зависимости от
значения свойства можно использовать как русский, так и английский вариант
языковых конструкций. При смене значения свойства вариант написания введенных
языковых конструкций не изменяется.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Основные роли</span> – список ролей, которые будут
использоваться в том случае, когда список пользователей прикладного решения
пустой. В этом случае не выполняется авторизация доступа при начале работы
системы и права доступа определяются набором ролей (подробнее о правиле
сочетания ролей см. <a href="#_ref275269373">здесь</a>), указанных в свойстве. При этом считается, что
пользователь обладает административными правами вне зависимости от значения
права <span class="Term">Администрирование</span> у всех ролей, указанных в
качестве основных. Если не указаны основные роли конфигурации и список
пользователей пуст, то пользователь работает без ограничения прав доступа. Роли
задаются в ветви дерева конфигурации <span class="Interface">Общие – Роли</span>
(см. <a href="#_ref254965859">здесь</a>).</p>

<p class="MsoNormalCxSpMiddle">Основной режим запуска, указанный у прикладного решения,
должен соответствовать правам на допустимые приложения, указанные у всех ролей,
которые выбраны в свойстве <span class="Interface">Основные роли</span>. Так, если свойство <span class="Interface">Основной режим</span> запуска установлено в значение <span class="Interface">Управляемое приложение</span>, а набор основных ролей не
предоставляет право <span class="Interface">Тонкий клиент</span>, то пользователь не сможет работать с
прикладным решением с помощью тонкого клиента.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Модуль управляемого приложения</span> – по ссылке <span class="Interface">Открыть</span>
открывается окно редактирования модуля управляемого приложения (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 4. встроенный язык.htm?_=1496848987#_ref359945716">здесь</a>).</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Модуль сеанса</span> – по ссылке <span class="Interface">Открыть</span>
открывается окно редактирования модуля сеанса (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 4. встроенный язык.htm?_=1496848987#_ref359945994">здесь</a>).</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Модуль внешнего соединения</span> – по ссылке <span class="Interface">Открыть</span>
открывается окно редактирования модуля внешнего соединения (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 4. встроенный язык.htm?_=1496848987#_ref359945882">здесь</a>).</p>

<p class="MsoNormalCxSpLast"><span class="Interface">Использовать управляемые формы в обычном приложении</span> –
указывает необходимость использования управляемых форм в обычном режиме
толстого клиента. При установке этого флажка изменяются правила выбора формы
толстым клиентом (см. <a href="#_ref215985720">здесь</a>), а также изменяются правила централизованной
проверки конфигурации (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 27. инструменты разработки.htm?_=1496848987#_ref222639000">здесь</a>).</p>

<p class="Note"><span class="Note">Примечание.</span> Данное свойство доступно только в том
случае, если режим редактирования конфигурации установлен в <span class="Interface">Управляемое приложение
и обычное приложение</span>.</p>

<p class="MsoNormal"><span class="Interface">Использовать обычные формы в управляемом приложении</span> –
указывает необходимость использования обычных форм в управляемом режиме
толстого клиента. При установке этого флажка изменяются правила выбора формы
толстым клиентом (подробнее см. <a href="#_ref215985720">здесь</a>), а также изменяются правила централизованной
проверки конфигурации (подробнее см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 27. инструменты разработки.htm?_=1496848987#_ref222639000">здесь</a>).</p>

<p class="Note"><span class="Note">Примечание.</span> Данное свойство доступно только в том
случае, если режим редактирования конфигурации установлен в <span class="Interface">Управляемое приложение
и обычное приложение</span>.</p>

<p class="MsoNormalCxSpFirst"><span class="Interface">Дополнительные словари полнотекстового поиска</span> – выбор
общих макетов или констант, которые будут выступать в роли дополнительных
словарей для полнотекстового поиска (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 19. механизм полнотекстового поиска в данных.htm?_=1496848987#_ref149029553">здесь</a>).</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Требуемые разрешения мобильного приложения</span> – описывает,
какие разрешения мобильной операционной системы будет требовать мобильное
приложение. Фактические разрешения для мобильного приложения устанавливает
прикладное решение, выполняющее сборку мобильного приложения. Разрешения
используются для установки фактических разрешений мобильного приложения
сборщиком мобильных приложений. Разрешения, установленные в конфигурации,
используются сборщиком мобильных приложений для установки разрешений
собираемого мобильного приложения. Разрешения в мобильном приложении устанавливается
во время сборки мобильного приложения, работающего под управлением любой из
поддерживаемых мобильных операционных систем. Если прикладное решение
использует какую-либо функциональность, разрешение для работы которой не задано
в конфигурации (и, как следствие, в собранном мобильном приложении), то
поведение на устройстве зависит от особенностей реакции мобильной операционной
системы на попытку использования «неразрешенной» функциональности.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Хранилище общих настроек</span> – данное хранилище
предназначено для хранения различных настроек прикладного решения. Платформа
самостоятельно не записывает в данное хранилище никаких настроек. Хранилище,
указанное в данном свойстве, должен использовать разработчик из встроенного
языка, для того чтобы выполнять сохранение/восстановление прикладных настроек
пользователя.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Хранилище пользовательских настроек отчетов</span> – в
данное хранилище помещаются пользовательские настройки отчетов.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Хранилище вариантов отчетов</span> – в данное хранилище
помещаются варианты отчетов.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Хранилище настроек данных форм</span> – в это хранилище
сохраняются данные форм. Этим хранилищем можно пользоваться, например, для
сохранения реквизитов обработок. При этом можно выбрать индивидуальное
хранилище для каждого отчета и обработки.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Хранилище пользовательских настроек динамических списков</span> –
в это хранилище сохраняются настройки динамических списков.</p>

<p class="MsoNormalCxSpLast">Подробнее
о хранилищах и работе с ними см. <a href="#_ref351133491">здесь</a>.</p>

<a name="_ref353109449"></a><a name="_ref352173983"></a><a name="_ref352172767"></a><a name="_ref351374813"></a><a name="_ref351374809"></a><a name="_ref286946779"></a><a name="_ref397336446"></a><a name="_ref397336445"></a><a id="TI000000170" class="bookmark" name="issogl2_5.1.2_категория_свойств_представление"><h3>5.1.2. Категория свойств «Представление»</h3></a>

<p class="MsoNormalCxSpFirst"><span class="Interface">Командный интерфейс</span> – по ссылке <span class="Interface">Открыть</span>
открывается редактор, который позволяет задавать видимость подсистем по умолчанию
на начальной странице (в том числе в разрезе ролей).</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Рабочая область начальной страницы</span> – по ссылке <span class="Interface">Открыть</span> открывается
форма настройки, которая позволяет указать, какие формы располагаются на
начальной странице и по какому шаблону будет строиться рабочая область.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Командный интерфейс основного раздела</span> – по ссылке <span class="Interface">Открыть</span> будет
открыт диалог настройки командного интерфейса основного раздела.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Картинка основного раздела</span> – с помощью данного
свойства можно изменить картинку основного раздела панели разделов.</p>

<p class="MsoNormalCxSpMiddle">Интерфейс клиентского приложения –
позволяет настроить расположение панелей по умолчанию для интерфейса <span class="Interface">Такси</span>. Интерфейс
будет принимать такой вид в том случае, когда в редакторе панелей
(см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 3. интерфейс приложения.htm?_=1496848987#_ref441853439">здесь</a>) пользователь нажмет кнопку <span class="Interface">Стандартные</span>.</p>

<p class="MsoNormalCxSpLast"><span class="Interface">Режим основного окна клиентского приложения</span> – позволяет
указать режим открытия основного окна клиентского приложения:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">Обычный</span> – в
этом случае приложение работает в том режиме интерфейса, который определяется
совокупностью настроек интерфейса клиентского приложения (свойство конфигурации
<span class="Interface">Режим совместимости
конфигурации</span> и параметр <span class="Interface">Внешний вид</span> в
настройках клиентского приложения).</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Interface">Рабочее место</span> –
данный режим применяется только при работе в интерфейсе <span class="Interface">Такси</span>.
Прикладное решение начинается функционировать в режиме рабочего места.</p>

<p class="Picture"><IMG src="_img/img00084.gif?_=1496848987" WIDTH="800" ALT HEIGHT="570"></p>

<p class="MsoCaption">Рис.
85. Режим «Рабочее место»</p>

<p class="Indentlist">Данный
режим имеет следующие особенности:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
В системной командной панели скрывается
системное меню и все элементы, кроме логотипа клиентского приложения, заголовка
окна, гиперссылки с именем пользователя и кнопок <span class="Interface">О программе</span>, <span class="Interface">Свернуть окно</span>, <span class="Interface">Развернуть окно</span>
и <span class="Interface">Закрыть окно</span>.</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
Скрываются все панели, кроме панели сообщений и
панели с показателями производительности.</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
Скрываются стрелки навигации по формам, кнопка
перехода на начальную страницу, собственно надпись <span class="Interface">Начальная страница</span>
и кнопка избранного.</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
Блокируется контекстное меню, вызываемое нажатием
правой кнопки мыши по заголовку формы.</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
В том случае, когда свойства формы <span class="Interface">Отображать заголовок</span>
и <span class="Interface">Отображать кнопку закрытия</span>
установлены в значение <span class="Term">Ложь</span>, будет скрыта вся область, где
располагается заголовок с кнопкой закрытия формы.</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
Становится недоступны следующие сочетания клавиш:</p>

<p class="MsoListBullet3CxSpFirst">&#9679; 
навигация по панелям (<span class="Interface">Alt + 1</span>,
<span class="Interface">Alt + 2</span>,
<span class="Interface">Alt + 3</span>,
<span class="Interface">Alt + `</span>,
<span class="Interface">F10</span>),</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
навигация по формам (<span class="Interface">Ctrl + Tab</span>,
<span class="Interface">Ctrl + Shift + Tab</span>,
<span class="Interface">Ctrl + F6</span>,
<span class="Interface">Ctrl + Shift + F6</span>),</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
отображение/скрытие всех панелей (<span class="Interface">Ctrl + Shift + `</span>),</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
создания нового документа (<span class="Interface">Ctrl + N</span>),</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
открытия документ (<span class="Interface">Ctrl + O</span>),</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
сохранения документа (<span class="Interface">Ctrl + S</span>),</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
печати документа (<span class="Interface">Ctrl + P</span>),</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
печати документа с текущими настройками (<span class="Interface">Ctrl + Shift + P</span>),</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
открытия калькулятор (<span class="Interface">Ctrl + F2</span>),</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
перехода по навигационной ссылке (<span class="Interface">Shift + F11</span>),</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
получения навигационной ссылки (<span class="Interface">Ctrl + F11</span>),</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
добавления в избранное (<span class="Interface">Ctrl + D</span>),</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
доступа к панели истории (<span class="Interface">Ctrl + Shift + H</span>),</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
доступа к панели избранного (<span class="Interface">Ctrl + Shift + B</span>),</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
доступа к панели поиска (<span class="Interface">Ctrl + Shift + F</span>),</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
доступ к справке конфигурации (<span class="Interface">F1</span>, <span class="Interface">Shift + F1</span>,
<span class="Interface">Alt + Shift + F1</span>,
<span class="Interface">Alt + F1</span>,
<span class="Interface">Ctrl + Shift + F1</span>),
при этом доступ к справке форм по-прежнему доступен,</p>

<p class="MsoListBullet3CxSpLast">&#9679; 
операции над числами в буфере обмена (<span class="Interface">Shift + Num *</span>,
<span class="Interface">Shift + Num +</span>,
<span class="Interface">Shift + Num -</span>).</p>

<p class="MsoListBullet">&#9679; 
<span class="Interface">Полноэкранное рабочее
место</span> – данный режим применяется только при работе в интерфейсе <span class="Interface">Такси</span>.
Прикладное решение начинает функционировать в режиме полноэкранного рабочего
места.</p>

<p class="Picture"><IMG src="_img/img00085.gif?_=1496848987" WIDTH="800" ALT HEIGHT="600"></p>

<p class="MsoCaption">Рис.
86. Режим «Полноэкранное рабочее место»</p>

<p class="Indentlist">Данный
режим (в дополнение к особенностям, характерным для режима <span class="Interface">Рабочее место</span>)
обладает следующими особенностями:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
Окно приложения открывается на весь экран
монитора. Исключением являются случаи использования для работы веб-клиента
такого веб-браузера, который не поддерживает полноэкранный режим.</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
В веб-клиенте, если веб-браузер поддерживает
полноэкранный режим, переход в него происходит после отображения специального
диалога, в котором требует подтвердить переход в режим полноэкранной работы.</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
При нажатии клавиши <span class="Interface">ESC</span>, при работе
в веб-клиенте, происходит выход из полноэкранного режима.</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
В тонком или толстом клиентских приложениях скрываются
кнопки основного окна приложения <span class="Interface">Свернуть окно</span>, <span class="Interface">Развернуть окно</span>,
<span class="Interface">Закрыть окно</span>. У
вспомогательных окно скрывается кнопка <span class="Interface">Свернуть окно</span>.</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
Блокируется контекстное меню, вызываемое
нажатием правой кнопки мыши на системной командной панели.</p>

<p class="MsoListBullet">&#9679; 
<span class="Interface">Киоск</span> – данный
режим применяется только при работе в интерфейсе <span class="Interface">Такси</span>.
Прикладное решение начинает функционировать в режиме киоска.</p>

<p class="Picture"><IMG src="_img/img00086.gif?_=1496848987" WIDTH="800" ALT HEIGHT="600"></p>

<p class="MsoCaption">Рис.
87. Режим «Киоск»</p>

<p class="Indentlist">При
работе в данном режиме сохраняются все особенности режима <span class="Interface">Полноэкранное рабочее
место</span>, а также из системной командной панели скрывается гиперссылка с
именем пользователя и кнопка <span class="Interface">О программе</span>.</p>

<p class="MsoNormalCxSpFirst"><span class="Interface">Основной язык</span> – указывается основной язык
конфигурации.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Краткая информация</span> – краткая информация о конфигурации.</p>

<p class="MsoNormalCxSpLast"><span class="Interface">Подробная информация</span> – подробная информация о
конфигурации (допускается использование многострочного текста).</p>

<p class="Regularbeforepicture"><span class="Interface">Логотип</span> – выбор логотипа. Выбор осуществляется в
стандартном окне выбора картинки:</p>

<p class="Picture"><IMG src="_img/img00087.gif?_=1496848987" WIDTH="392" ALT HEIGHT="256"></p>

<p class="MsoCaption">Рис.
88. Выбор картинки</p>

<p class="Note"><span class="Note">Примечание.</span><span class="Interface"> </span>Размер
картинки для логотипа <span class="Bold">64х64 точки или меньше</span>. Тип
картинки может быть любым из поддерживаемых системой «1С:Предприятие».</p>

<p class="MsoNormalCxSpFirst">Заставка – выбор заставки.
Выбор осуществляется в стандартном окне выбора картинки. Картинка, используемая
в качестве заставки, должна иметь размер 600x255 точек.
Прозрачность не используется. Тип картинки может быть любым из поддерживаемых
системой «1С:Предприятие».</p>

<p class="MsoNormalCxSpMiddle">В отдельных случаях
предоставляется возможность полной замены заставки, отображаемой при запуске
«1С:Предприятия». Для решения по предоставлению такой возможности необходимо
обращаться в фирму «1С».</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Авторские права</span> – информация об авторе
конфигурации.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Адрес информации о поставщике</span> – ссылка на
информацию о поставщике конфигурации. Указывается в свойстве <span class="Interface">Авторские права</span>.
Может задаваться как с префиксом схемы (<span class="Interface">http://</span>), так и
без него.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Адрес информации о конфигурации</span> – ссылка на
информацию о конфигурации. Может задаваться как с префиксом схемы (<span class="Interface">http://</span>), так и
без него. В окне <span class="Interface">О программе</span>
отображается следующая информация: <span class="Interface">Синоним конфигурации</span>,
свойство <span class="Interface">Адрес информации о
конфигурации</span>, свойство <span class="Interface">Авторские права</span>,
свойство <span class="Interface">Адрес информации о
поставщике конфигурации</span>.</p>

<p class="MsoNormalCxSpLast"><span class="Interface">Основная форма констант</span> – выбор основной формы для
ввода и редактирования констант конфигурации. Эта форма выбирается из общих
форм (см. <a href="#_ref223166996">здесь</a>) в ветви конфигурации <span class="Interface">Общие – Общие формы</span>.
Подробнее про различные формы см. <a href="#_ref215985720">здесь</a>.</p>

<p class="Note"><span class="Note">Примечание.</span> Данное свойство доступно только в том
случае, если режим редактирования конфигурации установлен в <span class="Interface">Управляемое приложение
и обычное приложение</span>.</p>

<p class="MsoNormalCxSpFirst">Свойства
<span class="Interface">Основная форма отчета</span>,
<span class="Interface">Основная форма
настроек отчета</span> и <span class="Interface">Основная форма
варианта отчета</span> позволяет указать общие формы, которые будут
использоваться отчетами, у которых не указаны соответствующие формы. Например,
можно создать общую форму отчета, содержащую некоторые возможности, которые
должны присутствовать во всех отчетах прикладного решения, например, отправка
сформированного отчета по электронной почте. Для решения такой задачи следует
создать общую форму отчета, реализовать в этой форме необходимые команды и
указать ее в свойстве конфигурации <span class="Interface">Основная форма отчета</span>.
После этого все отчеты, для которых не указана основная форма отчета, будут использовать
созданную общую форму.</p>

<p class="MsoNormalCxSpMiddle">Свойство
<span class="Interface">Основная форма
настроек динамического списка</span> позволяет указать общую форму, с помощью
которой будет выполняться редактирование настроек динамического списка в
прикладном решении. Если данное свойство не заполнено – для редактирования
настроек динамических списков будет использоваться автоматически генерируемая
форма настроек.</p>

<p class="MsoNormalCxSpLast">Свойство
<span class="Interface">Основная форма поиска</span>
позволяет указать общую форму, которая будет использоваться вместо системной
формы полнотекстового поиска, которая может быть вызвана в интерфейсе <span class="Interface">Такси</span> из панели
инструментов или с помощью сочетания клавиш.</p>

<a id="TI000000171" class="bookmark" name="issogl2_5.1.3_категория_свойств_разработка"><h3>5.1.3. Категория свойств «Разработка»</h3></a>

<p class="MsoNormalCxSpFirst">В
свойствах категории описываются данные о поставщике конфигурации и версии конфигурации
(подробнее см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 31. поставка и поддержка конфигурации.htm?_=1496848987#_ref38945612">здесь</a>).</p>

<p class="MsoNormalCxSpLast"><span class="Interface">Адрес каталога обновлений</span> – содержит адрес ресурса,
который может использоваться для обновления прикладного решения.</p>

<a id="TI000000172" class="bookmark" name="issogl2_5.1.4_категория_свойств_справочная_информация"><h3>5.1.4. Категория свойств «Справочная информация»</h3></a>

<p class="MsoNormalCxSpFirst"><span class="Interface">Включать в содержание справки</span> – если свойство
установлено, то содержимое справочной информации включается в общее описание
конфигурации.</p>

<p class="MsoNormalCxSpLast"><span class="Interface">Справочная информация</span> – по ссылке <span class="Interface">Открыть</span>
открывается окно редактирования описания конфигурации.</p>

<a name="_ref367965436"></a><a name="_ref360030478"></a><a name="_ref360030477"></a><a name="_ref351461437"></a><a name="_ref338764115"></a><a name="_ref338764114"></a><a name="_ref334528764"></a><a name="_ref334528763"></a><a name="_ref328413027"></a><a name="_ref328413026"></a><a name="_ref322974500"></a><a name="_ref292461974"></a><a name="_ref370288523"></a><a id="TI000000173" class="bookmark" name="issogl2_5.1.5_категория_свойств_совместимость"><h3>5.1.5. Категория свойств «Совместимость»</h3></a>

<p class="MsoNormalCxSpFirst"><span class="Interface">Режим управления блокировкой данных</span> – вариант
управления блокировкой данных в транзакции (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 9. работа с данными.htm?_=1496848987#_ref220404426">здесь</a>).</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Режим автонумерации объектов</span> – определяет,
использовать повторно или нет автоматически полученные номера объектов, если
они не записаны в базу данных.</p>

<p class="MsoNormalCxSpMiddle">Значение
данного свойства <span class="Term">ОсвобождатьАвтоматически</span>
используется для обеспечения режима работы нумерации, аналогичного версии «1С:Предприятие
8.0». Полученные автоматически номера и коды будут в дальнейшем использоваться,
если объект, для которого они получены, не записан.</p>

<p class="MsoNormalCxSpMiddle">Значение
данного свойства <span class="Term">НеОсвобождатьАвтоматически</span>
используется для выбора режима работы, когда для объектов, требующих
непрерывной нумерации, будет реализовано получение номеров при записи, а не при
открытии формы.</p>

<p class="MsoNormalCxSpMiddle">Если
номер объекта (документа, элемента справочника, плана видов характеристик,
бизнес-процесса или задачи) выделялся в транзакции, то он будет повторно
использоваться даже в том случае, если установлен режим автонумерации <span class="Term">НеОсвобождатьАвтоматически</span>,
в том числе в ситуации, когда объект в транзакции не записывался.</p>

<p class="MsoNormalCxSpMiddle">Режим
автонумерации <span class="Term">НеОсвобождатьАвтоматически</span>
действует только на номера, которые выданы вне транзакции. Т.е. если номер
выдан вне транзакции и код не был использован (объект не был записан), то в
режиме <span class="Term">НеОсвобождатьАвтоматически</span>
номер не будет переиспользован, а в режим <span class="Term">ОсвобождатьАвтоматически</span>
номер будет переиспользован.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Режим использования модальности</span> – указывает, можно
в прикладном решении использовать методы, приводящие к открытию модальных окон
или нельзя. Если свойство имеет значение <span class="Interface">Использовать</span> –
модальные окна можно использовать без ограничений. Если свойство имеет значение
<span class="Interface">Не использовать</span> –
модальные окно нельзя использовать в данном прикладном решении. При попытке
использования методов будет диагностироваться ошибка (в том числе и при
синтаксическом контроле текста на встроенном языке). Вместо модальных окон
следует использовать блокирующие окна (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 7. формы.htm?_=1496848987#_ref371695222">здесь</a>). Если свойство имеет значение <span class="Interface">Использовать с
предупреждением</span>, то при использовании модальных окон ошибки
диагностироваться не будут, но в окно сообщений будет выводиться сообщение о
том, что использование модальных окон в данном режиме запрещено. При работе в
таком режиме также следует заменить модальные окна блокирующие.</p>

<p class="MsoNormalCxSpMiddle">Начиная
с «1С:Предприятия» версии 8.3.5 поведение тонкого и толстого клиентских
приложений несколько изменяется. Описанное выше поведение (только для толстого
и тонкого клиентских приложений) будет наблюдаться только при использовании параметра
/EnableCheckModal командной строки запуска системы. Если этот
параметр не указан, то модальные методы сохраняются работоспособность вне
зависимости от свойства конфигурации <span class="Interface">Режим использования
модальности</span>. В частности, данное поведение позволяет использовать
внешние обработки, написанные без учета свойства конфигурации <span class="Interface">Режим использования
модальности</span>, в конфигурациях, которые написаны из расчета на то, что
данное свойство будет установлено в значение <span class="Interface">Не использовать</span>.</p>

<p class="MsoNormalCxSpMiddle">Если
«1С:Предприятие» запускается из конфигуратора (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 2. работа с конфигурацией.htm?_=1496848987#_ref396392148">здесь</a>), то параметр командной строки запуска <span class="Term">/EnableCheckModal</span> устанавливается
принудительно, без возможности настройки такого поведения.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Режим использования синхронных вызовов расширений платформы и
внешних компонент</span> – свойство управляет возможностью использовать
синхронные вызовы для работы с расширениями работы с файлами, криптографией и
внешними компонентами. Если свойство установлено в значение <span class="Interface">Использовать</span>,
то на стороне клиента доступны синхронные методы работы с расширениями и
внешними компонентами. В том случае, если свойство установлено в значение <span class="Interface">Не использовать</span>,
синхронные методы становятся недоступны в синтакс-помощнике, контекстной
подсказке при редактировании модулей и расширенная проверка конфигурации выдает
ошибки при обнаружении синхронных вызовов на стороне клиента. Вместо синхронных
вызовов стоит использовать асинхронные аналоги. В режиме 1С:Предприятие
использование синхронных методов работы с расширениями и внешними компонентами
приводит в генерации исключения. Режим <span class="Interface">Использовать с
предупреждениями</span> является промежуточным вариантом, когда применение
синхронных методов допускается, но сопровождается предупреждающими сообщениями
в режиме 1С:Предприятие и во время расширенной проверки конфигурации. Толстый
клиент игнорирует фактическое значение данного свойства конфигурации. При
работе в толстом клиенте все синхронные методы работают без исключений и
предупреждений.</p>

<p class="MsoNormalCxSpLast">При
работе веб-клиента, под управлением веб-браузеров Google Chrome или Mozilla Firefox, реализовано следующее поведение:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Свойство установлено в значение <span class="Interface">Не использовать</span> –
расширения работы с файлами и криптографией, предоставляющие синхронные методы
работы, не загружаются. Используются расширения, предоставляющие асинхронные
методы работы.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
В остальных случаях – при подключении
расширений работы с файлами и криптографией выполняется попытка загрузки
расширений, предоставляющих синхронные методы. Если попытка выполнена успешно,
то предоставляется возможность использовать и синхронные и асинхронные методы
работы с файлами или криптографией. В том случае, если «синхронные» расширения
работы с файлами или криптографией не работоспособны, то будут использовать
расширения, предоставляющие асинхронные методы.</p>

<p class="MsoNormalCxSpFirst">Необходимо
помнить, что поддержка синхронных вызовов в веб-браузере Google Chrome по
умолчанию отключена в версии 42 (апрель 2015 года), а полностью удалена в
версии 45 (сентябрь 2015 года). Веб-браузер Mozilla Firefox не поддерживает синхронные вызовы
в веб-браузере начиная с версии 43 (декабрь 2015 года).</p>

<p class="MsoNormalCxSpMiddle">При
этом описанное поведение будет наблюдаться только в том случае, если
используется параметр <span class="Term">/EnableCheckExtensionsAndAddInsSyncCalls</span> командной
строки запуска клиентского приложения.</p>

<p class="MsoNormalCxSpMiddle">Если
«1С:Предприятие» запускается из конфигуратора (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 2. работа с конфигурацией.htm?_=1496848987#_ref396392148">здесь</a>), то параметр командной строки запуска <span class="Term">/EnableCheckExtensionsAndAddInsSyncCalls</span>
устанавливается принудительно, без возможности настройки такого поведения.
Исключением является запуск толстого клиента, для которого данный параметр
командной строки не устанавливается при запуске из конфигуратора.</p>

<p class="MsoNormalCxSpLast"><span class="Interface">Режим совместимости интерфейса</span> – свойство управляет
режимом интерфейса клиентского приложения:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">Версия 8.2</span> – клиентское приложение работает в интерфейсе версии 8.2.
Переключение в интерфейс <span class="Interface">Такси</span>
невозможно.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Версия 8.2. Разрешить
Такси</span> – по умолчанию используется интерфейс версии 8.2. Возможно переключение на интерфейс <span class="Interface">Такси</span> с помощью диалога параметров, объект <span class="Term">НастройкиКлиентскогоПриложения</span>
или командной строки.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Такси. Разрешить Версия
8.2</span> – по умолчанию используется интерфейс <span class="Interface">Такси</span>. Возможно
переключение на интерфейс версии 8.2 с помощью диалога параметров, объект <span class="Term">НастройкиКлиентскогоПриложения</span>
или командной строки.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Interface">Такси</span> – клиентское
приложение работает в интерфейсе <span class="Interface">Такси</span>.
Переключение в режим интерфейса 8.2 невозможно.</p>

<p class="MsoNormalCxSpFirst">При
использовании интерфейса версии 8.2 допустимо переключение между интерфейсом в
отдельных окнах и интерфейсом в закладках.</p>

<p class="MsoNormalCxSpMiddle">Если
свойство <span class="Interface">Режим совместимости</span>
установлено в значение, большее значения <span class="Interface">Версия 8.3.2</span> (<span class="Interface">Не использовать</span>,
<span class="Interface">Версия 8.3.3</span> и
выше), а свойство <span class="Interface">Режим совместимости
интерфейса</span> установлено в значение <span class="Interface">Версия 8.2</span> или <span class="Interface">Версия 8.2. Разрешить
Такси</span>, то для новых пользователей прикладного решения будет
автоматически установлен интерфейс в закладках.</p>

<p class="MsoNormalCxSpMiddle">Картинка
<span class="Term">БиблиотекаКартинок.Справка</span> отображается
различными способами, если свойство <span class="Interface">Режим совместимости интерфейса</span>
установлено в значение <span class="Interface">Такси</span> или <span class="Interface">Такси. Разрешить
Версия 8.2</span> и в остальных случаях.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Режим совместимости</span> – свойство управляет поведением
механизмов, которое в новой версии системы изменено по сравнению с предыдущими
версиями. Данное свойство может принимать значения <span class="Interface">Версия 8.3.9</span>, <span class="Interface">Версия 8.3.8</span>, <span class="Interface">Версия 8.3.7</span>, <span class="Interface">Версия 8.3.6</span>, <span class="Interface">Версия 8.3.5</span>, <span class="Interface">Версия 8.3.4</span>, <span class="Interface">Версия 8.3.3</span>, <span class="Interface">Версия 8.3.2</span>, <span class="Interface">Версия 8.3.1</span>, <span class="Interface">Версия 8.2.16</span>, <span class="Interface">Версия 8.2.13</span>, <span class="Interface">Версия 8.1</span> и <span class="Interface">Не использовать</span>.
Особенности работы системы в режиме совместимости с какой-либо версией см. <A href="/db/content/v8310doc/src/руководство разработчика/приложение 7. особенности поведения системы в различных режимах.htm?_=1496848987#_ref315357162">здесь</a>.</p>

<p class="MsoNormalCxSpMiddle">Не
поддерживается работа конфигурации с неизвестным режимом совместимости.
Неизвестными режимами совместимости являются те, которые соответствуют
функциональности, реализуемой в последующих версиях системы «1С:Предприятие».
Например, если в версии 8.3.1 установить режим совместимости <span class="Interface">Не использовать</span>,
то он будет считаться неизвестным при открытии конфигурации в версии 8.2.16.
При этом, если в версии 8.3.1 установить режим совместимости <span class="Interface">Версия 8.2.16</span>,
то при открытии конфигурации в версии 8.2.16 он будет отображаться как <span class="Interface">Не использовать</span>.
Если в конкретной версии не будет вводиться нового режима совместимости, то
действие режима <span class="Interface">Не использовать</span>
будет аналогично предшествующей версии. При попытке
запустить или загрузить конфигурацию с неизвестным режимом совместимости, будет
выдаваться ошибка с указанием требуемой версии. Запрещена загрузка файлов <span class="Interface">1cv8.dt</span>, сформированных в версии 8.3.1 и выше, в «1С:Предприятии»
младших версий (младше чем 8.3.1). Исключением является ситуация, когда в
версии 8.3.1 свойство конфигурации <span class="Interface">Режим совместимости</span> установлено в значение <span class="Interface">Версия 8.2.16</span>.</p>

<p class="MsoNormalCxSpMiddle">При
конвертации конфигураций версии «1С:Предприятие 8.1» (и более ранних) свойство
принимает значение <span class="Interface">Версия 8.1</span>. В общем
случае можно сказать, что при открытии конфигурацией более поздней версией «1С:Предприятия»,
свойство <span class="Interface">Режим совместимости</span>
будет устанавливаться в значение совместимости с предыдущей версией, если в
новой версии введен такой режим.</p>

<p class="MsoNormalCxSpMiddle">Если
необходимо обеспечить работу прикладного решения сразу в нескольких версиях
«1С:Предприятия» (в том числе и для которых есть режим совместимости), то в
местах различного вызова кода рекомендуется вначале получать текущую версию платформы
и затем сравнивать ее с режимом совместимости (если это необходимо). При этом
не рекомендуется проверять режим совместимости на значение <span class="Term">НеИспользовать</span>.</p>

<p class="MsoNormalCxSpLast">Режим
совместимости мобильной платформы (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 25. разработка решений для мобильной платформы.htm?_=1496848987#_ref335129928">здесь</a>) имеет несколько отличий:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Режим совместимости для мобильной платформы не
управляется свойствами конфигурации (в том числе и свойством <span class="Interface">Режим совместимости</span>).
Однако данное свойство существует «внутри» мобильного приложения.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Установка значения режима совместимости
происходит в момент создания информационной базы. Значение режима совместимости
будет соответствовать версии мобильной платформы, с помощью которой выполнялась
операция создания информационной базы.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Обновление версии мобильной платформы не
приводит к обновлению значения режима совместимости.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
При обновлении конфигурации информационной базы
мобильного приложения, режим совместимости устанавливается в значение, равное
версии мобильной платформы, с помощью которой выполняется обновление
конфигурации.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Соответственно, все методы встроенного языка,
поведение которых учитывает режим совместимости, будут учитывать режим
совместимости, сформированный по вышеизложенным правилам.</p>

<a name="_ref43010875"></a><a name="_ref200777626"></a><a id="TI000000174" class="bookmark" name="issogl1_5.2_модуль_управляемого_приложения"><h2>5.2. Модуль управляемого приложения</h2></a>

<p class="MsoNormalCxSpFirst">Более подробное
описание модуля управляемого приложения см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 4. встроенный язык.htm?_=1496848987#_ref359945716">здесь</a>.</p>

<p class="MsoNormalCxSpLast">Модуль управляемого приложения, являясь
частью конфигурации, сохраняется только в составе конфигурации. Использование
пункта <span class="Interface">Файл – Сохранить</span> приведет к выполнению процедуры
сохранения сделанных изменений применительно ко всей конфигурации.</p>

<a name="_ref202072509"></a><a name="_ref202072507"></a><a id="TI000000175" class="bookmark" name="issogl1_5.3_модуль_внешнего_соединения"><h2>5.3. Модуль внешнего соединения</h2></a>

<p class="MsoNormal">Более подробное описание модуля внешнего соединения
см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 4. встроенный язык.htm?_=1496848987#_ref359945882">здесь</a>.</p>

<a name="_ref135719999"></a><a id="TI000000176" class="bookmark" name="issogl1_5.4_модуль_сеанса"><h2>5.4. Модуль сеанса</h2></a>

<p class="MsoNormal">Более
подробное описание модуля сеанса см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 4. встроенный язык.htm?_=1496848987#_ref359945994">здесь</a>.</p>

<a id="TI000000177" class="bookmark" name="issogl1_5.5_ветвь_конфигурации_общие"><h2>5.5. Ветвь конфигурации «Общие»</h2></a>

<p class="MsoNormal">В
этом разделе описываются некоторые объекты конфигурации, которые располагаются
в ветки <span class="Interface">Общие</span> дерева
конфигурации. Эти объекты не описывают структуру данных и механизмы их
обработки. Они предназначены для установки правил работы пользователей с
данными, описания вспомогательных объектов, используемых для формирования
различных форм, в механизме обмена данными, а также содержат общие модули и
макеты печатных форм, доступные из любого модуля конфигурации.</p>

<a name="_ref215485107"></a><a name="_ref9243524"></a><a name="_ref370286851"></a><a id="TI000000178" class="bookmark" name="issogl2_5.5.1_подсистемы"><h3>5.5.1. Подсистемы</h3></a>

<p class="MsoNormal">Описание
назначения подсистем см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 6. командный интерфейс.htm?_=1496848987#_ref215494086">здесь</a>.</p>

<p class="Note"><span class="Note">Примечание.</span> Не рекомендуется задавать подсистеме имя <span class="Term">Desktop</span>.</p>

<p class="MsoNormal">На
структуру объектов ветви <span class="Interface">Подсистемы</span> не
накладывается никаких ограничений по числу и вложенности.</p>

<p class="Regularbeforepicture">Для
просмотра объектов конфигурации, относящихся к определенному набору подсистем,
в окне <span class="Interface">Конфигурация</span> можно
произвести настройку фильтра отбора объектов. Следует выбрать пункт <span class="Interface">Действия – По
подсистемам</span> окна <span class="Interface">Конфигурация</span> и указать
необходимый набор подсистем, а также установить дополнительные признаки отбора <span class="Interface">Включать объекты
подчиненных подсистем</span> и <span class="Interface">Включать объекты
родительских подсистем</span>.</p>

<p class="Picture"><IMG src="_img/img00088.gif?_=1496848987" WIDTH="481" ALT HEIGHT="311"></p>

<p class="MsoCaption">Рис.
89. Отбор по подсистемам</p>

<p class="MsoNormalCxSpFirst">В
списке подсистем существует специальный пункт <span class="Interface">&lt;Не входящие в
подсистемы&gt;</span>, с помощью которого можно отобрать только те объекты,
которые не принадлежат ни одной подсистеме.</p>

<p class="MsoNormalCxSpLast">Для
быстрого отбора объектов, входящих в конкретную подсистему, можно использовать
специальную команду контекстного меню: <span class="Interface">Объекты подсистемы</span>.
Выполнение данной команды эквивалентно исполнению команды <span class="Interface">Действия – По
подсистемам</span> с указанием только одной подсистемы в открывшемся диалоге.</p>

<p class="Note"><span class="Note">Примечание.</span> При установке отбора по подсистемам не
показываются ключевые ветви дерева объектов конфигурации, в которых нет отобранных
объектов.</p>

<p class="MsoNormalCxSpFirst">Принадлежность
объектов конфигурации к определенной подсистеме определяет пользовательский
интерфейс.</p>

<p class="MsoNormalCxSpMiddle">Значение
свойства объекта конфигурации <span class="Term">Подсистемы</span> доступно
в программе с помощью средств встроенного языка. Это предоставляет
дополнительные возможности отбора данных.</p>

<p class="MsoNormalCxSpLast">Команда
контекстного меню <span class="Interface">Переместить подсистему</span>
позволяет изменить подчиненность подсистемы в иерархии подсистем.</p>

<p class="Regularbeforepicture">Для
того чтобы «привязать» объекты метаданных к конкретной подсистеме (подсистемам),
служит закладка <span class="Interface">Состав</span> редактора
подсистемы.</p>

<p class="Picture"><IMG src="_img/img00089.gif?_=1496848987" WIDTH="480" ALT HEIGHT="444"></p>

<p class="MsoCaption"><a name="_ref216075808">Рис. </a>90. Состав
подсистемы</p>

<p class="MsoNormalCxSpFirst">В
верхней части окна перечислены все объекты конфигурации, которые могут быть
отнесены к различным подсистемам. Отметка объекта галочкой (например, <span class="Interface">Организации</span> на <a href="#_ref216075808">рис.90</a>) означает, что объект начинает входить в подсистему и
появляется в нижней части окна. В нижней части окна перечислены все объекты,
которые входят в редактируемую подсистему.</p>

<p class="MsoNormalCxSpLast">Свойство
<span class="Interface">Картинка</span>
позволяет указать картинку, которая будет отображаться в панели разделов (для
подсистем верхнего уровня). При указании картинок разного размера, высота
панели разделов будет вычисляться в зависимости от режима совместимости
интерфейса:</p>

<p class="MsoListBullet">&#9679; 
<span class="Interface">Версия 8.2</span>:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
Высота панели разделов рассчитывается исходя из
того, что вертикальный размер всех картинок равен 48 точек.</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
Картинки меньших размеров пропорционально
уменьшаются так, чтобы вертикальный размер был равен 48 точек.</p>

<p class="MsoListBullet">&#9679; 
<span class="Interface">Такси</span>:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
Если есть хотя бы одна картинка раздела, размер
которой по вертикали более 48 точек, то все такие картинки пропорционально
уменьшаются так, чтобы вертикальный размер был равен 48 точек.</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
Если все картинки панели разделов имеют
вертикальный размер менее 48 точек, то высота панели разделов рассчитывается на
основании максимального вертикального размера картинок, а картинки с меньшими
размерами центрируются в областях, отведенных под картинки.</p>

<p class="MsoNormal">Если
свойство <span class="Interface">Включать в содержание
справки</span> установлено, то в содержание справки будет включена ветвь,
отображающая справку по подсистеме и всем объектам, входящим в ее состав. Если
свойство сброшено, то такая ветвь (описывающая подсистему и объекты, входящие в
состав этой подсистемы) в содержании справки будет отсутствовать, но справка по
объектам, входящим в подсистему, будет доступна непосредственно в формах самих
объектов.</p>

<a name="_ref9665031"></a><a id="TI000000179" class="bookmark" name="issogl2_5.5.2_общие_модули"><h3>5.5.2. Общие модули</h3></a>

<p class="MsoNormal">Объекты,
расположенные в ветви дерева конфигурации <span class="Interface">Общие модули</span>,
предназначены для размещения в них текстов функций и процедур, которые могут
вызываться из любого другого модуля конфигурации.</p>

<p class="Note"><span class="Note">ВНИМАНИЕ!</span> Общий модуль может содержать только определения
процедур и функций.</p>

<p class="MsoNormalCxSpFirst">Процедуры
и функции общего модуля, для которых в заголовках указано ключевое слово <span class="Term">Экспорт</span>, являются
одними из составных частей <span class="Bold">глобального контекста</span>. Подробнее
о написании процедур в общем модуле можно узнать в разделах «Формат исходных
текстов программных модулей» и «Операторы» справки по встроенному языку.</p>

<p class="MsoNormalCxSpMiddle">Для
редактирования общего модуля необходимо в палитре свойств объекта типа <span class="Interface">Общие модули</span>
окна <span class="Interface">Конфигурация</span> в
свойстве <span class="Interface">Модуль</span> щелкнуть
мышью ссылку <span class="Interface">Открыть</span>. Текст
общего модуля будет выдан для редактирования в редакторе текстов системы «1С:Предприятие»
в режиме редактирования текста программного модуля.</p>

<p class="MsoNormalCxSpMiddle">Общий
модуль, являясь частью конфигурации, сохраняется только в составе конфигурации.</p>

<p class="MsoNormalCxSpMiddle">Свойство
<span class="Interface">Глобальный</span>
определяет, являются ли экспортируемые методы общего модуля частью глобального
контекста.</p>

<p class="MsoNormalCxSpMiddle">Если
свойство <span class="Interface">Глобальный</span>
установлено в значение <span class="Term">Истина</span>, то
экспортируемые методы общего модуля доступны как методы глобального контекста.</p>

<p class="MsoNormalCxSpLast">Если
свойство <span class="Interface">Глобальный</span>
установлено в значение <span class="Term">Ложь</span>, то в
глобальном контексте создается свойство с именем, соответствующим имени общего
модуля в метаданных. Данное свойство доступно только для чтения. Значением
данного свойства является объект <span class="Term">ОбщийМодуль</span>.
Через данный объект доступны экспортируемые методы данного общего модуля. Таким
образом, обращение к методам неглобальных общих модулей выглядит как <span class="Term">XXXXX.YYYYY</span>, где <span class="Term">XXXXX</span> – это
имя свойства, соответствующее контексту общего модуля, а <span class="Term">YYYYY</span> – имя
экспортируемого метода общего модуля.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">РаботаСТорговымОборудованием<span class="operator">.</span>ПодключитьСканерШтрихкодов<span class="operator">(</span><span class="operator">)</span><span class="operator">;</span></pre>

<a id="TI000000180" class="bookmark" name="issogl3_5.5.2.1_различные_контексты_и_общие_модули"><h4>5.5.2.1. Различные контексты и общие модули</h4></a>

<p class="MsoNormalCxSpFirst">С
помощью свойств общих модулей и инструкций препроцессора можно организовать
выполнение различных методов общих модулей в нужном контексте.</p>

<p class="MsoNormalCxSpMiddle">Каждое
свойство общего модуля отвечает за возможность компиляции (и исполнения) общего
модуля в том или ином контексте.</p>

<p class="MsoNormalCxSpLast">Доступны
следующие свойства, отвечающие за контекст, в котором доступны методы общего
модуля:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">Клиент (обычное
приложение)</span> – методы общего модуля будут доступны для толстого
клиента в режиме обычного приложения;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Клиент (управляемое
приложение)</span> – методы общего модуля будут доступны для тонкого
клиента, веб-клиента, а также для толстого клиента в режиме управляемого
приложения;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Сервер</span> – методы
общего модуля будут доступны на сервере;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Interface">Внешнее соединение</span> –
методы общего модуля будут доступны во внешнем соединении.</p>

<p class="MsoNormalCxSpFirst">Если
устанавливаются одновременно несколько свойств, то это означает, что методы
общего модуля будут доступны в нескольких контекстах.</p>

<p class="MsoNormalCxSpMiddle">Если
у общего модуля установлено свойство <span class="Interface">Сервер</span> и еще
какое-либо свойство, то это означает, что общий модуль будет доступен
одновременно на сервере и в выбранном клиенте. При этом необходимо понимать,
что фактически это будет несколько вариантов скомпилированного кода (по числу
выбранных клиентов и собственно для сервера).</p>

<p class="MsoNormalCxSpMiddle">При
этом если метод, расположенный в таком общем модуле, вызывается со стороны
клиента, то будет использована клиентская копия общего модуля, а если с
сервера – серверная. В этом случае с помощью директив препроцессора
(подробнее см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 4. встроенный язык.htm?_=1496848987#_ref231122750">здесь</a>) можно «оградить» сервер от того кода, который на нем
не может исполняться.</p>

<p class="MsoNormalCxSpLast">Рассмотрим
пример. В общем модуле (который может исполняться на тонком клиенте и на
сервере) есть метод, который имеет несколько различное поведение на стороне
тонкого клиента и на стороне сервера. Посмотрим, как это можно сделать:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">Процедура</span> МетодОбщегоМодуля<span class="operator">(</span><span class="operator">)</span> <span class="keyword">Экспорт</span>
    <span class="comment">// Тут размещается различный важный код</span>
<span class="preprocessor">#Если ТонкийКлиент Тогда</span>
    <span class="comment">// Покажем предупреждение</span>
    ПоказатьОповещениеПользователя<span class="operator">(</span><span class="string">&quot;На клиенте&quot;</span><span class="operator">)</span><span class="operator">;</span>
<span class="preprocessor">#КонецЕсли</span>
<span class="keyword">КонецПроцедуры</span></pre>

<p class="MsoNormal">Тогда
на стороне сервера код приобретет следующий вид:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">Процедура</span> МетодОбщегоМодуля<span class="operator">(</span><span class="operator">)</span> <span class="keyword">Экспорт</span>
    <span class="comment">// Тут размещается различный важный код</span>
<span class="keyword">КонецПроцедуры</span></pre>

<p class="MsoNormal">А на
стороне тонкого клиента код будет иметь следующий вид:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">Процедура</span> МетодОбщегоМодуля<span class="operator">(</span><span class="operator">)</span> <span class="keyword">Экспорт</span>
    <span class="comment">// Тут размещается различный важный код</span>
    <span class="comment">// Покажем предупреждение</span>
    ПоказатьОповещениеПользователя<span class="operator">(</span><span class="string">&quot;На клиенте&quot;</span><span class="operator">)</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span></pre>

<p class="MsoNormal">Для
передачи управления с клиента на сервер существует несколько способов:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
вызвать метод серверного общего модуля;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
в модуле формы или команды вызвать метод,
который предваряется директивами компиляции <span class="Term">&amp;НаСервере</span>, <span class="Term">&amp;НаСервереБезКонтекста</span> (подробнее о модуле
формы см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 7. формы.htm?_=1496848987#_ref216510534">здесь</a>).</p>

<p class="MsoNormalCxSpFirst">При
этом из серверных процедур невозможно вызвать методы клиентских общих модулей
(у которых не установлено свойство <span class="Interface">Сервер</span>) и
клиентские методы модуля формы или модуля команды. Управление вернется на
клиента после того, как будет завершен самый внешний вызов серверного метода.</p>

<p class="MsoNormalCxSpMiddle">Исключение
составляют методы модуля формы и модуля команды, которые предваряются
директивами компиляции <span class="Term">&amp;НаКлиентеНаСервере</span>, <span class="Term">&amp;НаКлиентеНаСервереБезКонтекста</span> (подробнее
см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 7. формы.htm?_=1496848987#_ref216510534">здесь</a>).</p>

<p class="MsoNormalCxSpLast">Также
следует упомянуть следующие моменты:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Если общий модуль доступен более чем для одного
клиента, то при написании программного кода следует учитывать максимальные
ограничения, которые могут накладываться клиентами, либо использовать
инструкции препроцессора для «изоляции» кода, специфичного для того или иного
клиента.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Инструкции препроцессора также имеют смысл
тогда, когда один общий модуль имеет несколько контекстов исполнения, например,
внешнее соединение и тонкий клиент или (что встречается значительно чаще)
какой-либо клиент и сервер. В этом случае инструкции препроцессора будут
обрамлять интерактивный код, который невозможно использовать на сервере, но
возможно на клиенте (см. пример выше).</p>

<p class="MsoNormalCxSpFirst">Подробнее
об инструкциях препроцессора и директивах компиляции см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 4. встроенный язык.htm?_=1496848987#_ref231122751">здесь</a> и в разделе «Исполнение процедур и функций» справки
по встроенному языку.</p>

<p class="MsoNormalCxSpLast">Свойство
<span class="Interface">Вызов сервера</span>
предназначено для управления возможностью вызова экспортируемых методов
серверного общего модуля из клиентского кода. Если свойство установлено, то
экспортируемые методы серверного общего модуля доступны для вызова со стороны
клиента. Если свойство не установлено, то такие экспортируемые методы можно
вызывать только из серверных методов (как методов серверных общих модулей, так
и серверных методов модуля формы и модулей команд).</p>

<p class="NoteCxSpFirst"><span class="Note">Совет.</span> Рекомендуется устанавливать в значение <span class="Term">Ложь</span> свойство <span class="Interface">Вызов сервера</span> в
тех случаях, когда серверный общий модуль содержит методы, которые нежелательно
вызывать с клиента (например, по причинам безопасности).</p>

<p class="NoteCxSpLast"><span class="Note">Примечание.</span> Если одновременно установлены свойства <span class="Interface">Клиент (обычное
приложение)</span>, <span class="Interface">Клиент (управляемое
приложение)</span>, <span class="Interface">Внешнее соединение</span>,
то свойство <span class="Interface">Вызов сервера</span>
автоматически сбрасывается. Если устанавливается свойство <span class="Interface">Вызов сервера</span>,
то автоматически сбрасываются свойства <span class="Interface">Клиент (обычное
приложение)</span>, <span class="Interface">Клиент (управляемое
приложение)</span> и <span class="Interface">Внешнее соединение</span>,
если эти свойства были установлены одновременно.</p>

<p class="MsoNormal">Свойство
<span class="Interface">Привилегированный</span>
предназначено для отключения контроля прав доступа при выполнении методов
общего модуля.</p>

<p class="Note"><span class="Note">Примечание.</span>
Если свойство <span class="Interface">Привилегированный</span>
установлено, то общему модулю автоматически устанавливается свойство <span class="Interface">Сервер</span> и
сбрасываются остальные свойства (<span class="Interface">Клиент (обычное
приложение)</span>, <span class="Interface">Клиент (управляемое
приложение)</span> и <span class="Interface">Внешнее соединение</span>).
Привилегированный общий модуль может исполняться только на сервере.</p>

<p class="MsoNormal">Подробнее
о привилегированном режиме см. <a href="#_ref219022975">здесь</a>.</p>

<a name="_ref293398982"></a><a name="_ref414377479"></a><a id="TI000000181" class="bookmark" name="issogl3_5.5.2.2_повторное_использование_возвращаемых_значений"><h4>5.5.2.2. Повторное использование возвращаемых значений</h4></a>

<p class="MsoNormal">Если
общий модуль не является глобальным, то становится доступно свойство <span class="Interface">Повторное использование
возвращаемых значений</span>. Это свойство может принимать следующие значения:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">Не использовать</span> –
повторное использование возвращаемых значений для функций этого общего модуля
не используется.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Interface">На время вызова</span> и <span class="Interface">На время сеанса</span> –
для общего модуля используется метод определения повторного использования
данных. Суть этого метода заключается в том, что в ходе выполнения кода система
запоминает параметры и результат работы функций после первого вызова функции.
При повторном вызове функции с такими же параметрами, происходит возврат
запомненного значения (из первого вызова) без выполнения самой функции. Если
функция во время своего выполнения меняет значения параметров, то повторный
вызов функции не будет это делать.</p>

<p class="MsoNormal">Можно
выделить следующие особенности сохранения результатов вызова:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
если функция выполняется на сервере и вызывается
из серверного кода, то значения параметров и результат вызова запоминаются для
текущего сеанса на стороне сервера;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
если функция выполняется на толстом или тонком
клиенте, то значения параметров и результатов вызова запоминаются на стороне
клиента;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
если функция выполняется на стороне сервера, а вызывается
из клиентского кода, то значения параметров вызова запоминаются и на стороне
клиента, и на стороне сервера (для текущего сеанса).</p>

<p class="MsoNormal">Сохраненные
значения удаляются:</p>

<p class="MsoListBullet">&#9679; 
если свойство установлено в значение <span class="Interface">На время вызова</span>:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
на стороне сервера – при возврате управления
с сервера;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
на стороне клиента – при завершении работы
процедуры или функции встроенного языка верхнего уровня (вызванной системой из
интерфейса, а не из другой процедуры или функции встроенного языка);</p>

<p class="MsoListBullet">&#9679; 
если свойство общего модуля установлено в значение
<span class="Interface">На время сеанса</span>:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
на стороне сервера – при окончании сеанса;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
на стороне клиента – при закрытии
клиентского приложения.</p>

<p class="MsoNormal">Сохраненные
значения будут удалены:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
на сервере, в толстом клиенте, во внешнем соединении,
в тонком клиенте и в веб-клиенте с обычной скоростью соединения – через 20
минут после вычисления сохраняемого значения или через 6 минут после последнего
использования;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
в тонком клиенте и веб-клиенте с низкой
скоростью соединения – через 20 минут после вычисления сохраняемого
значения;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
при нехватке оперативной памяти в рабочем процессе
сервера;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
при перезапуске рабочего процесса;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
при переключении клиента на другой рабочий процесс.</p>

<p class="MsoNormalCxSpFirst">После
удаления значений вызов экспортируемой функции выполняется как при первом
вызове.</p>

<p class="MsoNormalCxSpMiddle">На
выполнение процедур данное свойство общих модулей не влияет – процедуры
выполняются всегда.</p>

<p class="MsoNormalCxSpLast">Если
у общего модуля установлено повторное использование возвращаемых значений, то
на типы параметров экспортируемых функции накладывается ряд ограничений. Типы
параметров могут быть только:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Примитивными типами (<span class="Term">Неопределено</span>, <span class="Term">NULL</span>, <span class="Term">Булево</span>, <span class="Term">Число</span>, <span class="Term">Строка</span>, <span class="Term">Дата</span>).</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Любыми ссылками на объекты базы данных.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Структурами со значениями свойств
вышеперечисленных типов. В этом случае идентичность параметров контролируется «по
содержимому» структур.</p>

<p class="MsoNormal">Если
экспортируемая функция возвращает какой-либо объект, то фактически возвращается
ссылка на объект, хранимый в кеше. Если после получения этой ссылки произойдет
изменение состояния объекта, то последующий вызов той же самой функции приведет
к возврату ссылки на уже измененный объект без фактического выполнения функции.
Такое поведение будет наблюдаться до удаления сохраненного значения (по любой
причине). Другими словами – изменение состояния объекта, полученного в результате
вызова функции из общего модуля с повторным использованием возвращаемых
значений, не является основанием для фактического вызова функции. Также следует
помнить, что кеш возвращаемых объектов индифферентен к состоянию привелигированного
режима в момент вызова функции с повторным использованием возвращаемых
значений. Эта особенность может привести к следующей особенности поведения:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Фактическое выполнение вызова функции с
повторным использованием возвращаемых значений (первый вызов) выполнялось при
включенном привелигированном режиме.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
При выполнении функции был получен объект,
который не может быть получен с отключенным привелигированным режимом.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Последующие вызовы функции выполнялись без
установки привелигированного режима.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Однако, до момента очистки кеша возвращаемых
объектов или повторного фактического вызова, функция будет возвращать формально
недоступный объект.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Также верно и обратное поведение, когда первый
вызов выполняется без установки привелигированного режима, а в привелигированном
режиме не возвращается объект, который мог быть получен в привелигированном
режиме.</p>

<p class="MsoNormalCxSpFirst">Если
у общего модуля свойство <span class="Interface">Повторное использование
возвращаемых значений</span> установлено в значение <span class="Interface">На время сеанса</span>,
то в значениях, возвращаемых функциями такого модуля, нельзя использовать
значения типа <span class="Term">МенеджерВременныхТаблиц</span>, <span class="Term">Запрос</span> и прикладные объекты (например, <span class="Term">ОбработкаОбъект</span> или <span class="Term">ДокументОбъект</span>), причем, как непосредственно,
так и в составе любых коллекций. Исключение составляют данные ссылочных типов (<span class="Term">ДокументСсылка</span>, <span class="Term">СправочникСсылка</span> и т. д.).</p>

<p class="MsoNormalCxSpMiddle">Если функция общего модуля, с установленным повторным
использованием, вызываются из этого же самого общего модуля (например, с именем
<span class="Term">ОбщийМодуль</span>),
то следует помнить о следующей особенности: если функция вызывается по имени <span class="Term">МояФункция()</span>,
то исполнение функции будет происходить при каждом вызове функции. Для того
чтобы использовались сохраненные значения, функция следует вызывать по полному
имени: <span class="Term">ОбщийМодуль.МояФункция()</span>.</p>

<p class="MsoNormalCxSpLast">Метод
глобального контекста <span class="Term">ОбновитьПовторноИспользуемыеЗначения()</span>
удаляет все повторно используемые значения, как на стороне сервера, так и на
стороне клиента, независимо от места вызова метода. После выполнения метода <span class="Term">ОбновитьПовторноИспользуемыеЗначения()</span>
первый вызов функции будет выполнен полностью.</p>

<a name="_ref44209798"></a><a name="_ref244324971"></a><a name="_ref244323673"></a><a name="_ref370403612"></a><a name="_ref370403611"></a><a id="TI000000182" class="bookmark" name="issogl2_5.5.3_параметры_сеанса"><h3>5.5.3. Параметры сеанса</h3></a>

<p class="MsoNormalCxSpFirst">Параметры сеанса предназначены в основном для
использования значений параметров в запросах и условиях ограничения доступа к
данным для текущего сеанса.</p>

<p class="MsoNormalCxSpMiddle">Использование параметров сеанса снижает время
доступа к данным за счет исключения связанных таблиц.</p>

<p class="MsoNormalCxSpMiddle">Настройка параметров сеанса производится в
палитре свойств.</p>

<p class="MsoNormalCxSpMiddle">Для каждого параметра сеанса определены два
права доступа – <span class="Term">Получение</span> и <span class="Term">Установка</span> (подробнее о правах см. раздел ниже).
Если право <span class="Term">Установка</span> снято, то инициализация данного
параметра сеанса возможна только в общем модуле с установленным свойством <span class="Interface">Привилегированный</span> или в модуле сеанса.</p>

<p class="MsoNormalCxSpMiddle">Инициализация параметров сеанса может выполняться
в модуле сеанса, в обработчике события <span class="Term">УстановкаПараметровСеанса()</span> (см. <a href="#_ref135719999">здесь</a>).</p>

<p class="MsoNormalCxSpMiddle">До инициализации значение параметр сеанса неопределено.
При попытке чтения такого параметра сначала вызывается обработчик события <span class="Term">УстановкаПараметровСеанса()</span>. Если после вызова
состояние параметра остается неопределенным, то вызывается исключение.</p>

<p class="MsoNormalCxSpLast">Следует разделять области применения параметров
сеанса и глобальных переменных модуля управляемого приложения (модуля
внешнего соединения). Среди основных отличий параметров сеанса:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Параметры сеанса являются объектами метаданных,
что позволяет «1С:Предприятию» осуществлять повышенный контроль за их
использованием.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Параметры сеанса имеют тип. Набор типов
параметров сеанса ограничен. Их важной общей чертой является невозможность
изменения внутреннего состояния для объектов этих типов.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Для установки или получения значения параметра
сеанса текущий пользователь должен быть наделен соответствующим правом.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
В клиент-серверном варианте «1С:Предприятия»
значения параметров сеанса хранятся на сервере и доступны как с сервера, так и
с клиента.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Параметры сеанса доступны как из встроенного
языка «1С:Предприятия», например:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">ПараметрыСеанса<span class="operator">.</span>ТекущийПользователь <span class="operator">=</span> ИмяПользователя<span class="operator">(</span><span class="operator">)</span></pre>

<p class="Indentlist">Так и из ограничений доступа к данным,
например:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">Документ<span class="operator">.</span>Отчет<span class="operator">.</span>Пользователь <span class="operator">=</span> &ТекущийПользователь</pre>

<p class="Indentlist">В последнем случае для получения значения
параметра сеанса у текущего пользователя наличия соответствующего права не
требуется.<a name="_ref72302185"></a></p>

<p class="NoteCxSpFirst"><a name="_ref254965859"></a>Примечание 1. Если параметру сеанса установлен один из
следующих типов: <span class="Term">ФиксированныйМассив</span>,
<span class="Term">ФиксированнаяКоллекция</span>
или <span class="Term">ФиксированнаяСтруктура</span>,
то в качестве значения элемента коллекции может выступать значение <span class="Term">Неопределено</span>.</p>

<p class="NoteCxSpLast"><span class="Note">Примечание 2.</span>
Объем данных, перемещаемых между клиентом и сервером, для установки одного
параметра сеанса, не должен превышать 4 Gb (в сериализованном виде).</p>

<a name="_ref423696928"></a><a id="TI000000183" class="bookmark" name="issogl2_5.5.4_роли_и_права_доступа"><h3>5.5.4. Роли и права доступа</h3></a>

<a id="TI000000184" class="bookmark" name="issogl3_5.5.4.1_общая_информация"><h4>5.5.4.1. Общая информация</h4></a>

<p class="MsoNormalCxSpFirst">Каждый
пользователь системы должен иметь свободный доступ к общей информации, такой
как общие справочники, константы или перечисления.</p>

<p class="MsoNormalCxSpMiddle">С
другой стороны, необходимо, чтобы каждый пользователь имел дело только с той
информацией, которая необходима ему для работы, и никак не мог своими неосторожными
действиями повлиять на работу других пользователей или на работоспособность
системы в целом.</p>

<p class="MsoNormalCxSpMiddle">Конфигуратор
системы «1С:Предприятие» предоставляет разработчикам развитые средства
администрирования, предназначенные для решения указанных задач.</p>

<p class="MsoNormalCxSpMiddle">Прежде
всего, в процессе создания конфигурации создается необходимое число типовых
ролей, описывающих полномочия различных категорий пользователей на доступ к
информации, обрабатываемой системой. Роли могут быть заданы в достаточно широких
пределах – от возможности только просмотра ограниченного числа видов
документов до полного набора прав по вводу, просмотру, корректировке и удалению
любых видов данных.</p>

<p class="MsoNormalCxSpMiddle">В
системе «1С:Предприятие» различают два типа прав – <span class="Bold">основные</span>
и <span class="Bold">интерактивные</span>. <span class="Bold">Основные</span>
проверяются всегда, независимо от способа обращения к объектам информационной
базы. <span class="Bold">Интерактивные</span> проверяются при выполнении интерактивных
операций (просмотр и редактирование в форме и т. д.). Доступные права
доступа см. <A href="/db/content/v8310doc/src/руководство разработчика/приложение 6. описание прав доступа.htm?_=1496848987#_ref259013402">здесь</a> (или в описании метода глобального контекста <span class="Term">ПравоДоступа()</span> в синтакс-помощнике).</p>

<p class="MsoNormalCxSpMiddle">Если
для объекта, данные которого представляются в форме, установлено (разрешено)
право <span class="Term">Просмотр</span>, но не
установлено право <span class="Term">Редактирование</span>,
то в форме данный реквизит будет показан (элемент управления, связанный с
данным объектом, отображает значение реквизита), но редактирование значения
будет недоступно. Если снять право <span class="Term">Просмотр</span>, то при
попытке открытия формы будет выдано предупреждение: <span class="Interface">Нарушение прав
доступа!</span>, и форма не будет открыта.</p>

<p class="MsoNormalCxSpMiddle">В
списке прав при редактировании роли следует обратить внимание на внутреннюю
иерархию прав. Иерархия проявляется в виде «старшинства» прав. При снятии
«старшего» права снимаются другие права («младшие»), связанные со «старшим» правом;
и наоборот, при установке «младшего» права устанавливаются снятые «старшие»
права. Так, при снятии права <span class="Term">Просмотр</span> снимается
право <span class="Term">Редактирование</span>.
Что вполне логично, так как нет смысла предоставлять право редактирования при
невозможности показа элемента управления, связанного с данными.</p>

<p class="MsoNormalCxSpLast">В
общем случае права можно задавать:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
на всю конфигурацию в целом,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
объекты,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
реквизиты объектов,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
табличные части,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
реквизиты табличных частей,</p>

<p class="MsoListBulletCxSpLast">&#9679; 
стандартные реквизиты.</p>

<p class="MsoNormal">При
создании новой роли устанавливаются следующие права доступа на корневой объект
конфигурации: <span class="Term">ТонкийКлиент</span>, <span class="Term">ВебКлиент</span>, <span class="Term">СохранениеДанныхПользователя</span>, <span class="Term">Вывод</span>.</p>

<a name="_ref219022975"></a><a name="_ref450232803"></a><a id="TI000000185" class="bookmark" name="issogl3_5.5.4.2_привилегированный_режим_работы"><h4>5.5.4.2. Привилегированный режим работы</h4></a>

<p class="MsoNormalCxSpFirst">На
сервере «1С:Предприятия» фрагменты кода могут исполняться как в обычном, так и
в привилегированном режиме. В привилегированном режиме не выполняется
проверка доступа на уровне записей, не производится контроль прав и разрешены
любые операции, что ускоряет выполнение модулей.</p>

<p class="MsoNormalCxSpLast">Для
управления привилегированным режимом предназначен метод глобального контекста <span class="Term">УстановитьПривилегированныйРежим()</span>, который
позволяет включать или выключать привилегированный режим.</p>

<p class="Note"><span class="Note">ВНИМАНИЕ!</span> В клиент-серверном варианте вызов метода не
оказывает влияния при работе на стороне клиента.</p>

<p class="MsoNormalCxSpFirst">По
умолчанию привилегированный режим выключен.</p>

<p class="MsoNormalCxSpMiddle">Количество
включений привилегированного режима должно совпадать с количеством выключений.
Однако если внутри процедуры или функции происходило включение
привилегированного режима (один раз или более), но не происходило его выключение,
то система автоматически выполнит выключение столько раз, сколько незавершенных
включений было в покидаемой процедуре или функции</p>

<p class="MsoNormalCxSpMiddle">Если
в процедуре или функции вызовов метода <span class="Term">УстановитьПривилегированныйРежим(Ложь)</span> сделано
больше, чем вызовов метода <span class="Term">УстановитьПривилегированныйРежим(Истина)</span>, то
будет вызвано исключение.</p>

<p class="MsoNormalCxSpMiddle">Функция
<span class="Term">ПривилегированныйРежим()</span> возвращает <span class="Term">Истина</span>, если привилегированный режим еще
включен, и <span class="Term">Ложь</span>, если он полностью выключен. При этом не
анализируется количество установок привилегированного режима в конкретной
функции.</p>

<p class="MsoNormalCxSpMiddle">Программная
установка привилегированного режима может потребоваться в случае массированных
операций с данными информационной базы, и при этом нет смысла проверять права
доступа к данным. Например, существует пользователь, которому доверили выполнять
пересчет цен товаров. Тогда в обработке, например, которая это выполняет, можно
проверить право текущего пользователя выполнять данную обработку, а затем
включить привилегированный режим и выполнить все необходимые операции с базой
данных. При этом у пользователя может не быть прав на чтение цен. Но так как
данная обработка не выдает пользователю самих цен, а только их пересчитывает,
то поставленные задачи ограничения доступа будут также решены.</p>

<p class="MsoNormalCxSpLast"><a name="_ref133045806"></a><a name="_ref227486536">Также существует возможность стартовать привилегированный сеанс.
Это сеанс, в котором привилегированный режим установлен с самого начала работы
системы. При этом во время работы метод </a><span class="Term">ПривилегированныйРежим()</span> будет всегда возвращать
<span class="Term">Истина</span>, а возможность отключить
привилегированный режим не поддерживается. Стартовать привилегированный сеанс
может только пользователь, которому доступны административные права (право <span class="Term">Администрирование</span>). Запуск сеанса можно
выполнить с помощью ключа командной строки запуска клиентского приложения <span class="Term">UsePrivilegedMode</span> или параметра строки
соединения с информационной базой <span class="Term">prmod</span>.</p>

<a name="_ref337482734"></a><a name="_ref378761017"></a><a id="TI000000186" class="bookmark" name="issogl3_5.5.4.3_безопасный_режим_работы"><h4>5.5.4.3. Безопасный режим работы</h4></a>

<p class="MsoNormalCxSpFirst">В случае необходимости использования на
сервере «ненадежного» программного кода: внешние обработки или программный код,
вводимый пользователем для использования в методах <span class="Term">Выполнить()</span>
и <span class="Term">Вычислить()</span>,
можно воспользоваться безопасным режимом работы.</p>

<p class="MsoNormalCxSpLast">В безопасном режиме:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Привилегированный режим <span class="Bold">отменяется</span>.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Переход в привилегированный режим <span class="Bold">игнорируется</span>.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Bold">Запрещены</span> операции,
приводящие к использованию внешних средств по отношению к платформе «1С:Предприятие»
(включая неблокирующие аналоги указанных методов):</p>

<p class="MsoListBullet2">&#9679; 
Механизмы COM:</p>

<p class="MsoListBullet3CxSpFirst">&#9679; 
<span class="Term">COMОбъект()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ПолучитьCOMОбъект()</span>;</p>

<p class="MsoListBullet3CxSpLast">&#9679; 
<span class="Term">ОболочкаHTMLДокумента.ПолучитьCOMОбъект()</span>.</p>

<p class="MsoListBullet2">&#9679; 
Загрузка внешних компонентов:</p>

<p class="MsoListBullet3CxSpFirst">&#9679; 
<span class="Term">ЗагрузитьВнешнююКомпоненту()</span>;</p>

<p class="MsoListBullet3CxSpLast">&#9679; 
<span class="Term">ПодключитьВнешнююКомпоненту()</span>.</p>

<p class="MsoListBullet2">&#9679; 
Доступ к файловой системе:</p>

<p class="MsoListBullet3CxSpFirst">&#9679; 
ЗначениеВФайл();</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">КопироватьФайл()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ОбъединитьФайлы()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ПереместитьФайл()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">РазделитьФайл()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">СоздатьКаталог()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">УдалитьФайлы()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">Новый Файл</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">Новый xBase</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ЗаписьHTML.ОткрытьФайл()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ЧтениеHTML.ОткрытьФайл()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ЧтениеXML.ОткрытьФайл()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ЗаписьXML.ОткрытьФайл()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ЧтениеFastInfoset.ОткрытьФайл()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ЗаписьFastInfoset.ОткрытьФайл()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">КаноническаяЗаписьXML.ОткрытьФайл()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ПреобразованиеXSL.ЗагрузитьИзФайла()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ЗаписьZipФайла.Открыть()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ЧтениеZipФайла.Открыть()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">Новый ЧтениеТекста()</span>, если первый параметр –
строка;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ЧтениеТекста.Открыть()</span>, если первый параметр –
строка;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">Новый ЗаписьТекста()</span>, если первый параметр –
строка;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ЗаписьТекста.Открыть()</span>, если первый параметр –
строка;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">Новый</span> ИзвлечениеТекста<span class="Term">()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
изменение свойства<span class="Term"> ИзвлечениеТекста.ИмяФайла</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ИзвлечениеТекста.Записать()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">Новый Картинка()</span>,
если первый параметр – строка;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">Картинка.Записать()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">Новый ДвоичныеДанные()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ДвоичныеДанные.Записать()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">Новый ЗаписьДанных()</span>, если первый параметр –
строка;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">Новый ЧтениеДанных()</span>, есть первый параметр –
строка;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
все методы объекта <span class="Term">МенеджерФайловыхПотоков</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">Новый ФайловыйПоток()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ФорматированныйДокумент.Записать()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ГеографическаяСхема.Прочитать()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ГеографическаяСхема.Записать()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ГеографическаяСхема.Напечатать()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ТабличныйДокумент.Прочитать()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ТабличныйДокумент.Записать()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ТабличныйДокумент.Напечатать()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ГрафическаяСхема.Прочитать()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ГрафическаяСхема.Записать()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ГрафическаяСхема.Напечатать()</span>;</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">ТекстовыйДокумент.Прочитать()</span>;</p>

<p class="MsoListBullet3CxSpLast">&#9679; 
<span class="Term">ТекстовыйДокумент.Записать()</span>.</p>

<p class="MsoListBullet2">&#9679; 
Доступ к Интернету:</p>

<p class="MsoListBullet3CxSpFirst">&#9679; 
<span class="Term">Новый ИнтернетСоединение</span>,</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">Новый ИнтернетПочта</span>,</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">Новый ИнтернетПрокси</span>,</p>

<p class="MsoListBullet3CxSpMiddle">&#9679; 
<span class="Term">Новый HTTPСоединение</span>,</p>

<p class="MsoListBullet3CxSpLast">&#9679; 
<span class="Term">Новый FTPСоединение</span>.</p>

<p class="NoteCxSpFirst"><span class="Note">ВНИМАНИЕ!</span> При
выполнении запрещенных операций во время выполнения генерирует исключение.</p>

<p class="NoteCxSpLast"><span class="Note">Примечание.</span>
Внешние отчеты и обработки, открываемые с помощью меню <span class="Interface">Файл – Открыть</span>, выполняются в безопасном режиме,
если у пользователя отсутствуют административные права доступа.</p>

<p class="MsoNormalCxSpFirst">Количество включений
безопасного режима должно совпадать с количеством выключений. Однако если
внутри процедуры или функции происходило включение безопасного режима (один раз
или более), но не происходило его выключение, то система автоматически выполнит
выключение столько раз, сколько незавершенных включений было в покидаемой
процедуре или функции.</p>

<p class="MsoNormalCxSpMiddle">Если
в процедуре или функции вызовов метода <span class="Term">УстановитьБезопасныйРежим(Ложь)</span> сделано
больше, чем вызовов метода <span class="Term">УстановитьБезопасныйРежим(Истина)</span>, то будет
вызвано исключение.</p>

<p class="MsoNormalCxSpLast">Программная
установка безопасного режима может потребоваться в том случае, когда
разработчик конфигурации предполагает использование стороннего (по отношению к конфигурации)
программного кода, надежность которого разработчик гарантировать не может.
Примером такого кода является выполнение методов <span class="Term">Выполнить()</span> и <span class="Term">Вычислить()</span> в тех случаях, когда исполняемый
код получается из внешнего мира. В этом случае хорошей практикой будет
установка безопасного режима до выполнения этих методов:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="comment">// Формируется программный код, который следует исполнить</span>
<span class="comment">// Возможно, что код загружается из внешних источников</span>
<span class="comment">// или введен вручную</span>
ИсполняемыйКод <span class="operator">=</span> ПолучитьВыполняемыйКодИзВнешнегоМира<span class="operator">(</span><span class="operator">)</span><span class="operator">;</span>
<span class="comment">// Включим безопасный режим</span>
УстановитьБезопасныйРежим<span class="operator">(</span><span class="keyword">Истина</span><span class="operator">)</span><span class="operator">;</span>
<span class="comment">// Выполним потенциально опасный код</span>
<span class="keyword">Выполнить</span><span class="operator">(</span>ИсполняемыйКод<span class="operator">)</span><span class="operator">;</span>
<span class="comment">// Выключим безопасный режим</span>
УстановитьБезопасныйРежим<span class="operator">(</span><span class="keyword">Ложь</span><span class="operator">)</span><span class="operator">;</span></pre>

<p class="MsoNormalCxSpFirst">В некоторых случаях настройки безопасного
режима могут конфликтовать с настройками привилегированного режима
(см. <a href="#_ref450232803">здесь</a>). Примером такого конфликта выступает проведение
документа, для которого установлено свойство <span class="Interface">Привилегированный режим при проведении</span>, из кода на
встроенном языке, который выполняется в безопасном режиме. В этом случае привилегированный
режим отключается, а попытки его включить игнорируются. В результате код на
встроенном языке, который «рассчитывает» на включенный привилегированный режим,
«сталкивается» с его отсутствием, что приводит к возникновению ошибок с
неочевидными причинами появления. Для предотвращения такой ситуации, система «1С:Предприятие»
автоматически отключает безопасный режим для обработчиков событий, которые
доступны в модуле объекта или модуле менеджера, при условии, что исполняемый
код на встроенном языке не располагается в расширении конфигурации
(см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 32. расширение конфигурации.htm?_=1496848987#_ref405464478">здесь</a>). Такие обработчики отмечаются в синтакс-помощнике
особым образом (подробнее см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 4. встроенный язык.htm?_=1496848987#_ref417645360">здесь</a>).</p>

<p class="MsoNormalCxSpMiddle">Также предоставляется возможность отключить
безопасный режим из встроенного языка (если программный код, из которого
выполняется попытка отключения, не находится в расширении конфигурации). Для отключения
безопасного режима предназначен метод <span class="Term">УстановитьОтключениеБезопасногоРежима()</span>.
Проверить, что безопасный режим в данный момент отключен (автоматически или с
помощью вызова метода), можно с помощью метода <span class="Term">ПолучитьОтключениеБезопасногоРежима()</span>.</p>

<p class="MsoNormalCxSpLast">В рамках одного метода на встроенном языке не
может быть более одного уровня вложенности установки безопасного режима
(вызовом метода <span class="Term">УстановитьБезопасныйРежим()</span>)
и установки отключения безопасного режима (автоматически на время выполнения
обработчиков событий объектов метаданных или вызовом метода <span class="Term">УстановитьОтключениеБезопасногоРежима()</span>).
При попытке увеличить вложенность генерируется исключение:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="comment">// Корректное использование</span>
<span class="keyword">Процедура</span> ИмяПроцедуры<span class="operator">(</span><span class="operator">)</span>
    УстановитьОтключениеБезопасногоРежима<span class="operator">(</span><span class="keyword">Истина</span><span class="operator">)</span><span class="operator">;</span>
    УстановитьБезопасныйРежим<span class="operator">(</span><span class="keyword">Истина</span><span class="operator">)</span><span class="operator">;</span>
    УстановитьБезопасныйРежим<span class="operator">(</span><span class="keyword">Ложь</span><span class="operator">)</span><span class="operator">;</span>
    УстановитьОтключениеБезопасногоРежима<span class="operator">(</span><span class="keyword">Ложь</span><span class="operator">)</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span>
<span class="comment">// Некорректное использование</span>
<span class="keyword">Процедура</span> ИмяПроцедуры<span class="operator">(</span><span class="operator">)</span>
    УстановитьОтключениеБезопасногоРежима<span class="operator">(</span><span class="keyword">Истина</span><span class="operator">)</span><span class="operator">;</span>
    УстановитьБезопасныйРежим<span class="operator">(</span><span class="keyword">Истина</span><span class="operator">)</span><span class="operator">;</span>
    УстановитьОтключениеБезопасногоРежима<span class="operator">(</span><span class="keyword">Ложь</span><span class="operator">)</span><span class="operator">;</span> <span class="comment">// Исключение </span>
<span class="keyword">КонецПроцедуры</span>
<span class="keyword">Процедура</span> ИмяПроцедуры<span class="operator">(</span><span class="operator">)</span>
    УстановитьБезопасныйРежим<span class="operator">(</span><span class="keyword">Истина</span><span class="operator">)</span><span class="operator">;</span>
    УстановитьОтключениеБезопасногоРежима<span class="operator">(</span><span class="keyword">Ложь</span><span class="operator">)</span><span class="operator">;</span> <span class="comment">// Исключение</span>
<span class="keyword">КонецПроцедуры</span></pre>

<a id="TI000000187" class="bookmark" name="issogl3_5.5.4.4_режимы_удаления_данных"><h4>5.5.4.4. Режимы удаления данных</h4></a>

<p class="MsoNormal">Система
«1С:Предприятие» предоставляет пользователям возможность удаления лишней или
устаревшей информации в двух режимах:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Bold">непосредственное удаление
объектов</span>, при котором не производится анализ использования удаляемого
объекта в других объектах базы данных;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
использование <span class="Bold">контроля
ссылочной целостности</span>, при котором объекты сначала помечаются на
удаление, а затем производится контроль наличия ссылок на эти объекты в других
объектах.</p>

<p class="MsoNormalCxSpFirst">Если
пользователю разрешен режим непосредственного удаления, то в этом случае
дополнительная ответственность ложится и на пользователя, выполняющего удаление
объектов, и на разработчика (администратора системы), определяющего права пользователей
и действия системы при неразрешенных ссылках. Работа системы без контроля
ссылочной целостности может, например, быть использована специалистами в
процессе отладки конфигурации. Если контроль ссылочной целостности не используется,
то удаление объектов происходит непосредственно (без пометки на удаление) и
появляется возможность образования неразрешенных ссылок.</p>

<p class="MsoNormalCxSpMiddle">Самым
радикальным способом установки режима контроля ссылочной целостности является
отключение прав непосредственного удаления объектов в целом. Таким способом
полностью исключается возможность в пределах данной конфигурации непосредственно
удалять объекты. Пользователи будут иметь возможность только помечать объекты
на удаление.</p>

<p class="MsoNormalCxSpLast">Заметим,
что также существует возможность непосредственного удаления объектов средствами
встроенного языка. Поэтому элементы конкретной конфигурации могут выполнять
непосредственное удаление в обход механизма контроля ссылочной целостности. В
этом случае ответственность за целостность данных лежит на специалисте,
выполняющем конфигурирование системы.</p>

<a name="_ref275269373"></a><a id="TI000000188" class="bookmark" name="issogl3_5.5.4.5_правила_сочетания_ролей"><h4>5.5.4.5. Правила сочетания ролей</h4></a>

<p class="MsoNormal">Роли
обычно указываются для каждого вида деятельности. При включении в список
пользователей нового пользователя (см. <a href="/db/v8310doc/bookmark/adm/TI000000123" target="_top">здесь</a>) ему может быть назначена определенная роль или совокупность ролей.
В случае использования нескольких ролей алгоритм предоставления доступа по
каждому объекту и виду права доступа (например, <span class="Interface">Пометка на удаление</span>)
будет работать следующим образом:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
если <span class="Bold">хотя бы в одной</span>
роли есть <span class="Bold">разрешение</span>, то доступ будет <span class="Bold">открыт</span>;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
если <span class="Bold">во всех</span> ролях есть <span class="Bold">запрещение</span>, то доступ будет <span class="Bold">закрыт</span>.</p>

<a name="_ref216085312"></a><a id="TI000000189" class="bookmark" name="issogl3_5.5.4.6_редактор_прав_доступа"><h4>5.5.4.6. Редактор прав доступа</h4></a>

<p class="MsoNormal">В левой
части окна редактирования прав выводится дерево объектов конфигурации по всем
подсистемам. В правой – список прав по выбранному объекту конфигурации в
дереве конфигурации. Если для действия установлен флажок, то оно разрешено.</p>

<p class="Regularbeforepicture">Так,
например, для пользователя с ролью <span class="Term">МенеджерПоПродажам</span> разрешен просмотр документа
<span class="Term">ПриходТовара</span> и запрещено его интерактивное
добавление.</p>

<p class="Picture"><IMG src="_img/img00090.gif?_=1496848987" WIDTH="591" ALT HEIGHT="446"></p>

<p class="MsoCaption">Рис.
91. Редактор прав доступа роли</p>

<p class="MsoNormalCxSpFirst">Состояние
флажка <span class="Interface">Устанавливать права
для новых объектов</span> определяет, будут ли установлены права для этой роли
на новые добавляемые объекты конфигурации (снят по умолчанию для новой роли).</p>

<p class="MsoNormalCxSpMiddle">Состояние
флажка <span class="Interface">Устанавливать права
для реквизитов и табличных частей по умолчанию</span> определяет, будут ли
установлены права для этой роли на реквизиты (включая стандартные) и табличные
части (включая стандартные) для новых объектов конфигурации (установлен по
умолчанию).</p>

<p class="MsoNormalCxSpMiddle">При
изменении состояния флажка <span class="Interface">Устанавливать права
для реквизитов и табличных частей по умолчанию</span> система предлагает
изменить (установить или сбросить) права доступа для всех реквизитов (включая
стандартные) и табличных частей (включая стандартные) всех объектов
конфигурации. В случае отказа от предлагаемого действия изменений в
существующих объектах не происходит, а изменяется только поведение по умолчанию
для новых объектов.</p>

<p class="MsoNormalCxSpLast">При
создании новой роли все права устанавливаются конфигуратором в следующее
состояние:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
для объектов права не установлены;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
для реквизитов (включая стандартные) и табличных
частей (включая стандартные) права установлены.</p>

<p class="MsoNormalCxSpFirst">Флажок
<span class="Interface">Независимые права
подчиненных объектов</span> определяет, каким образом система будет учитывать
состояние прав на родительский объект при определении прав на подчиненный объект.
Если флажок установлен, то права родительского объекта не учитываются. Если
флажок снят, то при определении права подчиненного объекта анализируется
соответствующее право родительского объекта. Если у родительского объекта право
отсутствует, у подчиненного объекта также отсутствует право, вне зависимости от
состояния права у подчиненного объекта.</p>

<p class="MsoNormalCxSpMiddle">Флажок <span class="Interface">Независимые права подчиненных объектов</span> не отменяет того
факта, что право на подчиненный объект требует наличия этого же права и на
родительский. То есть для реквизита или табличной части нужно право на объект,
для реквизита табличной части – на табличную часть и объект. Указанное
свойство имеет влияние в том случае, если у пользователю назначено несколько
ролей, права которых складываются «по ИЛИ». То есть, если в роли установлено
свойство <span class="Interface">Независимые права подчиненных объектов</span> и есть право
только на реквизит, а в другой роли есть право только на объект, то после
сложения прав ролей у пользователя будет право на реквизит</p>

<p class="MsoNormalCxSpMiddle">При
назначении прав доступа на реквизиты (табличные части) отчетов/обработок
следует помнить следующую особенность: если у роли снят флажок <span class="Interface">Независимые права
подчиненных объектов</span> и для реквизита (табличной части) установлено право
<span class="Term">Редактирование</span>, а для отчета/обработки право <span class="Term">Просмотр</span> не установлено, то считается, что и
для реквизита (табличной части) право <span class="Term">Редактирование</span> не установлено.</p>

<p class="MsoNormalCxSpMiddle">Если
пользователю назначено несколько ролей, то проверка прав родительского объекта
выполняется до того, как будет выполнено сочетание прав по ролям (для
определения результирующего права на объект), см. <a href="#_ref275269373">здесь</a>.</p>

<p class="MsoNormalCxSpLast">Действие
флажка <span class="Interface">Независимые права
подчиненных объектов</span> распространяется на следующие объекты:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
реквизиты (включая стандартные);</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
табличные части (включая стандартные);</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
реквизиты табличных частей (включая реквизиты
стандартных табличных частей);</p>

<p class="MsoListBulletCxSpLast">&#9679; 
команды.</p>

<p class="MsoNormalCxSpFirst">Чтобы
изменить право доступа, в левом списке следует выбрать объект конфигурации, а в
правом изменить состояние флажка в нужной строке вида действия. Если требуется изменить
доступ сразу ко всем объектам выбранной ветви, нужно указать в левой части эту
ветвь и изменить установку прав доступа.</p>

<p class="MsoNormalCxSpLast">Описание
каждой роли можно вывести в табличный или текстовый документ с помощью пункта <span class="Interface">Действия – Вывести
список</span>.</p>

<a id="TI000000190" class="bookmark" name="issogl3_5.5.4.7_просмотр_и_редактирование_всех_ролей"><h4>5.5.4.7. Просмотр и редактирование всех ролей</h4></a>

<p class="Regularbeforepicture">Если
в конфигурации используется несколько ролей, то для удобства просмотра и
редактирования прав рекомендуется использовать окно <span class="Interface">Все роли</span>. Для
его открытия в дереве объектов конфигурации окна <span class="Interface">Конфигурация</span> нужно
указать ветвь <span class="Interface">Роли</span> и в контекстном
меню выбрать команду <span class="Interface">Все роли</span>.</p>

<p class="Picture"><IMG src="_img/img00091.gif?_=1496848987" WIDTH="685" ALT HEIGHT="409"></p>

<p class="MsoCaption">Рис.
92. Окно редактирования «Все роли»</p>

<p class="MsoNormalCxSpFirst">В
окне расположены три табличных поля. В первом (слева) производится выбор
нужного объекта конфигурации. В первой колонке второго табличного поля выводится
список прав по выбранному объекту. Другие колонки предназначены для указания
использования каждого права для каждой существующей роли.</p>

<p class="MsoNormalCxSpMiddle">Если
для какой-нибудь роли требуется установить или снять все права, то достаточно в
первой строке табличного поля установить или снять флажок разрешения.</p>

<p class="MsoNormalCxSpMiddle">Если
для какого-нибудь права требуется установить или снять его разрешение во всех
ролях, то достаточно в первой колонке табличного поля установить или снять флажок
разрешения.</p>

<p class="MsoNormalCxSpMiddle">Поддерживается
возможность перестановки колонок, соответствующих ролям.</p>

<p class="MsoNormalCxSpLast">В
третьем табличном поле редактируются условия доступа к данным на уровне
отдельных полей и записей.</p>

<a name="_ref214787493"></a><a name="_ref73775184"></a><a name="_ref428962295"></a><a id="TI000000191" class="bookmark" name="issogl3_5.5.4.8_ограничение_доступа_к_данным"><h4>5.5.4.8. Ограничение доступа к данным</h4></a>

<a id="TI000000192" class="bookmark" name="issogl4_5.5.4.8.1_общие_замечания"><h5>5.5.4.8.1. Общие замечания</h5></a>

<p class="MsoNormal">Механизм
ограничений доступа к данным (также известный как RLS, Row Level Security) позволяет
управлять правами доступа не только на уровне объектов метаданных, но и на
уровне объектов базы данных «1С:Предприятия». Для ограничения доступа к данным
могут быть использованы следующие объекты «1С:Предприятия»:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
роли,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
параметры сеанса,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
функциональные опции,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
привилегированные общие модули,</p>

<p class="MsoListBulletCxSpLast">&#9679; 
ключевое слово <span class="Term">РАЗРЕШЕННЫЕ</span> в языке запросов.</p>

<p class="MsoNormalCxSpFirst">Совместное
использование перечисленных объектов позволяет обеспечить максимальную гибкость
при необходимости разграничения прав доступа к данным между пользователями,
выполняющими различные функции.</p>

<p class="MsoNormalCxSpLast">Ограничения
доступа к данным могут накладываться на следующие операции с данными (права
доступа): чтение (право <span class="Term">Чтение</span>), добавление (право <span class="Term">Добавление</span>), изменение (право <span class="Term">Изменение</span>) и удаление (право <span class="Term">Удаление</span>). Текущий пользователь будет иметь
возможность выполнить требуемую операцию в следующих случаях:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Для операций чтения и удаления объект,
находящийся в базе данных, должен соответствовать ограничению доступа к данным.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Для операции добавления ограничению доступа к
данным должен соответствовать объект, который планируется записать в базу
данных.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Для операции изменения ограничению доступа к
данным должен соответствовать объект как до изменения (чтобы объект был
прочитан), так и после изменения (чтобы объект был записан).</p>

<p class="MsoNormalCxSpFirst">При
наложении ограничений доступа к данным следует помнить, что для операций
изменения, добавления и удаления можно задать только одно условие, а для операции
чтения можно задать более одного ограничения доступа к данным. Это означает,
что для чтения разных полей объекта могут быть заданы разные условия, причем
при задании условия можно указать как имя конкретного поля, так и специальное
поле <span class="Interface">Прочие поля</span>. В
первом случае условие будет накладываться только в том случае, если в выборке
(которой выполняется чтение данных) будет присутствовать поле, для которого
задано ограничение, а во втором – ограничение будет накладываться для всех
полей объекта, кроме полей, для которых ограничения заданы явным образом.</p>

<p class="MsoNormalCxSpMiddle">При
задании ограничения на конкретное поле, это поле будет считано в том случае,
если ограничение выполняется, а при задании ограничения на <span class="Interface">Прочие поля</span>,
данные объекта будут прочитаны только в том случае, если ограничение
выполняется для всех полей объекта, попавших в запрос чтения данных.</p>

<p class="MsoNormalCxSpLast">Для
объектов базы данных следующих видов могут быть наложены различные ограничения
на разные виды изменений (добавление, модификацию, удаление):</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Планы обмена,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Справочники,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Документы,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Планы видов характеристик,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Планы счетов,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Планы видов расчета,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Бизнес-процессы,</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Задачи.</p>

<p class="MsoNormal">Для
следующих видов объектов базы данных возможно наложение ограничений на чтение
не только всего объекта целиком, но и отдельных его полей:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Планы обмена,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Справочники,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Документы,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Журналы документов,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Планы видов характеристик,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Планы счетов,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Планы видов расчета,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Регистры сведений,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Бизнес-процессы,</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Задачи.</p>

<p class="Note"><span class="Note">ВНИМАНИЕ!</span>
При обращении к полям объектов базы данных посредством свойств прикладных
объектов из встроенного языка «1С:Предприятия» выполняется чтение всего объекта
целиком, а не только значения используемого поля. Исключением является получение
представления, когда будут прочитаны только значения полей, участвующих в
формировании представления.</p>

<p class="MsoNormal">Ограничения
доступа содержатся в ролях, они могут быть указаны для большинства объектов
метаданных и записываются на специальном языке, являющимся подмножеством языка
запросов.</p>

<a id="TI000000193" class="bookmark" name="issogl4_5.5.4.8.2_язык_ограничения_доступа_к_данным"><h5>5.5.4.8.2. Язык ограничения доступа к данным</h5></a>

<p class="MsoNormal">Ограничения доступа к данным описываются на специальном
языке, являющимся подмножеством языка запросов (подробное описание языка
запросов см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 8. работа с запросами.htm?_=1496848987#_ref331069975">здесь</a>). Язык ограничения доступа к данным имеет следующие изменения
относительно языка запросов:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
В запросе ограничения доступа к данным всегда
присутствует одна таблица в качестве источника данных – это таблица
объекта, на который накладывается ограничение (основной объект ограничения).</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Сокращено описание запроса. Язык ограничения
доступа к данным использует только секции <span class="Term">ИЗ</span> и <span class="Term">ГДЕ</span> языка запросов. Так, описание языка
запросов выглядит следующим образом:</p>

<p class="Lang-subheader">&lt;Описание запроса&gt;</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">ВЫБРАТЬ</span> <span class="operator">[</span>РАЗРЕШЕННЫЕ<span class="operator">]</span> <span class="operator">[</span>РАЗЛИЧНЫЕ<span class="operator">]</span> <span class="operator">[</span>ПЕРВЫЕ <span class="operator">&lt;</span>Количество<span class="operator">&gt;</span><span class="operator">]</span>
    <span class="operator">&lt;</span>Список полей выборки<span class="operator">&gt;</span>
<span class="operator">[</span><span class="keyword">ИЗ</span> <span class="operator">&lt;</span>Список источников<span class="operator">&gt;</span><span class="operator">]</span>
<span class="operator">[</span>ГДЕ <span class="operator">&lt;</span>Условие отбора<span class="operator">&gt;</span><span class="operator">]</span>
<span class="operator">[</span>СГРУППИРОВАТЬ <span class="keyword">ПО</span> <span class="operator">&lt;</span>Поля группировки<span class="operator">&gt;</span><span class="operator">]</span>
<span class="operator">[</span>ИМЕЮЩИЕ <span class="operator">&lt;</span>Условие отбора<span class="operator">&gt;</span><span class="operator">]</span>
<span class="operator">[</span><span class="keyword">ДЛЯ</span> ИЗМЕНЕНИЯ <span class="operator">[</span><span class="operator">&lt;</span>Список таблиц верхнего уровня<span class="operator">&gt;</span><span class="operator">]</span><span class="operator">]</span></pre>

<p class="Indentlist">В то
время как описание языка запросов ограничения доступа к данным выглядит
следующим образом:</p>

<p class="Lang-subheader">&lt;Описание
запроса&gt;</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="operator">[</span>Псевдоним таблицы основного объекта ограничения<span class="operator">]</span>
<span class="operator">[</span><span class="keyword">ИЗ</span> <span class="operator">&lt;</span>Список источников<span class="operator">&gt;</span><span class="operator">]</span>
<span class="operator">[</span>ГДЕ <span class="operator">&lt;</span>Условие отбора<span class="operator">&gt;</span><span class="operator">]</span></pre>

<p class="Indentlist">Описание
списка источников см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 8. работа с запросами.htm?_=1496848987#_ref331073133">здесь</a>. Описание условий отбора см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 8. работа с запросами.htm?_=1496848987#_ref15212776">здесь</a>. При этом следует помнить, что во вложенных запросах,
используемых в языке ограничения доступа к данным, ограничен набор допустимых
возможностей (см. <a href="#_ref331072361">здесь</a>);</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
В качестве элементов условий можно указывать
параметры сеанса (см. <a href="#_ref331072386">здесь</a>) и функциональные опции (см. <a href="#_ref331072392">здесь</a>);</p>

<p class="MsoListBulletCxSpLast">&#9679; 
В любом месте запроса ограничения доступа к
данным допустимо использование шаблонов, упрощающих написание ограничений
(см. <a href="#_ref331070806">здесь</a>).</p>

<p class="MsoNormal">Главной
частью ограничения является условие, которое вычисляется для каждой записи
таблицы базы данных, на которую накладывается ограничение доступа к данным.
Запись считается доступной в том случае, если в результате работы условия для
одной записи таблицы основного объекта ограничения получена не пустая таблица (т.е.
таблица, в которой 1 или более записей). Если в результате работы условия
получается пустая таблица – запись, для которой условие исполнилось таким
образом, считается недоступной. Причем изменение записи таблицы основного
объекта ограничения считается допустимым, если запись не противоречит
ограничению, указанному для права, как до выполнения операции изменения, так и
после выполнения этой операции.</p>

<a id="TI000000194" class="bookmark" name="issogl5_поля_таблиц"><h6>Поля таблиц</h6></a>

<p class="MsoNormal">В
ограничениях доступа к данным можно использовать:</p>

<p class="MsoListBullet">&#9679; 
<span class="Bold">Поля таблиц объекта</span>, для
которого описывается ограничение доступа к данным.</p>

<p class="Indentlist">Например,
если ограничение накладывается на чтение элементов справочника <span class="Term">Контрагенты</span>, то в ограничении могут использоваться
поля справочника <span class="Term">Контрагенты</span> и его табличных частей. В
частности, наиболее простые ограничения на чтение элементов справочника <span class="Term">Контрагенты</span> могут выглядеть так:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">ГДЕ Наименование <span class="operator">=</span> <span class="string">&quot;Кирпичный завод&quot;</span></pre>

<p class="Indentlist">Или
так:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">ГДЕ Продукция<span class="operator">.</span>Наименование <span class="operator">=</span> <span class="string">&quot;Кирпич красный&quot;</span></pre>

<p class="Indentlist">Где <span class="Term">Продукция</span> – это табличная часть
справочника <span class="Term">Контрагенты</span>.</p>

<p class="MsoListBullet">&#9679; 
<span class="Bold">Поля таблиц объектов, доступных
по ссылкам</span> в основном объекте ограничения.</p>

<p class="Indentlist">Например,
если реквизит <span class="Term">ОсновнойМенеджер</span> справочника <span class="Term">Контрагенты</span> имеет тип ссылки на справочник <span class="Term">Пользователи</span>, то ограничение доступа может
иметь, например, следующий вид:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">ГДЕ ОсновнойМенеджер<span class="operator">.</span>Код <span class="operator">=</span> <span class="string">&quot;Иванов&quot;</span></pre>

<p class="Indentlist">Или:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">ГДЕ ОсновнойМенеджер<span class="operator">.</span>ФизическоеЛицо<span class="operator">.</span>Наименование <span class="operator">=</span> <span class="string">&quot;Петровский&quot;</span> </pre>

<p class="MsoListBullet">&#9679; 
<span class="Bold">Поля таблиц объектов, связанных
с основным объектом</span> ограничения некоторыми условиями и выражения над
ними.</p>

<p class="Indentlist">Например,
на чтение элементов справочника <span class="Term">Контрагенты</span> может быть наложено следующее
ограничение:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">Контрагенты
<span class="keyword">ИЗ</span>
Справочник<span class="operator">.</span>Контрагенты <span class="keyword">КАК</span> Контрагенты
ЛЕВОЕ СОЕДИНЕНИЕ Справочник<span class="operator">.</span>Пользователи <span class="keyword">КАК</span> Пользователи
<span class="keyword">ПО</span> Контрагенты<span class="operator">.</span>ОсновнойМенеджер<span class="operator">.</span>Наименование <span class="operator">=</span> Пользователи<span class="operator">.</span>Наименование
ГДЕ Пользователи<span class="operator">.</span>ФизическоеЛицо<span class="operator">.</span>Наименование <span class="operator">=</span> <span class="string">&quot;Петровский&quot;</span></pre>

<p class="Indentlist">В этом
ограничении используются поля элементов справочника <span class="Term">Пользователи</span>, связанных с данным элементом
справочника <span class="Term">Контрагенты</span> по значению полей <span class="Term">Наименование</span>.</p>

<a name="_ref331072361"></a><a id="TI000000195" class="bookmark" name="issogl5_вложенные_запросы"><h6>Вложенные запросы</h6></a>

<p class="MsoNormal">Вложенные
запросы используются для формирования наборов записей, которые могут
использоваться:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
для связывания с таблицей основного объекта
ограничения;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
для использования в качестве операнда операций
сравнения <span class="Term">В</span> или <span class="Term">НЕ В</span>.</p>

<p class="MsoNormal">Во
вложенных запросах могут использоваться любые средства языка запросов, кроме:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
оператора <span class="Term">В ИЕРАРХИИ</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
предложения <span class="Term">ИТОГИ</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
результаты вложенных запросов не должны
содержать табличные части;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
некоторых виртуальных таблиц, в частности <span class="Term">ОстаткиИОбороты</span>.</p>

<p class="MsoNormal">В
следующем примере ограничения на чтение из справочника <span class="Term">Контрагенты</span>, вложенный запрос используется в
качестве набора записей для связывания с основным объектом ограничения:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">Контрагенты
<span class="keyword">ИЗ</span>
Справочник<span class="operator">.</span>Контрагенты <span class="keyword">КАК</span> Контрагенты
ЛЕВОЕ СОЕДИНЕНИЕ
        <span class="operator">(</span><span class="keyword">ВЫБРАТЬ</span>
            Пользователи<span class="operator">.</span>Наименование<span class="operator">,</span> Пользователи<span class="operator">.</span>ФизическоеЛицо
            <span class="keyword">ИЗ</span>
            Справочник<span class="operator">.</span>Пользователи <span class="keyword">КАК</span> Пользователи
            ГДЕ
            Пользователи<span class="operator">.</span>Код <span class="operator">&gt;</span> <span class="string">&quot;Петечкин&quot;</span><span class="operator">)</span> <span class="keyword">КАК</span> Пользователи
<span class="keyword">ПО</span> Контрагенты<span class="operator">.</span>ОсновнойМенеджер<span class="operator">.</span>Наименование <span class="operator">=</span> Пользователи<span class="operator">.</span>Наименование
ГДЕ Пользователи<span class="operator">.</span>ФизическоеЛицо<span class="operator">.</span>Наименование <span class="operator">=</span> <span class="string">&quot;Петровский&quot;</span></pre>

<p class="MsoNormal">В
следующем примере приведено ограничение на чтение из справочника <span class="Term">ПаспортныеДанныеФизЛиц</span>, в котором вложенный
запрос используется в качестве операнда операции сравнения <span class="Term">В</span>:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">ПаспортныеДанныеФизЛиц
ГДЕ
ПаспортныеДанныеФизЛиц<span class="operator">.</span>ФизЛицо В
        <span class="operator">(</span><span class="keyword">ВЫБРАТЬ</span> РАЗЛИЧНЫЕ
            Работники<span class="operator">.</span>ФизЛицо <span class="keyword">КАК</span> ФизЛицо
            <span class="keyword">ИЗ</span>
            РегистрСведений<span class="operator">.</span>Работники <span class="keyword">КАК</span> Работники<span class="operator">)</span></pre>

<p class="MsoNormal">Если
во вложенном запросе необходимо получить данные из табличной части, то в
разделе <span class="Term">ИЗ</span> вложенного запроса необходимо обращаться
непосредственно к табличной части. Например, вместо:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">ВЫБРАТЬ</span>
    Ссылка <span class="keyword">КАК</span> Ссылка<span class="operator">,</span>
    Продукция<span class="operator">.</span>Наименование <span class="keyword">КАК</span> НаименованиеПродукции
<span class="keyword">ИЗ</span> Справочник<span class="operator">.</span>Контрагенты</pre>

<p class="MsoNormal">в
качестве запроса, вложенного в ограничение, следует использовать:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">ВЫБРАТЬ</span>
    Ссылка <span class="keyword">КАК</span> Ссылка<span class="operator">,</span>
    Наименование <span class="keyword">КАК</span> НаименованиеПродукции
<span class="keyword">ИЗ</span> Справочник<span class="operator">.</span>Контрагенты<span class="operator">.</span>Продукция</pre>

<a name="_ref331072386"></a><a id="TI000000196" class="bookmark" name="issogl5_параметры_сеанса"><h6>Параметры сеанса</h6></a>

<p class="MsoNormal">В составе запросов ограничения доступа к данным могут
входить параметры сеанса. Например, на чтение элементов справочника <span class="Term">ГруппыПисемЭлектроннойПочты</span> может быть задано
следующее ограничение доступа:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">ГДЕ Владелец<span class="operator">.</span>ДоступКУчетнойЗаписи<span class="operator">.</span>Пользователь <span class="operator">=</span> &ТекущийПользователь
        <span class="keyword">И</span> Владелец<span class="operator">.</span>ДоступКУчетнойЗаписи<span class="operator">.</span>Администрирование <span class="operator">=</span> <span class="keyword">ИСТИНА</span></pre>

<p class="MsoNormal">Где <span class="Term">ТекущийПользователь</span> – это параметр сеанса
(см. <a href="#_ref244323673">здесь</a>).</p>

<a name="_ref331072392"></a><a id="TI000000197" class="bookmark" name="issogl5_функциональные_опции"><h6>Функциональные опции</h6></a>

<p class="MsoNormal">В
составе запросов ограничения доступа к данным могут входить функциональные
опции. Могут использоваться только не зависящие от параметров функциональные
опции. Например, если у справочника <span class="Term">Номенклатура</span> есть реквизит <span class="Term">ОсновнойСклад</span>, то ограничение на чтение
данного реквизита может выглядеть следующим образом:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">ГДЕ &УчетПоСкладам <span class="operator">=</span> <span class="keyword">ИСТИНА</span></pre>

<p class="MsoNormal">Где <span class="Term">УчетПоСкладам</span> – это функциональная опция
(см. <a href="#_ref244323845">здесь</a>).</p>

<a id="TI000000198" class="bookmark" name="issogl5_особенности_использования"><h6>Особенности использования</h6></a>

<p class="MsoNormal">В
ограничениях на объекты базы данных следующих типов могут быть использованы не
все поля основного объекта данных ограничения:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
в <span class="Bold">регистрах накопления</span>
ограничения доступа могут содержать только измерения основного объекта
ограничения;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
в <span class="Bold">регистрах бухгалтерии</span>
в ограничениях можно использовать только балансовые измерения основного объекта
ограничения.</p>

<p class="Note"><span class="Note">Примечание.</span>
Если в условиях ограничения доступа к данным оборотного регистра накопления
используются измерения, не входящие в итоги, то при обращении к виртуальной
таблице оборотов не используются хранимые итоги и запрос выполняется полностью
по таблице движений.</p>

<a id="TI000000199" class="bookmark" name="issogl4_5.5.4.8.3_действия_ограничения_доступа"><h5>5.5.4.8.3. Действия ограничения доступа</h5></a>

<p class="MsoNormal">Ограничения
доступа проверяются при любом выполнении соответствующих операций над объектами
базы данных (из диалогов, из встроенного языка, посредством запросов) и могут
действовать одним из двух способов:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Bold">Все</span>. Способ «все»
подразумевает, что некоторая операция над данными (из диалогов, из встроенного
языка или посредством запросов) должна быть выполнена над всеми
подразумеваемыми данной операцией объектами базы данных. Если при выполнении
такой операции должны быть прочитаны или изменены объекты базы данных, для
которых не выполняются соответствующие ограничения доступа, то операция
завершается аварийно из-за нарушения прав доступа.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Bold">Разрешенные</span>. Способ «разрешенные»
подразумевает, что при выполнении операции над данными должны быть прочитаны
только те объекты базы данных, которые удовлетворяют соответствующим
ограничениям доступа. Объекты базы данных, не удовлетворяющие ограничениям
доступа, при выполнении такой операции считаются отсутствующими и на результат
операции не влияют.</p>

<p class="MsoNormalCxSpFirst">Ограничения
доступа к данным накладываются на объекты базы данных в момент обращения «1С:Предприятия»
к базе данных. В клиент-серверном варианте «1С:Предприятия» наложение
ограничений выполняется на сервере «1С:Предприятия».</p>

<p class="MsoNormalCxSpMiddle">Способ
действия ограничений, выбираемый для выполнения каждой операции над данными,
определяется назначением этой операции и степенью ответственности ее
результатов. В частности, способ «разрешенные» используется при отображении динамических
списков и некоторых других интерактивных действиях. Способ «все» используется
при выполнении любых операций с прикладными объектами из встроенного языка «1С:Предприятия»,
в том числе при любых изменениях объектов базы данных. Поэтому, например, могут
возникнуть затруднения при построении отбора для метода <span class="Term">Выбрать()</span> менеджеров справочников, документов
и других с последующим обходом результата в том случае, если на соответствующий
объект установлено достаточно сложное ограничение, поскольку не всякое условие
в ограничении прав доступа может быть адекватно представлено в виде отбора для
метода <span class="Term">Выбрать()</span>.</p>

<p class="MsoNormalCxSpMiddle">В
запросах способом действия ограничений доступа к данным можно управлять. Для
этого в языке запросов предусмотрено ключевое слово <span class="Term">РАЗРЕШЕННЫЕ</span>. Если в запросе не указано <span class="Term">РАЗРЕШЕННЫЕ</span>, то ограничения действуют способом
«<span class="Interface">все</span>». Если слово
<span class="Term">РАЗРЕШЕННЫЕ</span> указано, то выбирается способ «<span class="Interface">разрешенные</span>».</p>

<p class="MsoNormalCxSpLast">Важно,
что если в запросе не указано ключевое слово <span class="Term">РАЗРЕШЕННЫЕ</span>, то все отборы, заданные в этом
запросе, не должны противоречить ни одному из ограничений на чтение объектов
базы данных, используемых в запросе. При этом если в запросе используются
виртуальные таблицы, то соответствующие отборы должны быть наложены и на сами
виртуальные таблицы.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">ВЫБРАТЬ</span>
    КонтактнаяИнформацияСрезПервых<span class="operator">.</span>Представление
<span class="keyword">ИЗ</span> РегистрСведений<span class="operator">.</span>КонтактнаяИнформация<span class="operator">.</span>СрезПоследних<span class="operator">(</span><span class="operator">,</span> Тип <span class="operator">=</span> &Тип<span class="operator">)</span>
        <span class="keyword">КАК</span> КонтактнаяИнформацияСрезПервых
ГДЕ
    КонтактнаяИнформацияСрезПервых<span class="operator">.</span>Тип <span class="operator">=</span> &Тип</pre>

<p class="MsoNormal">При
использовании объектной техники не поддерживается получение доступа к данным в
режиме <span class="Term">РАЗРЕШЕННЫЕ</span>. Предполагается, что объектная
техника используется для наиболее ответственных операций над данными, в том
числе для их изменения. Для получения при помощи объектной техники всех
данных, независимо от установленных ограничений, можно выполнять необходимые
действия в привилегированном модуле или от имени пользователя с полными
правами. Средств получения только разрешенных данных в объектной технике не
предусмотрено.</p>

<a id="TI000000200" class="bookmark" name="issogl4_5.5.4.8.4_механизм_наложения_ограничений"><h5>5.5.4.8.4. Механизм наложения ограничений</h5></a>

<p class="MsoNormal">Любая
операция над данными, хранимыми в базе данных, в «1С:Предприятии» в конечном
счете приводит к обращению к базе данных с некоторым запросом на чтение или
изменение данных. В процессе исполнения запросов к базе данных внутренние механизмы
«1С:Предприятия» выполняют наложение ограничений доступа. При этом:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Формируется список прав (чтение, добавление,
изменение, удаление), список таблиц базы данных и список полей, используемых
этим запросом.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Из всех ролей текущего пользователя выбираются
ограничения доступа к данным для всех прав, таблиц и полей, задействованных в
запросе. При этом если какая-нибудь роль не содержит ограничений доступа к
данным какой-нибудь таблицы или поля, то это значит, что в данной таблице
доступны значения требуемых полей из любой записи. Иначе говоря, отсутствие
ограничения доступа к данным означает наличие ограничения <span class="Term">ГДЕ Истина</span>.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Получаются текущие значения всех параметров
сеанса и функциональных опций, участвующих в выбранных ограничениях.</p>

<p class="IndentlistCxSpFirst">Для получения значения параметра сеанса от
текущего пользователя не требуется наличие права на получение этого значения.
Однако если значение некоторого параметра сеанса не было установлено, то
произойдет ошибка и запрос к базе данных выполнен не будет.</p>

<p class="IndentlistCxSpLast">На получение функциональных опций оказывает
влияние свойство функциональной опции <span class="Interface">Привилегированный режим при получении</span>
(см. <a href="#_ref331089128">здесь</a>). Если это свойство сброшено, то текущий пользователь
должен обладать правами на чтение объекта, в котором хранится функциональная опция.</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Ограничения, полученные из одной роли,
объединяются операцией <span class="Term">И</span>.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Ограничения, полученные из разных ролей,
объединяются операцией <span class="Term">ИЛИ</span>.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Построенные условия добавляются к SQL-запросам,
с которыми «1С:Предприятие» обращается к СУБД. При обращении к данным со
стороны условий ограничения доступа проверка прав не выполняется (ни к объектам
метаданных, ни к объектам базы данных). Причем механизм добавления условий
зависит от выбранного способа действия ограничений «все» или «разрешенные».</p>

<a id="TI000000201" class="bookmark" name="issogl5_способ_все"><h6>Способ «все»</h6></a>

<p class="Regularbeforepicture">При
наложении ограничений способом «все» к SQL-запросам добавляются условия и поля
так, чтобы «1С:Предприятие» могло получить информацию о том, были ли в процессе
исполнения запроса к базе данных использованы данные, запрещенные для данного пользователя
или нет. Если запрещенные данные были использованы, то инициируется аварийное
завершение запроса. Наложение ограничений доступа способом «все» схематически
представлено на <a href="#_ref229736095">рис.
93</a>:</p>

<p class="Picture"><IMG src="_img/img00092.gif?_=1496848987" WIDTH="541" ALT HEIGHT="303"></p>

<p class="MsoCaption"><a name="_ref229736095">Рис. </a>93. Способ «все»</p>

<a id="TI000000202" class="bookmark" name="issogl5_способ_разрешенные"><h6>Способ «разрешенные»</h6></a>

<p class="Regularbeforepicture">При
наложении ограничений способом «<span class="Interface">разрешенные</span>» к
SQL-запросам добавляются такие условия, чтобы запрещенные текущему пользователю
записи не оказывали влияния на результат запроса. Иначе говоря, при наложении
ограничений в режиме «<span class="Interface">разрешенные</span>»
запрещенные данному пользователю записи считаются отсутствующими, что
схематически представлено на <a href="#_ref229736150">рис.
94</a>:</p>

<p class="Picture"><IMG src="_img/img00093.gif?_=1496848987" WIDTH="541" ALT HEIGHT="303"></p>

<p class="MsoCaption"><a name="_ref229736150">Рис. </a>94. Способ
«разрешенные»</p>

<a id="TI000000203" class="bookmark" name="issogl4_5.5.4.8.5_другие_объекты_связанные_с_ограничениями_доступа_к_данным"><h5>5.5.4.8.5. Другие объекты, связанные с ограничениями доступа к данным</h5></a>

<p class="MsoNormal">При
разработке конфигураций с использованием ограничений доступа к данным могут
оказаться полезными такие объекты метаданных, как параметры сеанса,
функциональные опции и общие модули с флажком <span class="Interface">Привилегированный</span>.</p>

<p class="Lang">Параметры
сеанса</p>

<p class="MsoNormal">Параметры
сеанса могут использоваться в ограничениях доступа к данным аналогично тому,
как в запросе могут использоваться параметры запроса.</p>

<p class="Lang">Функциональные
опции</p>

<p class="MsoNormal">Не зависящие
от параметров функциональные опции могут использоваться в ограничениях доступа
к данным аналогично тому, как в запросе могут использоваться параметры запроса.</p>

<p class="Lang">Привилегированные
общие модули</p>

<p class="MsoNormal">Если
для общего модуля установлен флажок <span class="Interface">Привилегированный</span>,
то исполнение процедур и функций этого модуля приобретает важную специфику:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
В клиент-серверном варианте «1С:Предприятия»
привилегированным может быть только тот модуль, который исполняется на
сервере.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Исполнение процедур и функций привилегированного
модуля и всего, что из них вызвано, выполняется при выключенной системе
ограничения прав, как к объектам метаданных, так и к данным. Таким образом, из
привилегированного модуля может быть выполнена любая операция над любыми
объектами даже в том случае, если текущий пользователь не имеет соответствующих
прав.</p>

<p class="MsoNormal">Привилегированные
модули предназначены для начальной установки значений параметров сеанса,
используемых в ограничениях доступа к данным. Еще общие модули могут быть
использованы для некоторых целостных действий над данными со стороны
пользователя с ограниченными правами. Например, если в функции пользователя
входит ввод и проведение документов, но пользователь не должен иметь доступа к
данным, на которые влияет проведение документа, то выполнение операции
проведения может быть вынесено в привилегированный модуль. Это позволит
пользователю проводить документы без предоставления ему прав на другую
информацию (регистры, например).</p>

<p class="Lang">Привилегированный
режим</p>

<p class="MsoNormal">Имеется
возможность программной установки привилегированного режима при работе с
данными. Программная установка привилегированного режима может потребоваться в
случае массированных операций с данными информационной базы, и при этом нет
смысла проверять права доступа к данным. Описание привилегированного режима см. <a href="#_ref219022975">здесь</a>.</p>

<a id="TI000000204" class="bookmark" name="issogl4_5.5.4.8.6_использование_препроцессора"><h5>5.5.4.8.6. Использование препроцессора</h5></a>

<p class="MsoNormal">При
редактировании текста ограничения доступа к данным возможно использование
инструкций препроцессора. Доступны следующие инструкции:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="preprocessor">#ЕСЛИ &lt;Выражение&gt; #ТОГДА</span>
<span class="preprocessor">#ИНАЧЕЕСЛИ &lt;Выражение&gt; #ТОГДА</span>
<span class="preprocessor">#ИНАЧЕ</span>
<span class="preprocessor">#КОНЕЦЕСЛИ</span></pre>

<p class="MsoNormal"><span class="Term">&lt;Выражение&gt;</span> – произвольное
логическое выражение на встроенном языке, результат которого имеет тип <span class="Term">Булево</span>. Выражение
может содержать:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
операции сравнения <span class="Interface">&lt;</span>, <span class="Interface">&gt;</span>, <span class="Interface">&lt;=</span>, <span class="Interface">&gt;=</span> , <span class="Interface">=</span>, <span class="Interface">&lt;&gt;</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
логические операции <span class="Term">И</span>, <span class="Term">ИЛИ</span>, <span class="Term">НЕ</span>;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
параметры сеанса – используется синтаксис <span class="Term">&amp;Параметр</span>, где <span class="Term">Параметр</span> – имя параметра сеанса.</p>

<p class="MsoNormal">Если
результатом выражения инструкции <span class="Term">#ЕСЛИ</span> или <span class="Term">#ИНАЧЕЕСЛИ</span>
является значение <span class="Term">Истина</span>, то в
результирующий текст инструкции ограничения доступа помещается текст,
расположенный после ключевого слова <span class="Term">#ТОГДА</span>. Если же
результатом выражения является значение <span class="Term">Ложь</span>, то текст,
расположенный после ключевого слова <span class="Term">#ТОГДА</span>, не
помещается в текст инструкции ограничения доступа. Текст, расположенный после
инструкции <span class="Term">#ИНАЧЕ</span>, будет
помещен в результирующий текст ограничения доступа, если ни одно из ранних
условий не было выполнено.</p>

<p class="Note"><span class="Note">Примечание.</span>
Если текст ограничения доступа к данным содержит инструкции препроцессора, то
такое ограничение не проходит проверку синтаксиса при редактировании и не может
быть изменено при помощи конструктора.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="preprocessor">#ЕСЛИ &amp;ТекущийПользователь &lt;&gt; &quot;Климова&quot; #ТОГДА</span>
<span class="operator">&lt;</span>текст ограничения доступа<span class="operator">&gt;</span>
<span class="preprocessor">#КОНЕЦЕСЛИ</span></pre>

<p class="MsoNormalCxSpFirst">Здесь
<span class="Term">ТекущийПользователь</span> –
параметр сеанса типа <span class="Term">СправочникСсылка.Пользователи</span>.</p>

<p class="MsoNormalCxSpLast">Такая
конструкция означает, что условие для установки ограничения доступа будет
проверяться для всех пользователей из справочника, кроме пользователя <span class="Interface">Климовой</span>.</p>

<a name="_ref331070806"></a><a id="TI000000205" class="bookmark" name="issogl4_5.5.4.8.7_шаблоны_текста_ограничения_доступа"><h5>5.5.4.8.7. Шаблоны текста ограничения доступа</h5></a>

<p class="MsoNormalCxSpFirst">Роль
может содержать список шаблонов ограничения доступа, которые описываются на
закладке <span class="Interface">Шаблоны ограничений</span>
формы роли. Также шаблоны ограничения доступа можно редактировать в редакторе
группового редактирования ограничений доступа и шаблонов (см. <a href="#_ref289179486">здесь</a>).</p>

<p class="MsoNormalCxSpMiddle">Каждый
шаблон ограничения доступа имеет имя и текст. Имя шаблона подчиняется обычным
правилам для имен, принятых в системе «1С:Предприятие».</p>

<p class="MsoNormalCxSpMiddle">Текст
шаблона содержит часть текста на языке ограничения доступа к данным и может
содержать параметры, которые выделяются при помощи символа &quot;<span class="Interface">#</span>&quot;.</p>

<p class="MsoNormalCxSpLast">После
символа &quot;<span class="Interface">#</span>&quot; могут
следовать:</p>

<p class="MsoListBullet">&#9679; 
Одно из ключевых слов:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
<span class="Term">Параметр</span>, после которого в скобках указывается
номер параметра в шаблоне;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
<span class="Term">ТекущаяТаблица</span> – обозначает вставку в
текст полного имени таблицы, для которой строится ограничение;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
<span class="Term">ИмяТекущейТаблицы</span> – обозначает вставку в
текст полного имени таблицы (как строковое значение, в кавычках), к которой
применяется инструкция, на текущем варианте встроенного языка;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
<span class="Term">ИмяТекущегоПраваДоступа</span> – содержит имя
права, для которого выполняется текущее ограничение: <span class="Term">ЧТЕНИЕ</span>/<span class="Term">READ</span>, <span class="Term">ДОБАВЛЕНИЕ</span>/<span class="Term">INSERT</span>, <span class="Term">ИЗМЕНЕНИЕ</span>/<span class="Term">UPDATE</span>, <span class="Term">УДАЛЕНИЕ</span>/<span class="Term">DELETE</span>;</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
имя параметра шаблона – означает вставку в
текст ограничения соответствующего параметра шаблона;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
символ &quot;<span class="Interface">#</span>&quot; –
обозначает вставку в текст одного символа &quot;<span class="Interface">#</span>&quot;.</p>

<p class="MsoNormal">В
выражении ограничения доступа могут содержаться:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Шаблон ограничения доступа, который указывается
в формате <span class="Term">#ИмяШаблона(&quot;Значение параметра шаблона 1&quot;, &quot;Значение
параметра шаблона 2&quot;, …)</span>. Каждый параметр шаблона
заключается в двойные кавычки. При необходимости указания в тексте параметра
символа двойной кавычки следует использовать две двойные кавычки.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Функция <span class="Term">СтрСодержит(ГдеИщем, ЧтоИщем)</span>. Функция предназначена
для поиска вхождения строки <span class="Term">ЧтоИщем</span> в строке <span class="Term">ГдеИщем</span>. Возвращает <span class="Term">Истина</span> в случае, если вхождение обнаружено и <span class="Term">Ложь</span> – в противном случае.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Оператор <span class="Term">+</span> для конкатенации строк.</p>

<p class="MsoNormalCxSpFirst">Для
удобства редактирования текста шаблона на закладке <span class="Interface">Шаблоны ограничений</span>
в форме роли нужно нажать кнопку <span class="Interface">Установить текст шаблона</span>.
В открывшемся диалоге ввести текст шаблона и нажать кнопку <span class="Interface">ОК</span>.</p>

<p class="MsoNormalCxSpMiddle">Система
«1С:Предприятие» выполняет проверку синтаксиса текстов шаблонов, проверку
синтаксиса использования шаблонов и макроподстановку текстов шаблонов ограничения
доступа роли в текст запроса.</p>

<p class="MsoNormalCxSpLast">Макроподстановка
шаблона заключается:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
в замене вхождений параметров в тексте шаблона
на значения параметров из выражения использования шаблона в тексте ограничения;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
в замене выражения использования шаблона в
тексте запроса на получившийся текст шаблона.</p>

<p class="MsoNormal">При
вызове конструктора запроса для условия, содержащего шаблоны ограничения
доступа, выдается предупреждение о замене всех шаблонов.</p>

<p class="Regularbeforetable">Далее
приведены примеры шаблонов ограничений:</p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0">
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpFirst">Имя шаблона</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Шаблон</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Тело шаблона</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Итого = #Параметр(1)</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Использование</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Где #Шаблон(&quot;10&quot;)</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Результат</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Где Итого = 10</span></p>
  </td>
  
 </tr>
</table>

<p class="MsoNormalCxSpMiddle"> </p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0">
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Имя шаблона</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Шаблон1(ВидДокумента)</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Тело шаблона</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">ВидДокумента = #ВидДокумента</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Использование</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Где #Шаблон1(&quot;&quot;Накладная&quot;&quot;)</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Результат</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Где ВидДокумента = &quot;Накладная&quot;</span></p>
  </td>
  
 </tr>
</table>

<p class="MsoNormalCxSpMiddle"> </p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0">
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Имя шаблона</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Шаблон2</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Тело шаблона</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">ВидДокумента = #Параметр(1) ## #Параметр(2)</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Использование</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Где #Шаблон2(&quot;&quot;Накладная&quot;&quot;, &quot;1&quot;&quot;)</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Результат</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Где ВидДокумента = &quot;Накладная # 1&quot; </span></p>
  </td>
  
 </tr>
</table>

<p class="MsoNormalCxSpMiddle"> </p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0">
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Имя шаблона</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Шаблон3</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Тело шаблона</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">ВидДокумента = #Параметр(3)</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Использование</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Где #Шаблон3(&quot;&quot;,&quot;&quot;,&quot;&quot;Накладная&quot;&quot;)</span></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Результат</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><span class="Term">Где ВидДокумента = &quot;Накладная&quot;</span></p>
  </td>
  
 </tr>
</table>

<a id="TI000000206" class="bookmark" name="issogl4_5.5.4.8.8_общие_рекомендации_по_ограничению_прав"><h5>5.5.4.8.8. Общие рекомендации по ограничению прав</h5></a>

<p class="MsoNormal">Чтобы
гибко управлять доступом пользователей к данным в соответствии с функциями
при установке ограничений доступа к данным, рекомендуется придерживаться
следующих принципов:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Нужно выбрать совокупность информации
(может быть зависимой от текущего пользователя), для которой
целесообразна предварительная подготовка. Выбранная информация должна, с одной
стороны, максимально упростить ограничения доступа к данным, а с другой
стороны, не должна иметь слишком большой объем. Распределить ее по параметрам
сеанса.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Установить значения параметров сеанса в
обработчике <span class="Term">УстановкаПараметровСеанса()</span> модуля сеанса.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Задать ограничения доступа к тем данным, для
которых это оправданно (данные являются секретными или наиболее важными для сохранения
целостности системы). Необходимо иметь в виду, что установка ограничения
доступа может привести к замедлению любого обращения к этим данным. Излишняя
сложность ограничений также может привести к замедлению.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
При необходимости обеспечить выполнение
некоторого ограниченного количества операций над данными со стороны
пользователя, которому полный доступ к этим данным давать нецелесообразно, вынести
эти действия в привилегированные модули или явно включать и выключать
привилегированный режим в соответствующих местах программного кода
(см. <a href="#_ref219022975">здесь</a>).</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Доступ к данным при различных проверках,
выполняемых системой при записи объектов, выполняется в привилегированном
режиме (см. <a href="#_ref219022975">здесь</a>). Это позволяет не отключать ограничения в правах на
уровне записей для соответствующих полей, если работа конфигурации с этими
данными планируется <span class="Bold">только в управляемом режиме</span>:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
для справочников при проверке родителя, владельца
и уникальности кода;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
для документов, бизнес-процессов и задач при
проверке уникальности номера;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
для планов обмена отключена при проверке
уникальности кода;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
для планов счетов и планов видов характеристик
при проверке родителя и уникальности кода.</p>

<p class="MsoNormal">При
создании запроса ограничения к данным следует помнить о некоторых ограничениях
и особенностях:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Если для объектной таблицы заданы ограничения
доступа к данным и в запросе к данным используется объединение с такой
таблицей, то в условии соединения (секция запроса <span class="Term">ПО</span>) не допускается использование табличной
части объекта с заданным ограничением доступа.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Если в запросе указана таблица, у которой в
запросе не используется ни одного поля, то на эту таблицу накладываются все
ограничения доступа к данным. Например, запрос <span class="Term">ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ Справочник.Контрагенты</span>
будет исполнен с учетом всех ограничений доступа, заданными для справочника <span class="Term">Тест</span>. Ограничения накладываются «по ИЛИ». Это
значит, что будут доступны все записи, доступные хотя бы по одному условию.
Если для каких-то полей не задано условий, то запрос будет выполнен для всех
записей таблицы.</p>

<p class="IndentlistCxSpFirst">Если
в запросе используется таблица верхнего уровня, то ограничения, заданные для
колонок вложенных таблиц, не накладываются.</p>

<p class="IndentlistCxSpLast">Если
в запросе используется вложенная таблица, то накладываются ограничения как для
вложенной таблицы, так и для таблицы верхнего уровня. Например, запрос <span class="Term">ВЫБРАТЬ КОЛИЧЕСТВО(*) ИЗ Справочник.Контрагенты.Договора</span>
будет исполнен с учетом всех ограничений для справочника <span class="Term">Контрагенты</span>, а также с учетом ограничений,
относящихся к табличной части <span class="Term">Договора</span>.</p>

<p class="MsoListBullet">&#9679; 
Если доступ к полям, необходимым для получения
представления ссылочного объекта метаданных, запрещен с помощью ограничений
доступа к данным или доступ к объекту запрещен на уровне прав доступа, то получение
представления такого объекта не влияет на ход текущей транзакции.</p>

<a id="TI000000207" class="bookmark" name="issogl4_5.5.4.8.9_конструктор_ограничения_доступа_к_данным"><h5>5.5.4.8.9. Конструктор ограничения доступа к данным</h5></a>

<p class="MsoNormal">Для
вызова конструктора в табличном поле <span class="Interface">Ограничения доступа к
данным</span> в колонке <span class="Interface">Ограничение доступа</span>
нужно перейти в режим редактирования и нажать кнопку выбора, а в открывшейся
форме нажать кнопку <span class="Interface">Конструктор запроса…</span>.</p>

<p class="Regularbeforepicture">На
экран выводится форма конструктора:</p>

<p class="Picture"><IMG src="_img/img00094.gif?_=1496848987" WIDTH="638" ALT HEIGHT="394"></p>

<p class="MsoCaption">Рис.
95. Закладка «Таблицы и поля» конструктора ограничений</p>

<p class="MsoNormal">С
его помощью производится формирование условий для установки ограничения доступа
к данным.</p>

<p class="Regularbeforepicture">На
закладке <span class="Interface">Таблицы и поля</span> следует
выбрать нужные объекты в списке <span class="Interface">База данных</span> и перенести
их в список <span class="Interface">Таблицы</span>. Если
указано несколько таблиц, то в форме конструктора добавляется закладка <span class="Interface">Связи</span>.</p>

<p class="Picture"><IMG src="_img/img00095.gif?_=1496848987" WIDTH="638" ALT HEIGHT="394"></p>

<p class="MsoCaption">Рис.
96. Закладка «Связи» конструктора ограничений</p>

<p class="MsoNormalCxSpFirst">На
закладке <span class="Interface">Связи</span>
формируются условия, которые накладываются на связи между полями таблиц. Для
ввода нового условия нужно нажать кнопку <span class="Interface">Добавить</span> и в
колонке <span class="Interface">Таблица1</span> выбрать
одну из таблиц. В колонке <span class="Interface">Таблица2</span> выбрать
таблицу, поля которой связаны с полями первой. Ниже списка условий расположены
элементы управления, с помощью которых формируется условие связи таблиц.</p>

<p class="MsoNormalCxSpLast">Если
выбран простой тип условия, то в <span class="Interface">Поле1</span> и <span class="Interface">Поле2</span> выбираются
связанные поля указанных таблиц и задается условие сравнения. Если выбраны
поля, сравнение которых не производится, то в строке списка условий в колонке <span class="Interface">Условие связи</span>
выводится текст: <span class="Interface">Неверно заполненное
условие</span>.</p>

<p class="Regularbeforepicture">На
закладке <span class="Interface">Условия</span>, если
требуется, нужно указать условия, по которым будет выполняться отбор исходных
данных.</p>

<p class="Picture"><IMG src="_img/img00096.gif?_=1496848987" WIDTH="638" ALT HEIGHT="394"></p>

<p class="MsoCaption">Рис.
97. Закладка «Условия» конструктора ограничений</p>

<p class="MsoNormalCxSpFirst">По
каждому выбранному полю необходимо выбрать вид условия и указать наименование
параметра. В качестве параметра допускается использование параметра сеанса.
Разрешается указывать несколько условий. В этом случае в колонке <span class="Interface">Условие</span> табличного
поля условий текст условия выводится в несколько строк.</p>

<p class="MsoNormalCxSpLast">В
любой момент создания запроса текст запроса можно просмотреть, нажав кнопку <span class="Interface">Запрос</span>.</p>

<a name="_ref289179486"></a><a id="TI000000208" class="bookmark" name="issogl4_5.5.4.8.10_групповое_редактирование_ограничений_прав_доступа_и_шаблонов"><h5>5.5.4.8.10. Групповое редактирование ограничений прав доступа и шаблонов</h5></a>

<p class="Regularbeforepicture">Режим
группового редактирования ограничений прав доступа и шаблонов вызывается
командой <span class="Interface">Все ограничения
доступа</span> контекстного меню ветки <span class="Interface">Роли</span>. В
открывшейся форме присутствуют две закладки: <span class="Interface">Ограничения доступа</span>
и <span class="Interface">Шаблоны ограничений</span>.</p>

<p class="Picture"><IMG src="_img/img00097.gif?_=1496848987" WIDTH="691" ALT HEIGHT="356"></p>

<p class="MsoCaption">Рис.
98. Все ограничения прав доступа и шаблоны</p>

<p class="MsoNormalCxSpFirst">На
закладке <span class="Interface">Ограничения доступа</span>
можно просматривать все введенные ограничения доступа в общем списке (по всем
ролям, объектам, правам, комбинациям полей).</p>

<p class="MsoNormalCxSpLast">Существует
возможность добавлять ограничение доступа сразу для нескольких ролей, объектов,
прав и комбинаций ролей.</p>

<p class="Regularbeforepicture">Можно
фильтровать список по различным критериям.</p>

<p class="Picture"><IMG src="_img/img00098.gif?_=1496848987" WIDTH="563" ALT HEIGHT="455"></p>

<p class="MsoCaption">Рис.
99. Отбор ограничений доступа</p>

<p class="MsoNormalCxSpFirst">Режим
группового редактирования позволяет удалять выделенные в списке ограничения.</p>

<p class="MsoNormalCxSpLast">Существует
возможность редактировать выделенные ограничения. При этом можно заменять
состав полей и/или ограничение доступа.</p>

<p class="Regularbeforepicture">Режим
группового редактирования позволяет также копировать выделенные ограничения в
другие роли.</p>

<p class="Picture"><a name="_ref7517294"></a><IMG src="_img/img00099.gif?_=1496848987" WIDTH="505" ALT HEIGHT="245"></p>

<p class="MsoCaption">Рис. 100. Копирование ограничений</p>

<p class="Regularbeforepicture">На
закладке <span class="Interface">Шаблоны ограничений</span>
можно видеть все шаблоны ограничения доступа, присутствующие в прикладном
решении, при этом из собственно текста шаблона в таблице отображаются только
первые 10 строк, которые завершаются символом &quot;<span class="Interface">…</span>&quot;, если
текст шаблона более 10 строк. В окне редактирования шаблона будет отображаться
полный текст шаблона.</p>

<p class="Picture"><IMG src="_img/img00100.gif?_=1496848987" WIDTH="751" ALT HEIGHT="415"></p>

<p class="MsoCaption">Рис.
101. Все шаблоны ограничения доступа</p>

<p class="MsoNormal">Существует
возможность добавлять шаблон ограничения доступа сразу для нескольких ролей.</p>

<p class="Regularbeforepicture">Имеется
возможность отбирать необходимые шаблоны с помощью набора критериев, а также по
значению текущей колонки.</p>

<p class="Picture"><IMG src="_img/img00101.gif?_=1496848987" WIDTH="505" ALT HEIGHT="296"></p>

<p class="MsoCaption">Рис.
102. Отбор шаблонов ограничения доступа</p>

<p class="Regularbeforepicture">При
необходимости имеется возможность выполнить копирование одного или нескольких
шаблонов в другие роли.</p>

<p class="Picture"><IMG src="_img/img00102.gif?_=1496848987" WIDTH="505" ALT HEIGHT="245"></p>

<p class="MsoCaption">Рис.
103. Копирование шаблонов</p>

<p class="MsoNormal">Также
редактор предоставляет возможность редактировать выделенные шаблоны. При этом
можно изменять наименование и сам текст шаблона.</p>

<a name="_ref284330956"></a><a name="_ref429580590"></a><a id="TI000000209" class="bookmark" name="issogl2_5.5.5_общие_реквизиты"><h3>5.5.5. Общие реквизиты</h3></a>

<p class="MsoNormal"><span class="Bold">Общий реквизит</span> – это реквизит, добавляемый ко всем или
многим объектам конфигурации. Общий реквизит может использоваться в двух
сценариях:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Как <span class="Bold">общий реквизит</span>, т. е.
для упрощения указания реквизита, который присутствует во всех или многих
объектах конфигурации, в которых этот реквизит сохраняет свой смысл и тип. В
качестве примера такого использования общего реквизита можно привести поле
произвольного комментария в документах прикладного решения.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Как составная часть <span class="Bold">разделения
данных</span> – специального механизма, позволяющего разделить все
хранимые данные, а также работу прикладного решения на отдельные части. При
этом у общего реквизита включается <span class="Bold">разделение данных</span>. В
качестве примера такого использования можно привести понятие абонента, когда в
одной физической информационной базе могут независимо работать различные
«владельцы» данных, при этом пользователи такого прикладного решения будут
считать, что в информационной базе кроме «их» данных нет больше ничего. Подробнее
о механизме разделения данных см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 24. механизм разделения данных.htm?_=1496848987#_ref315878147">здесь</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>

<p class="Regularbeforepicture">Для
того чтобы создать общий реквизит, необходимо создать объект конфигурации <span class="Interface">Общий реквизит</span>.
Это можно сделать в режиме Конфигуратор обычным способом, то есть в окне
конфигурации следует выбрать пункт <span class="Interface">Общие</span>, далее <span class="Interface">Общие реквизиты</span>
и добавить новый объект.</p>

<p class="Picture"><IMG src="_img/img00103.gif?_=1496848987" WIDTH="350" ALT HEIGHT="308"></p>

<p class="MsoCaption">Рис.
104. Создание общего реквизита</p>

<p class="MsoNormalCxSpFirst">В
результате будет создан объект конфигурации <span class="Interface">Общий реквизит</span>,
который можно использовать для включения общего реквизита в необходимые объекты
конфигурации.</p>

<p class="MsoNormalCxSpLast">Режим
работы общего реквизита задается с помощью свойства <span class="Interface">Разделение данных</span>.
Если это свойство установлено в значение <span class="Interface">Не использовать</span>,
то созданный объект конфигурации будет использоваться только как реквизит,
входящий в состав нескольких (или всех) объектов конфигурации. Если свойство
установлено в значение <span class="Interface">Разделять,</span>
общий реквизит будет использоваться в качестве <span class="Bold">разделителя</span>
данных (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 24. механизм разделения данных.htm?_=1496848987#_ref325101955">здесь</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>).</p>

<p class="Regularbeforepicture">Список
объектов конфигурации, в состав которых входит общий реквизит, определяется с
помощью свойств <span class="Interface">Состав</span> и <span class="Interface">Автоиспользование</span>
(или соответствующая закладка в окне <span class="Interface">Дополнительно</span> (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 2. работа с конфигурацией.htm?_=1496848987#_ref292450152">здесь</a>)).</p>

<p class="Picture"><IMG src="_img/img00104.gif?_=1496848987" WIDTH="350" ALT HEIGHT="397"></p>

<p class="MsoCaption">Рис.
105. Общий реквизит без разделения</p>

<p class="MsoNormalCxSpFirst">Если
свойство <span class="Interface">Автоиспользование</span>
установлено в значение <span class="Interface">Использовать</span>,
то созданный общий реквизит будет автоматически добавлен во все существующие
объекты конфигурации (для которых возможно использование общих реквизитов), а
также будет автоматически добавляться во все вновь создаваемые объекты
конфигурации.</p>

<p class="MsoNormalCxSpLast">В
том случае, если свойство <span class="Interface">Автоиспользование</span>
установлено в значение <span class="Interface">Не использовать,</span>
автоматического добавления реквизита происходить не будет, а для выбора
объектов, в состав которых необходимо включить общий реквизит, следует воспользоваться
свойством <span class="Interface">Состав</span>.</p>

<p class="Regularbeforepicture">Этим
же свойством следует воспользоваться в том случае, если при автоматическом
использовании общего реквизита существуют объекты, в которых общий реквизит
добавлять не следует.</p>

<p class="Picture"><IMG src="_img/img00105.gif?_=1496848987" WIDTH="581" ALT HEIGHT="418"></p>

<p class="MsoCaption">Рис.
106. Состав общего реквизита</p>

<p class="MsoNormal">Окно
редактирования состава общего реквизита разделено на две части:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
в верхней части указаны все объекты
конфигурации, которые могут входить в состав общего реквизита;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
в нижней части – объекты, настройки которых
отличаются от настроек по умолчанию, определяемых значением свойства <span class="Interface">Автоиспользование</span>
общего реквизита:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
если свойство установлено в значение <span class="Interface">Использовать</span>,
то нижняя часть окна содержит список объектов, не входящих в состав общего
реквизита;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
если свойство установлено в значение <span class="Interface">Не использовать</span>,
то нижняя часть окна содержит список объектов, входящих в состав общего
реквизита.</p>

<p class="MsoNormalCxSpFirst">Редактирование
можно осуществлять как в верхней, так и в нижней части окна, при этом
редактируемый объект конфигурации будет перемещаться между частями окна, в
зависимости от значения в колонке <span class="Interface">Использование</span>.</p>

<p class="MsoNormalCxSpLast">Для
каждого объекта конфигурации колонка <span class="Interface">Использование</span>
может принимать одно из трех значений:</p>

<p class="MsoListBullet">&#9679; 
<span class="Interface">Автоматически</span> –
означает, что назначение объекта конфигурации общему реквизиту зависит от
значения свойства <span class="Interface">Автоиспользование</span>
общего реквизита:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
<span class="Interface">Использовать</span>
означает, что объект конфигурации <span class="Bold">входит</span> в состав
общего реквизита;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
<span class="Interface">Не использовать</span>
означает, что объект конфигурации <span class="Bold">не входит</span> в состав
общего реквизита.</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">Использовать</span> –
означает, что объект конфигурации <span class="Bold">входит</span> в состав
общего реквизита вне зависимости от значения свойства <span class="Interface">Автоиспользование</span>.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Interface">Не использовать</span> –
означает, что объект конфигурации <span class="Bold">не входит</span> в состав общего
реквизита вне зависимости от значения свойства <span class="Interface">Автоиспользование</span>.</p>

<p class="MsoNormalCxSpFirst">Таким
образом, с помощью редактора свойства <span class="Interface">Состав</span> можно,
например, выборочно исключать некоторые объекты из состава общего реквизита,
несмотря на то, что для него установлено автоиспользование.</p>

<p class="MsoNormalCxSpLast">В
состав общего реквизита (не находящегося в режиме разделения данных) могут
входить следующие объекты конфигурации:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
справочники,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
документы,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
журналы документов,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
планы видов характеристик,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
планы счетов,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
планы видов расчета,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
бизнес-процессы,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
задачи,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
регистры сведений,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
регистры накопления,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
регистры бухгалтерского учета,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
регистры расчета,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
планы обмена,</p>

<p class="MsoListBulletCxSpLast">&#9679; 
внешние источники данных.</p>

<p class="MsoNormalCxSpFirst"><a name="_ref280293888">При записи документа общему реквизиту журнала присваивается
значение общего реквизита документа или значение </a><span class="Term">NULL</span>,
если документ не входит в состав общего реквизита.</p>

<p class="MsoNormalCxSpMiddle">Общий реквизит может использоваться в
ограничениях доступа к данным (см. <a href="#_ref73775184">здесь</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>). Включать внешние
источники данных в состав общего реквизита имеет смысл в том случае, когда
общий реквизит является разделителем (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 24. механизм разделения данных.htm?_=1496848987#_ref322431911">здесь</a>). С особенностями использования внешнего источника
данных, входящего в состав разделителя, можно ознакомиться в соответствующем
разделе (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 23. внешние источники данных.htm?_=1496848987#_ref322431997">здесь</a>).</p>

<p class="MsoNormalCxSpLast">Общий реквизит <span class="Bold">может быть
составного типа</span>.</p>

<p class="Note"><span class="Note">СОВЕТ.</span> Не следует использовать
общие реквизиты для описания данных, которые являются частью бизнес-логики
конкретных объектов.</p>

<p class="MsoNormal">Общие реквизиты отображаются в редакторе
формы при редактировании форм объектов, входящих в состав общего реквизита, и
могут быть размещены на форме.</p>

<a id="TI000000210" class="bookmark" name="issogl2_5.5.6_планы_обмена"><h3>5.5.6. Планы обмена</h3></a>

<p class="MsoNormal">План
обмена используется для реализации механизмов обмена данными. План обмена:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
содержит информацию об узлах, которые могут
участвовать в обмене данными;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
определяет состав данных, которыми будет
производиться обмен;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
указывает, следует ли задействовать механизм
распределенной информационной базы при обмене.</p>

<p class="MsoNormalCxSpFirst">В
одном прикладном решении может существовать несколько планов обмена, каждый из
которых может описывать свой порядок обмена данными. Например, если выполняется
обмен данными с удаленными складами и удаленными офисами, то, скорее всего,
будут существовать два плана обмена (один – для обмена со складами, другой –
для офисов), поскольку состав данных, которыми производится обмен со складами,
будет значительно «уже», чем состав данных, предназначенных для обмена с офисами.</p>

<p class="MsoNormalCxSpLast">Описание
механизмов обмена данными см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 15. механизмы обмена данными.htm?_=1496848987#_ref214442941">здесь</a>.</p>

<a name="_ref148759549"></a><a name="_ref148759548"></a><a id="TI000000211" class="bookmark" name="issogl2_5.5.7_критерии_отбора"><h3>5.5.7. Критерии отбора</h3></a>

<p class="MsoNormalCxSpFirst"><span class="Interface">Критерии отбора</span> – одна из составляющих механизма
отбора информации. С их помощью специалист, осуществляющий конфигурирование
системы, создает предопределенные правила отбора. В режиме 1С:Предприятие по
этим правилам будет выполняться отбор информации в списках.</p>

<p class="MsoNormalCxSpMiddle">В
окне редактирования объекта <span class="Interface">Критерий отбора</span>
нужно указать имя, синоним и комментарий.</p>

<p class="MsoNormalCxSpMiddle">Тип
критерия отбора может быть любым из стандартных типов или определенных как
объекты дерева конфигурации. Допускается включение реквизитов с составным
типом, заданным как <span class="Term">СправочникСсылка</span>,
<span class="Term">ДокументСсылка</span> и т. д.,
а также реквизитов с составным типом, определенным планом видов характеристик (<span class="Term">Характеристика</span><span class="Term">…</span>).</p>

<p class="MsoNormalCxSpMiddle">При
создании типа критерия отбора следует указать те типы, по которым требуется
производить отбор. На закладке <span class="Interface">Состав</span> по этому
типу будет сформирован состав объектов конфигурации, содержащих данные, тип
которых входит в тип критерия отбора. В списке требуется установить отметку для
тех реквизитов, по которым будет производиться данный отбор.</p>

<p class="MsoNormalCxSpMiddle">Чтобы
критерий отбора выполнял свои функции, в конфигураторе для него должен быть
создан список (закладка <span class="Interface">Состав</span>), состоящий
из реквизитов справочников и документов. На состав списка не накладывается практически
никаких ограничений: например, в отличие от графы журнала, для критерия отбора
можно выбрать несколько реквизитов одного документа и реквизитов табличной
части документа.</p>

<p class="MsoNormalCxSpLast">Критериев
отбора может быть произвольное число, а каждый критерий может иметь несколько
форм представления результатов отбора. Этот механизм полезен в случае поиска
различной информации. Например, требуется отобрать все документы, в которых
используется (в реквизитах и табличных частях) определенный контрагент. При
этом можно учитывать и другие условия отбора информации (например, поиск
ведется только среди проведенных документов или в определенном интервале дат и т. д.).</p>

<p class="Note"><span class="Note">Примечание.</span>
При открытии формы отбора следует передавать в нее параметр <span class="Term">Отбор</span> с установленным значением отбора
(элемент <span class="Term">Значение</span>). Подробнее о параметрах формы
см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 7. формы.htm?_=1496848987#_ref277428095">здесь</a>.</p>

<p class="MsoNormalCxSpFirst">Критерий
отбора может иметь произвольное число форм для визуального представления
результатов отбора. Для оперативности получения информации по отбору вызов
формы можно разместить в пользовательском меню или на панели инструментов.</p>

<p class="MsoNormalCxSpMiddle">Если
форм критерия отбора несколько, то в свойстве <span class="Interface">Основная форма</span>
указывается та форма, которая будет вызываться по умолчанию.</p>

<p class="MsoNormalCxSpMiddle">Если
в конфигурации определено несколько подсистем, нужно выбрать ту, к которой
относится данный критерий отбора. Можно указать несколько различных подсистем.</p>

<p class="MsoNormalCxSpLast">Для
вызова формы критерия отбора система размещает соответствующую команду в панели
навигации формы.</p>

<a name="_ref450307850"></a><a name="_ref450307849"></a><a name="_ref450307494"></a><a id="TI000000212" class="bookmark" name="issogl2_5.5.8_подписки_на_события"><h3>5.5.8. Подписки на события</h3></a>

<p class="MsoNormalCxSpFirst">Подписки
на события позволяют назначать обработчики событий для одного объекта или
группы объектов встроенного языка.</p>

<p class="MsoNormalCxSpMiddle">При
добавлении новой подписки на событие, кроме общих свойств объектов конфигурации,
следует указать источник события, само событие, обработчик которого назначается,
и процедуру, являющуюся обработчиком этого события.</p>

<p class="MsoNormalCxSpMiddle">Источниками
событий могут являться прикладные объекты, наборы записей регистров, менеджеры
объектов конфигурации. Допускается как множественный выбор объектов, являющихся
поставщиками событий, так и выбор всех объектов одного типа (например, все
документы).</p>

<p class="MsoNormalCxSpMiddle">Выбор
события осуществляется из выпадающего списка, причем список содержит те
события, которые присутствуют во всех выбранных объектах. Если таких событий
нет, список будет пуст.</p>

<p class="MsoNormalCxSpLast">Выбор
обработчика события выполняется в окне, содержащем процедуры, которые могут
быть назначены в качестве обработчика события. Такие процедуры должны удовлетворять
следующим требованиям:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Процедура должна быть расположена в общем модуле;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
У общего модуля, в котором расположена
процедура, должны быть заданы следующие свойства:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
флажок <span class="Interface">Глобальный</span> снят;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
флажок <span class="Interface">Клиент (обычное
приложение)</span> установлен;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
флажок <span class="Interface">Клиент (управляемое
приложение)</span> снят;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
флажок <span class="Interface">Сервер</span> установлен;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
флажок <span class="Interface">Внешнее соединение</span>
установлен.</p>

<p class="MsoListBullet">&#9679; 
Количество параметров процедуры должно быть на
единицу больше, чем количество параметров, которое имеет обработчик выбранного
события. Это связано с тем, что дополнительно к параметрам, которые передаются
системой в метод обработки события, передается еще и объект-источник данного
события.</p>

<p class="MsoNormal">При
наступлении указанного события выполняется следующая последовательность
действий:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Сначала отрабатывается событие в самом объекте и
вызывается обработчик события, определенный в модуле объекта или набора записей.
Если к прикладному решению подключены расширения конфигурации
(см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 32. расширение конфигурации.htm?_=1496848987#_ref405464478">здесь</a>), то программный код, расширяющий обработчики
событий, также исполняется на этом этапе.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Если в процессе выполнения обработчика параметр <span class="Term">Отказ</span> установлен в значение <span class="Term">Истина</span> или вызвано исключение, действие
прерывается.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Затем в произвольном порядке вызываются внешние
обработчики, назначенные для данного события.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Если в процессе выполнения назначенного обработчика
параметр <span class="Term">Отказ</span> установлен в значение <span class="Term">Истина</span> или вызвано исключение, действие
прерывается.</p>

<p class="MsoNormalCxSpFirst">В
качестве источника в назначенный обработчик передается сам объект (набор
записей), вызвавший событие.</p>

<p class="MsoNormalCxSpMiddle">Назначенные
обработчики событий вызываются в том же контексте, что и действие, вызвавшее
событие. Если выполнение назначенного обработчика нужно перенести на сервер,
следует вызывать в коде обработчика процедуру общего модуля, исполняемую на
сервере.</p>

<p class="MsoNormalCxSpMiddle">Назначение
обработчиков событий доступно также и средствами встроенного языка. Для этого
используются операторы <span class="Term">ДобавитьОбработчик</span>
и <span class="Term">УдалитьОбработчик</span>.</p>

<p class="MsoNormalCxSpLast">У
объектов, которые могут являться источниками событий, есть свойство <span class="Term">ДополнительныеСвойства</span>
типа <span class="Term">Структура</span>, позволяющее
хранить информацию между вызовами событий, например, новый или старый это
объект.</p>

<a id="TI000000213" class="bookmark" name="issogl2_5.5.9_регламентные_задания"><h3>5.5.9. Регламентные задания</h3></a>

<a name="_ref213664543"></a><a id="TI000000214" class="bookmark" name="issogl3_5.5.9.1_основные_возможности_механизма_заданий"><h4>5.5.9.1. Основные возможности механизма заданий</h4></a>

<p class="MsoNormal">Основными
возможностями механизма заданий являются:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
определение регламентных процедур на этапе программирования
системы;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
выполнение заданных действий по расписанию;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
выполнение вызова заданной процедуры или функции
асинхронно, т. е. без ожидания ее завершения;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
мониторинг хода выполнения заданий;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
управление заданиями (отмена, блокировка
выполнения и др.);</p>

<p class="MsoListBulletCxSpLast">&#9679; 
возможность ожидания завершения одного или
нескольких заданий.</p>

<a id="TI000000215" class="bookmark" name="issogl3_5.5.9.2_фоновые_задания"><h4>5.5.9.2. Фоновые задания</h4></a>

<p class="MsoNormalCxSpFirst">Механизм
фоновых заданий реализуется средствами встроенного языка. Фоновые задания
предназначены для выполнения прикладных задач асинхронно. Они могут порождать
дочерние фоновые задания, например, для распараллеливания сложных вычислений по
различным рабочим серверам кластера в клиент-серверном варианте работы.</p>

<p class="MsoNormalCxSpLast">Существует
возможность ограничить выполнение фоновых заданий, имеющих одинаковые методы,
по определенному прикладному признаку. Программное создание и управление
фоновыми заданиями возможны из любого соединения пользователя с информационной
базой системы «1С:Предприятие». Фоновое задание выполняется от имени
пользователя, который его создал.</p>

<a id="TI000000216" class="bookmark" name="issogl3_5.5.9.3_регламентные_задания"><h4>5.5.9.3. Регламентные задания</h4></a>

<p class="Regularbeforepicture">Регламентные
задания представляют собой неотъемлемую часть конкретного прикладного решения и
описываются на этапе конфигурирования.</p>

<p class="Picture"><IMG src="_img/img00106.gif?_=1496848987" WIDTH="479" ALT HEIGHT="393"></p>

<p class="MsoCaption">Рис.
107. Расписание фоновых заданий</p>

<p class="MsoNormalCxSpFirst">Для
каждого регламентного задания может быть задано расписание, в соответствии с
которым регламентное задание будет автоматически запущено на исполнение. В
системе «1С:Предприятие» поддерживаются однократные и периодические расписания.
Можно задать дату начала и окончания выполнения, дневное, недельное и месячные
расписания. Расписание можно задать как на этапе конфигурирования, так и на
этапе выполнения (в режиме 1С:Предприятие).</p>

<p class="MsoNormalCxSpMiddle">В
процессе запуска регламентное задание порождает фоновое задание, которое и
выполняет реальную обработку. Регламентное задание может выполняться от имени
заданного пользователя и имеет возможность перезапуска (например, в случае
непредвиденного завершения работы).</p>

<p class="MsoNormalCxSpLast">В
утилите администрирования клиент-серверного варианта работы автоматическое
выполнение регламентных заданий может быть запрещено для конкретной
информационной базы.</p>

<a id="TI000000217" class="bookmark" name="issogl3_5.5.9.4_особенности_выполнения_регламентных_заданий"><h4>5.5.9.4. Особенности выполнения регламентных заданий</h4></a>

<p class="MsoNormalCxSpFirst">В
клиент-серверном варианте работы запуск регламентных заданий по расписанию
осуществляет менеджер кластера. Таким образом, даже если с информационной базой
не установлено ни одного клиентского соединения, регламентные задания будут
выполняться (при условии, что они не запрещены для конкретной информационной
базы).</p>

<p class="MsoNormalCxSpLast">Особенность
выполнения фоновых заданий в файловом и клиент-серверном вариантах
см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 18. механизм заданий.htm?_=1496848987#_ref351996985">здесь</a>.</p>

<a name="_ref331089128"></a><a name="_ref292444461"></a><a name="_ref264542890"></a><a name="_ref244323845"></a><a name="_ref221348676"></a><a name="_ref418598738"></a><a name="_ref418598731"></a><a name="_ref418598712"></a><a id="TI000000218" class="bookmark" name="issogl2_5.5.10_функциональные_опции_и_параметры_функциональных_опций"><h3>5.5.10. Функциональные опции и параметры функциональных опций</h3></a>

<a id="TI000000219" class="bookmark" name="issogl3_5.5.10.1_назначение"><h4>5.5.10.1. Назначение</h4></a>

<p class="MsoNormalCxSpFirst">Функциональные опции позволяют разработчику
описать возможности прикладного решения, которые можно оперативно включать или
выключать на этапе внедрения и/или в процессе работы системы. Например, возможность
работы с дополнительными свойствами товаров можно выделить в отдельную
функциональную опцию. Тогда если отключить эту возможность, в интерфейсе прикладного
решения «пропадут» все связанные (с дополнительными свойствами товаров) возможности.</p>

<p class="MsoNormalCxSpMiddle">Система способна автоматически учитывать
состояние сделанных настроек – скрывать выключенные возможности, делая интерфейс
приложения более ясным и понятным для пользователя.</p>

<p class="MsoNormalCxSpLast">При разработке возникают ситуации, когда
значение функциональной опции должно зависеть от неких параметров, например,
валютный учет ведется не у всех организаций. Для реализации такой зависимости служат
<span class="Interface">Параметры функциональных опций</span> – объекты, параметризующие
функциональные опции.</p>

<a id="TI000000220" class="bookmark" name="issogl3_5.5.10.2_на_что_влияют_функциональные_опции"><h4>5.5.10.2. На что влияют функциональные опции</h4></a>

<a id="TI000001704" class="bookmark" name="issogl4_5.5.10.2.1_общая_информация"><h5>5.5.10.2.1. Общая информация</h5></a>

<p class="MsoNormal">Функциональные опции могут оказывать
влияние:</p>

<p class="MsoListBullet">&#9679; 
<span class="Bold">На пользовательский интерфейс</span> –
при выключении каких-либо функциональных опций система скрывает в пользовательском
интерфейсе все элементы, относящиеся к ней. При этом затрагиваются следующие
элементы интерфейса:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
глобальный командный интерфейс;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
реквизиты формы (в том числе колонки реквизита
формы типа <span class="Term">ТаблицаЗначений</span>
или <span class="Term">ДеревоЗначений</span>);</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
команды формы;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
отчеты, реализованные с помощью системы компоновки
данных.</p>

<p class="Note"><span class="Note">Внимание!</span> Если клиентское
приложение работает с файловым вариантом информационной базы через веб-сервер,
то изменение функциональной опции приведет к изменению пользовательского интерфейса
только после перезапуска веб-сервера (перезапуск клиентского приложения не
вызовет изменение пользовательского интерфейса).</p>

<p class="MsoListBullet">&#9679; 
<span class="Bold">На алгоритмы, написанные на
встроенном языке</span> – имеется возможность получать значения
функциональных опций из встроенного языка и использовать их в различных
условиях, например, для уменьшения объема вычислений.</p>

<p class="Note"><span class="Note">ВНИМАНИЕ!</span> Функциональные опции и
их параметры не влияют на состав базы данных. Все таблицы и поля присутствуют в
базе данных независимо от состояния функциональных опций.</p>

<a name="_ref328395001"></a><a id="TI000000221" class="bookmark" name="issogl4_5.5.10.2.2_глобальный_командный_интерфейс"><h5>5.5.10.2.2. Глобальный командный интерфейс</h5></a>

<p class="MsoNormalCxSpFirst">Влияние функциональных опций на глобальный командный
интерфейс заключается в том, что система скрывает команды всех объектов,
относящихся к выключенным опциям. Например, если значение функциональной опции <span class="Term">Закупки</span>
равно значению <span class="Term">Ложь</span>, то будут скрыты команды открытия раздела
<span class="Term">Закупки</span>,
создания документа <span class="Term">ПриходТовара</span>,
открытия списка <span class="Term">ПриходТовара</span>
и т. д.</p>

<p class="MsoNormalCxSpMiddle">В свою очередь, опция <span class="Term">Закупки</span>
может учитывать значение параметра функциональной опции, например, <span class="Term">Организация</span>.
Изменяя с помощью методов встроенного языка значение этого параметра, можно
изменять состояние функциональной опции, а, следовательно, и видимость элемента
интерфейса.</p>

<p class="MsoNormalCxSpLast">Также следует учитывать следующие особенности
формирования командного интерфейса:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Команда будет исключена из командного интерфейса
в том случае, если реквизит, являющийся параметром команды, отключен
функциональной опцией.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Команда будет исключена из командного интерфейса
в том случае, если тип параметра команды отключен функциональной опцией. Если
тип параметра команды составной, то команда становится недоступной тогда, когда
отключаются все типы параметра.</p>

<a name="_ref328395011"></a><a name="_ref424730121"></a><a id="TI000000222" class="bookmark" name="issogl4_5.5.10.2.3_форма"><h5>5.5.10.2.3. Форма</h5></a>

<p class="MsoNormal">В форме функциональные опции могут влиять на
реквизиты и команды формы и (как следствие) изменять видимость связанных с ними
элементов формы (поля и колонки – для реквизитов формы, кнопки – для
команд формы). При разработке формы необходимо учитывать следующие особенности
поведения системы:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Основной реквизит управляемой формы типа <span class="Term">&lt;Вид&gt;Объект</span>
(<span class="Term">СправочникОбъект</span>,
<span class="Term">ДокументОбъект</span>
и т. д.) будет отключен в том случае, если функциональной опцией
отключен соответствующий объект конфигурации. Анализируются только те
функциональные опции, которые не имеют параметров.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Основной реквизит управляемой формы типа <span class="Term">ДинамическийСписок</span>
будет отключен в том случае, если функциональной опцией отключен объект
конфигурации, который указан в качестве основной таблицы динамического списка. Анализируются
только те функциональные опции, которые не имеют параметров.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Динамический список, который отображает журнал
документов, не учитывает тот факт, что какой-то из видов документов в этом
журнале отключен функциональной опцией. В динамическом списке всегда будут
отображаться все документы журнала.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Отключается реквизит формы ссылочного типа, если
объект конфигурации, образующий этот тип, отключен функциональной опцией.
Реквизит формы составного типа отключается в том случае, если функциональные
опции отключают все составляющие типы.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Отключается реквизит формы типа <span class="Term">&lt;Вид&gt;Объект</span>
(включая основной реквизит формы), если объект конфигурации, образующий этот тип,
отключен функциональной опцией. Анализируются только те функциональные опции,
которые не имеют параметров.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Таблица формы будет отключена, если она отображает
данные реквизита формы, отключенного функциональной опцией.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
В диалоге выбора типов (например, для полей
ввода, связанных с реквизитами составного типа) отсутствуют типы, если объекты
конфигурации, формирующие эти типы, отключены функциональной опцией. Информация
о типах, отключенных функциональными опциями, кешируется на стороне клиента и
очищается через 20 минут или во время вызова метода <span class="Term">ОбновитьИнтерфейс()</span>.</p>

<p class="Note"><span class="Note">ВНИМАНИЕ!</span> В отличие от командного
интерфейса, значения параметров функциональных опций устанавливаются только для
конкретного экземпляра формы.</p>

<a id="TI000000223" class="bookmark" name="issogl4_5.5.10.2.4_система_компоновки_данных"><h5>5.5.10.2.4. Система компоновки данных</h5></a>

<p class="MsoNormalCxSpFirst">Система компоновки данных в основном
используется для построения отчетов. Функциональные опции влияют на состав данных,
которые выводятся в отчет, и на состав настроек отчета, доступных пользователю.
Например, если выключена функциональная опция <span class="Interface">Валютный учет</span>, то в отчете, выводящем реестр документов <span class="Interface">Приход товара</span>, будет отсутствовать колонка <span class="Interface">Валюта</span> и <span class="Interface">Валютная сумма</span>, а в настройках будет отсутствовать
возможность отбора, группировки, сортировки и т. д. по полю <span class="Term">Валюта</span>.</p>

<p class="MsoNormalCxSpLast">Подробнее о влиянии функциональных опций на
доступность полей в отчете, построенном на системе компоновки данных, см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 10. система компоновки данных.htm?_=1496848987#_ref236810229">здесь</a>.</p>

<a id="TI000000224" class="bookmark" name="issogl4_5.5.10.2.5_характеристики"><h5>5.5.10.2.5. Характеристики</h5></a>

<p class="MsoNormal">Функциональные опции оказывают влияние на
видимость полей формы, которые отображают значение характеристики объекта. Для
этого необходимо включить в состав функциональной опции реквизит, хранящий
значение характеристики.</p>

<p class="Regularbeforepicture">Рассмотрим пример. Характеристики используются
для справочника <span class="Term">Товары</span>,
виды характеристик хранятся в плане видов характеристик <span class="Term">Характеристики</span>,
а значения – в качестве ресурса регистра сведений <span class="Term">ЗначенияХарактеристик</span>.
Ресурс входит в состав функциональной опции <span class="Term">УчетХарактеристик</span>.</p>

<p class="Picture"><IMG src="_img/img00107.gif?_=1496848987" WIDTH="800" ALT HEIGHT="319"></p>

<p class="MsoCaption"><a name="_ref275358357">Рис. </a>108. Влияние функциональных опций на характеристики</p>

<p class="MsoNormal">В случае отключения функциональной опции <span class="Term">УчетХарактеристик</span>
в формах отключается видимость полей (колонка <span class="Interface">Значение</span> и поле <span class="Interface">Значение</span>), отображающих значения характеристик, как
показано на <a href="#_ref275358357">рис.108</a>.</p>

<a id="TI000000225" class="bookmark" name="issogl3_5.5.10.3_общая_схема_работы"><h4>5.5.10.3. Общая схема работы</h4></a>

<p class="MsoNormalCxSpFirst">Механизм функциональных опций включает в
себя два типа объектов метаданных: <span class="Interface">Функциональная опция</span> и <span class="Interface">Параметры функциональных опций</span>.</p>

<p class="MsoNormalCxSpMiddle">Функциональная опция представляет собой
объект метаданных, который может непосредственно влиять на состав интерфейса приложения
(если функциональная опция хранит свое значение в реквизите типа <span class="Term">Булево</span>).
С помощью объектов этого типа можно скрыть элементы, которые относятся к
недоступной функциональности. Например, опция <span class="Interface">Валютный учет</span> может скрыть справочник <span class="Term">Валюты</span>,
поле <span class="Term">Валюта</span>
из документов, колонку <span class="Interface">Валютная сумма</span> из отчетов. Источником значения функциональной
опции является объект метаданных, выбранный в качестве свойства <span class="Term">Хранение</span>,
например, это может быть константа.</p>

<p class="MsoNormalCxSpLast">В случае хранения значения функциональной
опции в реквизите справочника или ресурсе регистра сведений требуется дополнительная
информация, которая указывает на то, как именно выбрать значение опции. Для
этой цели предусмотрен отдельный объект метаданных – <span class="Interface">Параметры функциональных опций</span>.</p>

<p class="Regularbeforepicture">Можно сказать, что параметры функциональных
опций являются осями координат пространства значений функциональных опций.
Причем один параметр функциональных опций может определять значение «своей» оси
координат одновременно для множества функциональных опций.</p>

<p class="Picture"><IMG src="_img/img00108.gif?_=1496848987" WIDTH="498" ALT HEIGHT="274"></p>

<p class="MsoCaption"><a name="_ref213652114">Рис. </a>109. Параметризуемая функциональная опция</p>

<p class="MsoNormalCxSpFirst">Рассмотрим пример: допустим, суммовой учет зависит
от склада, принадлежащего конкретной организации (см. <a href="#_ref213652114">рис.109</a>). В нашей информационной базе можно вести учет от
имени разных организаций и на разных складах.</p>

<p class="MsoNormalCxSpLast">Для хранения значений функциональных опций
создадим регистр сведений, где измерениями (осями координат) будут:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Term">Организация</span> (соответствующего типа);</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Term">Склад</span> (соответствующего типа).</p>

<p class="MsoNormalCxSpFirst">Ресурсом регистра сведений будет значение
функциональной опции суммового учета.</p>

<p class="MsoNormalCxSpLast">Тогда общая структура конфигурации будет
выглядеть следующим образом:</p>

<p class="MsoListBullet">&#9679; 
Регистр сведений <span class="Term">СуммовойУчет</span>:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
измерение <span class="Term">Организация</span>;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
измерение <span class="Term">Склад</span>;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
ресурс <span class="Term">СуммовойУчет</span>,
имеющий тип <span class="Term">Булево</span>.</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Параметр функциональных опций <span class="Term">Организация</span>.
Свойство <span class="Term">Использование</span>
указывает на измерение <span class="Term">Организация</span>
регистра сведений <span class="Term">СуммовойУчет</span>.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Параметр функциональных опций <span class="Term">Склад</span>.
Свойство <span class="Term">Использование</span>
указывает на измерение <span class="Term">Склад</span>
регистра сведений <span class="Term">СуммовойУчет</span>.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Функциональная опция <span class="Term">СуммовойУчет</span>.
Свойство <span class="Term">Хранение</span>
указывает на ресурс <span class="Term">СуммовойУчет</span>
регистра сведений <span class="Term">СуммовойУчет</span>.</p>

<p class="MsoNormalCxSpFirst">В результате для того, чтобы определить
необходимость ведения суммового учета, нам необходимо в каждом конкретном
случае указать значения параметров функциональных опций (<span class="Term">Организация</span>
и <span class="Term">Склад</span>)
и получить значение функциональной опции.</p>

<p class="MsoNormalCxSpLast">Так, в примере, показанном на <a href="#_ref213652114">рис.109</a>, для <span class="Interface">Организации 1</span> и <span class="Interface">Склада 1</span> суммовой учет разрешен, а для <span class="Interface">Организации 2</span> и <span class="Interface">Склада 1</span> суммовой учет запрещен.</p>

<a id="TI000000226" class="bookmark" name="issogl3_5.5.10.4_взаимодействие_с_другими_объектами"><h4>5.5.10.4. Взаимодействие с другими объектами</h4></a>

<p class="MsoNormal">Функциональные опции могут быть назначены
следующим объектам конфигурации:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Подсистемы,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Общие команды,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Общие формы,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Константы,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Критерии отбора,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Справочник,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Документ,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Журнал,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
План счетов,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
План видов характеристик,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
План видов расчета,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Бизнес-процесс,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Задача,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Планы обмена,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Отчет,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Обработка,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Регистр накопления,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Регистр сведений,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Регистр бухгалтерии,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Регистр расчета,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Команда,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Реквизит объекта метаданных,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Табличная часть,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Реквизит табличной части,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Признак учета,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Признак учета субконто,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Реквизиты адресации,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Измерение регистра,</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Ресурс регистра.</p>

<p class="MsoNormal">Также функциональные опции могут влиять на
видимость элементов формы.</p>

<a id="TI000000227" class="bookmark" name="issogl3_5.5.10.5_создание"><h4>5.5.10.5. Создание</h4></a>

<a id="TI000000228" class="bookmark" name="issogl4_5.5.10.5.1_создание_функциональной_опции"><h5>5.5.10.5.1. Создание функциональной опции</h5></a>

<p class="Regularbeforepicture">Для того чтобы создать функциональную опцию,
необходимо создать объект конфигурации <span class="Interface">Функциональная опция</span>. Это можно сделать в режиме Конфигуратор
обычным способом, то есть в окне конфигурации следует выбрать пункт <span class="Interface">Общие</span>, далее <span class="Interface">Функциональные опции</span> и добавить новый объект.</p>

<p class="Picture"><IMG src="_img/img00109.gif?_=1496848987" WIDTH="289" ALT HEIGHT="277"></p>

<p class="MsoCaption">Рис. 110. Создание
функциональной опции</p>

<p class="Regularbeforepicture">В результате будет создан объект
конфигурации <span class="Interface">Функциональная опция</span>, который можно использовать для назначения
функциональных опций другим объектам метаданных.</p>

<p class="Picture"><IMG src="_img/img00110.gif?_=1496848987" WIDTH="505" ALT HEIGHT="253"></p>

<p class="MsoCaption">Рис. 111. Хранение значения
функциональной опции</p>

<p class="MsoNormal">Кроме имени объект имеет обязательное для
заполнения свойство – <span class="Interface">Хранение</span>. В редакторе для него можно выбрать один из объектов,
который будет являться источником значения опции. В список доступных
объектов входят:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
константы,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
реквизиты справочников,</p>

<p class="MsoListBulletCxSpLast">&#9679; 
ресурсы регистров сведений.</p>

<p class="MsoNormal">Ограничение на тип источника значения опции
нет, но для управления интерфейсом пригодны только те функциональные опции,
которые хранят свои значения в реквизитах, имеющих тип <span class="Term">Булево</span>. Значения функциональных опций с
другими типами доступны только для анализа на встроенном языке.</p>

<p class="Regularbeforepicture">Свойство <span class="Interface">Привилегированный режим при получении</span> отвечает за способ
получения (и кеширования) значения функциональной опции.</p>

<p class="Picture"><IMG src="_img/img00111.gif?_=1496848987" WIDTH="456" ALT HEIGHT="253"></p>

<p class="MsoCaption">Рис. 112. Привилегированный
режим при получении значения функциональной опции</p>

<p class="MsoNormalCxSpFirst">Если данное свойство установлено, то
значение функциональной опции получается в привилегированном режиме. Полученное
значение кешируется для всех сеансов, связанных с данной информационной базой.</p>

<p class="MsoNormalCxSpMiddle">Если свойство <span class="Interface">Привилегированный режим при получении</span> сброшено, то
получение значения функциональной опции выполняется в обычном режиме. Кеширование
выполняется для текущего сеанса. Кешируется как значение (если его удалось
получить), так и признак невозможности получения значения (в том случае, если
значение получить не удалось).</p>

<p class="MsoNormalCxSpLast">Кеш сбрасывается при изменении значений
параметров сеанса.</p>

<p class="Note"><span class="Note">Совет.</span> Рекомендуется
устанавливать свойство <span class="Interface">Привилегированный режим при получении</span> для всех случаев,
когда значение функциональной опции не содержит конфиденциальную информацию.</p>

<a id="TI000000229" class="bookmark" name="issogl4_5.5.10.5.2_создание_параметра_функциональных_опций"><h5>5.5.10.5.2. Создание параметра функциональных опций</h5></a>

<p class="MsoNormalCxSpFirst">Для того чтобы создать параметр функциональной
опции, необходимо создать объект конфигурации <span class="Interface">Параметры функциональных опций</span>. Это можно сделать в
режиме Конфигуратор обычным способом, то есть в окне конфигурации следует
выбрать пункт <span class="Interface">Общие</span>, далее <span class="Interface">Параметры функциональных опций</span> и добавить новый объект.</p>

<p class="MsoNormalCxSpLast">Кроме имени, параметр имеет обязательное
свойство <span class="Term">Использование</span>.
В нем указывается набор объектов, значения которых будут определять то, как
следует выбирать значение функциональной опции. В список доступных объектов входят
справочники и измерения регистра сведений. Для каждого параметра функциональных
опций в данном списке можно выбрать один справочник (из всего перечня
справочников) и по одному измерению каждого регистра сведений.</p>

<p class="Note"><span class="Note">ВНИМАНИЕ!</span> Нельзя использовать
один и тот же объект метаданных в нескольких параметрах функциональных опций.</p>

<a id="TI000000230" class="bookmark" name="issogl3_5.5.10.6_использование"><h4>5.5.10.6. Использование</h4></a>

<a id="TI000000231" class="bookmark" name="issogl4_5.5.10.6.1_назначение_объектам_метаданных"><h5>5.5.10.6.1. Назначение объектам метаданных</h5></a>

<p class="Regularbeforepicture">Объект метаданных (например, справочник)
можно отнести к одной или нескольким функциональным опциям. Для этого служит
свойство <span class="Interface">Функциональные опции</span>, которое содержит ссылки на
созданные в конфигурации функциональные опции.</p>

<p class="Picture"><IMG src="_img/img00112.gif?_=1496848987" WIDTH="429" ALT HEIGHT="440"></p>

<p class="MsoCaption">Рис. 113. Назначение
функциональной опции объекту</p>

<p class="MsoNormal">Список доступных опций ограничен только теми
опциями, для которых в свойстве <span class="Term">Хранение</span>
назначен объект с типом значения <span class="Term">Булево</span>.</p>

<p class="Note"><span class="Note">ВНИМАНИЕ!</span> Если объекту не
назначена ни одна функциональная опция, то он считается видимым всегда. В противном
случае объект считается видимым, если хотя бы одна из назначенных ему
функциональных опций является включенной (т. е. функциональные опции сочетаются
«по ИЛИ»).</p>

<a id="TI000000232" class="bookmark" name="issogl4_5.5.10.6.2_назначение_реквизитам_и_командам_формы"><h5>5.5.10.6.2. Назначение реквизитам и командам формы</h5></a>

<p class="Regularbeforepicture">Объекты, принадлежащие форме (<span class="Interface">Реквизиты</span> и <span class="Interface">Команды</span>), также можно задействовать в механизме функциональных
опций.</p>

<p class="Picture"><IMG src="_img/img00113.gif?_=1496848987" WIDTH="580" ALT HEIGHT="525"></p>

<p class="MsoCaption">Рис. 114. Назначение
функциональной опции команде</p>

<p class="MsoNormalCxSpFirst">Сделать это можно в редакторе формы,
установив свойство <span class="Interface">Функциональные опции</span> для требуемого объекта.</p>

<p class="MsoNormalCxSpMiddle">Состояние функциональных опций будет влиять
на отображение объектов формы точно так же, как это происходит в случае объектов
метаданных. Например, в случае с командой, отключенной с помощью функциональной
опции, будут убраны все связанные с ней кнопки.</p>

<p class="MsoNormalCxSpLast">Если реквизиту формы или команде не
назначена ни одна функциональная опция, то реквизит формы или команда считается
видимой всегда. В противном случае реквизит формы или команда считается
видимой, если хотя бы одна из назначенных ему функциональных опций является
включенной.</p>

<a id="TI000000233" class="bookmark" name="issogl4_5.5.10.6.3_использование_в_механизме_ограничения_доступа_к_данным"><h5>5.5.10.6.3. Использование в механизме ограничения доступа к данным</h5></a>

<p class="MsoNormal">В условиях механизма ограничения доступа к
данным (см. <a href="#_ref73775184">здесь</a>) <span class="Interface">Функциональные опции</span> могут использоваться точно так же,
как и <span class="Interface">Параметры сеанса</span> (см. <a href="#_ref244324971">здесь</a>). Допустимо использовать только не зависящие от
параметров опции, то есть те, которые привязаны к константам.</p>

<p class="Note"><a name="_ref198808080">ВНИМАНИЕ!
Системой контролируется уникальность имен между параметрами сеанса и функциональными
опциями.</a></p>

<a name="_ref310422493"></a><a name="_ref427581408"></a><a id="TI000000234" class="bookmark" name="issogl4_5.5.10.6.4_определение_значения_функциональной_опции"><h5>5.5.10.6.4. Определение значения функциональной опции</h5></a>

<p class="MsoNormalCxSpFirst">Значение функциональной опции определяется
объектом, который указан в свойстве <span class="Term">Хранение</span>.
В случае константы используется ее значение. Для опции, связанной с реквизитом
справочника или ресурсом регистра сведений, – значения, хранящиеся в этих
объектах. Для того чтобы найти конкретный объект, который хранит значение
функциональной опции, необходима дополнительная информация – набор значений
параметров функциональных опций.</p>

<p class="MsoNormalCxSpMiddle">Если опция хранится в реквизите справочника,
параметр должен содержать ссылку на конкретный элемент справочника. Если опция
хранится в ресурсе регистра сведений, должны быть указаны значения всех
измерений регистра. В этом случае каждое измерение должно характеризоваться
своим параметром.</p>

<p class="MsoNormalCxSpMiddle">Если для функциональной опции, имеющей тип <span class="Term">Булево</span>,
заданы не все параметры, то выполняется сложение «по ИЛИ» всех значений с незаданными
параметрами. Например, если функциональная опция хранится в регистре сведений с
измерениями <span class="Term">Организация</span>
и <span class="Term">Склад</span>
и задано только измерение <span class="Term">Организация</span>,
то значение функциональной опции будет равно <span class="Term">Истина</span>,
если хотя бы у одного из складов, перечисленных в измерении <span class="Term">Склад</span>,
значение функциональной опции будет равно значению <span class="Term">Истина</span>.</p>

<p class="MsoNormalCxSpMiddle">Для функциональной опции, имеющий тип,
отличный от <span class="Term">Булево,</span>
ситуация с не полностью заданными параметрами приводит к генерации исключения.</p>

<p class="MsoNormalCxSpMiddle">Методы встроенного языка позволяют получить
значение опции, как в зависимости от переданных параметров, так и для параметров,
установленных для командного интерфейса или конкретной формы. В том случае,
когда изменение значения объекта, указанного в свойстве функциональной опции <span class="Term">Хранение</span>,
выполняется в транзакции, собственно значение функциональной опции будет
изменено только после завершения транзакции. Пока открыта транзакция –
значение функциональной опции будет равно значению, актуальному на момент
начала транзакции.</p>

<p class="MsoNormalCxSpMiddle">Если функциональная опция привязана к
ресурсу периодического регистра сведений, то система использует срез последних
для получения значения опции. Если требуется получать значение опции на
какую-либо другую дату, необходимо указать значение для параметра функциональных
опций <span class="Term">Период</span>
(<span class="Term">Period</span>), имеющий тип <span class="Term">Дата</span>, который будет использоваться как дата
получения среза. Этот параметр не нужно создавать в метаданных. Он предоставляется
системой автоматически.</p>

<p class="MsoNormalCxSpLast">При использовании параметризованных
функциональных опций следует учитывать следующие особенности поведения:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
В формах списков колонка реквизита, связанного с
параметризованной функциональной опцией, будет отображаться, если в
информационной базе хранится хотя бы одно включенное значение данной
функциональной опции.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Если необходимо, чтобы при открытии формы
реквизиты, связанные с функциональными опциями, были отключены по умолчанию, то
нужно установить значения этих параметров в значения, отсутствующие в
информационной базе (для справочников – пустая ссылка, для регистров
сведений – значения измерений, для которых нет записей). В этом случае
функциональная опция будет иметь значение <span class="Term">Ложь</span>.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
В том случае, когда в качестве параметра указана
ссылка на группу (если типа параметра функциональной опции допускает создание
групп), а не ссылка на элемент, поведение системы будет следующим:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
если реквизит, в котором хранится значение
функциональной опции, используется как для элемента, так и для группы, то
значение функциональной опции будет определяться значением этого реквизита.</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
если реквизит, в котором хранится значение
функциональной опции, не используется для группы, то при получении значения
функциональной опции c помощью методов <span class="Term">ПолучитьФункциональнуюОпцию()</span>,
<span class="Term">ПолучитьФункциональнуюОпциюФормы()</span>
и <span class="Term">ПолучитьФункциональнуюОпциюИнтерфейса()</span>
будет возращено значение <span class="Term">NULL</span>.
Если, параметризованная таким значением, функциональная опция оказывает влияние
на пользовательский интерфейс, то система будет воспринимать ее как выключенную
(функциональная опция будет иметь значение <span class="Term">Ложь</span>).</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Для командообразующих объектов метаданных
возможно установить привязку к параметризованной функциональной опции. В командном
интерфейсе команды таких объектов будут отображаться только в том случае, если
есть хотя бы одна комбинация параметров функциональных опций, при которых
значение функциональной опции равно <span class="Term">Истина</span>.
Однако с помощью метода <span class="Term">УстановитьПараметрыФункциональныхОпцийИнтерфейса()</span>
можно задать конкретные значения параметров функциональных опций, и тогда
видимость команд будет определяться именно заданными параметрами.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Динамический список автоматически использует
функциональные опции, используемые формой. Если реквизиты, которые используются
в запросе динамического списка, будут отключены при заданной комбинации
параметров функциональных опций, данные по ним не будут выбраны и отображены в
динамическом списке, а реквизит будет удален из списков доступных реквизитов в
диалоге настройки отображения данных динамического списка (в режиме
1С:Предприятие).</p>

<a name="_ref214706495"></a><a name="_ref198953618"></a><a name="_ref198953607"></a><a id="TI000000235" class="bookmark" name="issogl3_5.5.10.7_работа_с_функциональными_опциями_во_встроенном_языке"><h4>5.5.10.7. Работа с функциональными опциями во встроенном языке</h4></a>

<p class="MsoNormalCxSpFirst">Методы глобального
контекста <span class="Term">ПолучитьФункциональнуюОпцию()</span> и <span class="Term">ПолучитьФункциональнуюОпциюИнтерфейса()</span>
возвращают значение функциональной опции. Разница между ними заключается в том,
что первый метод позволяет указать набор параметров функциональных опций, а
второй – возвращает значение функциональной опции исходя из параметров,
заданных для командного интерфейса. В форме есть свой метод, который возвращает
значение опции для параметров, указанных в рамках формы, – <span class="Term">ПолучитьФункциональнуюОпциюФормы()</span>.</p>

<p class="MsoNormalCxSpLast">Для
обновления глобального командного интерфейса следует явным образом вызывать
метод <span class="Term">УстановитьПараметрыФункциональныхОпцийИнтерфейса()</span>.
Командный интерфейс будет обновлен с учетом нового состояния функциональных
опций.</p>

<p class="Note"><span class="Note">Примечание.</span> Если значение функциональной опции
изменяется в базе данных, то автоматического обновления глобального командного
интерфейса и открытых в это время форм не происходит. Для этого следует
использовать метод <span class="Term">ОбновитьИнтерфейс()</span> после записи значений
функциональных опций в базу данных.</p>

<p class="MsoNormal">Следует
помнить, что установка параметров функциональных опций (и выполнение метода <span class="Term">ОбновитьИнтерфейс()</span>) приводит к следующим
последствиям:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
для каждой формы вызывается закрытие всех
вспомогательных форм (с вызовом соответствующих обработчиков);</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
формы, отказавшиеся от закрытия, не закрываются;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
происходит обновление состава элементов основной
формы;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
если на момент обновления интерфейса активной
формой была основная, происходит отображение основной формы в соответствии с
новым составом элементов;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
если на момент обновления интерфейса активной
формой была вспомогательная форма, то:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
будет выполнена команда открытия вспомогательной
формы, если после обновления интерфейса она является доступной;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
в противном случае обновляется состав элементов
основной формы и выполняется ее отображение;</p>

<p class="MsoListBullet">&#9679; 
если на момент обновления интерфейса активной
формой была вспомогательная форма, открытая с помощью команды, не относящейся к
панели навигации формы, то вместо этой формы будет обновлен состав элементов
основной формы и выполнено ее отображение.</p>

<p class="MsoNormalCxSpFirst">Для
того чтобы обновить конкретную форму, следует либо заново открыть ее, либо
вызвать метод <span class="Term">УстановитьПараметрыФункциональныхОпцийФормы()</span>,
при этом вышеописанная последовательность действий отрабатывает только для той
формы, в контексте которой вызвана установка параметров функциональных опций
формы.</p>

<p class="MsoNormalCxSpMiddle">Параметры
не обязательно указывать все сразу, можно изменить значение конкретного
параметра или набора параметров выборочно. Но эффективнее осуществляется именно
групповая установка значений одним вызовом.</p>

<p class="MsoNormalCxSpMiddle">Для
получения значений параметров необходимо вызвать соответствующую функцию (<span class="Term">ПолучитьПараметрыФункциональныхОпцийИнтерфейса()</span>
или <span class="Term">ПолучитьПараметрыФункциональныхОпцийФормы()</span>),
которая вернет установленные параметры в виде структуры, где ключом будет выступать
имя параметра.</p>

<p class="MsoNormalCxSpLast">При
открытии форма автоматически использует параметры функциональных опций,
установленных для командного интерфейса.</p>

<a name="_ref215641659"></a><a name="_ref346539957"></a><a name="_ref370310958"></a><a id="TI000000236" class="bookmark" name="issogl2_5.5.11_определяемые_типы"><h3>5.5.11. Определяемые типы</h3></a>

<p class="MsoNormalCxSpFirst"><span class="Bold">Определяемый тип</span> –
это специальный объект конфигурации, который предназначен для упрощения и
повышения удобства внедрения подсистем при разработке прикладного решения. В
качестве примера можно рассмотреть универсальную подсистему, предназначенную
для хранения контактной информации. В состав этой подсистемы входит регистр
сведений, который хранит эту информацию. В этом регистре есть измерение,
которое указывает, для какого объекта хранится контактная информация. В
качестве значения измерения может выступать контрагент, собственная
организация, физическое лицо и т. д. Причем тип (с именем СправочникиОрганизацийИФизическихЛиц),
описывающий этот объект хранения, может встречаться не только в качестве типа
измерения регистра. В процессе внедрения прикладного решения состав такого типа
может изменяться – в него могут добавляться новые справочники или из его
состава могут исключаться «лишние» типы. Если вместо типа СправочникиОрганизацийИФизическихЛиц использовать
составной тип в каждом месте, где используется такая сущность, то придется
везде изменять состав типов. Это сложно и существует возможность забыть о
каком-либо реквизите с нужным составным типом. Если использовать определяемый тип,
то в процессе доработки прикладного решения будет необходимо изменить только состав
определяемого типа (и, естественно, все фрагменты прикладного кода, где этот
тип используется). Все реквизиты, для которых в качестве типа указан тип <span class="Term">СправочникиОрганизацийИФизическихЛиц</span>,
будут изменены автоматически.</p>

<p class="MsoNormalCxSpLast">Определяемый тип
обладает следующими особенностями:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Может быть составным;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Не может использоваться для указания типа
значения плана видов характеристик;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Не может входить в состав составного типа данных
другого реквизита;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Определяемый тип не может входить в состав
другого определяемого типа;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Определяемый тип не может входить в состав типа
следующих объектов:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
Признак учета плана счетов;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
Признак учета субконто плана счетов;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
Тип номера нумератора.</p>

<p class="MsoNormal">В состав определяемого типа могут входить
следующие типы:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Ссылочные типы: <span class="Term">СправочникСсылка</span>,
<span class="Term">ДокументСсылка</span>,
<span class="Term">ПеречислениеСсылка</span>,
<span class="Term">ПланВидовХарактеристикСсылка</span>,
<span class="Term">ПланСчетовСсылка</span>,
<span class="Term">ПланВидовРасчетаСсылка</span>,
<span class="Term">БизнесПроцессСсылка</span>,
<span class="Term">ТочкаМаршрутаБизнесПроцессаСсылка</span>,
<span class="Term">ЗадачаСсылка</span>,
<span class="Term">ПланОбменаСсылка</span>,
<span class="Term">ВнешнийИсточникДанныхКубТаблицаИзмеренияСсылка</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Объектные типы: <span class="Term">СправочникОбъект</span>,
<span class="Term">ДокументОбъект</span>,
<span class="Term">ПланВидовХарактеристикОбъект</span>,
<span class="Term">ПланСчетовОбъект</span>,
<span class="Term">ПланВидовРасчетаОбъект</span>,
<span class="Term">ОтчетОбъект</span>,
<span class="Term">ОбработкаОбъект</span>,
<span class="Term">БизнесПроцессОбъект</span>,
<span class="Term">ЗадачаОбъект</span>,
<span class="Term">ПланОбменаОбъект</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Наборы записей и связанные типы: <span class="Term">РегистрСведенийНаборЗаписей</span>,
<span class="Term">РегистрНакопленияНаборЗаписей</span>,
<span class="Term">РегистБухгалтерииНаборЗаписей</span>,
<span class="Term">РегистРасчетаНаборЗаписей</span>,
<span class="Term">ПерерасчетНаборЗаписей</span>,
<span class="Term">ВнешнийИсточникДанныхКубНаборЗаписей</span>,
<span class="Term">ПоследовательностьНаборЗаписей</span>,
<span class="Term">ВнешнийИсточникДанныхКубМенеджерЗаписи</span>,
<span class="Term">ВнешнийИсточникДанныхКубТаблицаИзмеренияОбъект</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Менеджеры объектов: <span class="Term">СправочникМенеджер</span>,
<span class="Term">ДокументМенеджер</span>,
<span class="Term">ПеречислениеМенеджер</span>,
<span class="Term">ПланВидовХарактеристикМенеджер</span>,
<span class="Term">ПланСчетовМенеджер</span>,
<span class="Term">ПланВидовРасчетаМенеджер</span>,
<span class="Term">ОтчетМенеджер</span>,
<span class="Term">ОбработкаМенеджер</span>,
<span class="Term">БизнесПроцессМенеджер</span>,
<span class="Term">ЗадачаМенеджер</span>,
<span class="Term">ПланОбменаМенеджер</span>,
<span class="Term">ЖурналДокументовМенеджер</span>,
<span class="Term">РегистрСведенийМенеджер</span>,
<span class="Term">РегистрНакопленийМенеджер</span>,
<span class="Term">РегистБухгалтерииМенеджер</span>,
<span class="Term">РегистРасчетаМенеджер</span>,
<span class="Term">КонстантаМенеджерЗначения</span>,
<span class="Term">КритерийОтбораМенеджер</span>,
<span class="Term">ВнешнийИсточникДанныхТаблицаМенеджер</span>,
<span class="Term">ВнешнийИсточникДанныхКубМенеджер</span>,
<span class="Term">ХранилищеНастроекМенеджер</span>,
<span class="Term">ВнешнийИсточникДанныхКубТаблицаИзмеренийМенеджер</span>,
<span class="Term">ПоследовательностьМенеджер</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Системные перечисления: <span class="Term">ВидДвиженияНакопления</span>,
<span class="Term">ВидСчета</span>,
<span class="Term">ВидДвиженияБухгалтерии</span>,
<span class="Term">ГоризонтальноеПоложение</span>,
<span class="Term">ВертикальноеПоложение</span>,
<span class="Term">РежимИзмененияРазмера</span>,
<span class="Term">ВидДанныхАнализа</span>,
<span class="Term">МетодКластеризации</span>,
<span class="Term">ТипЕдиницыИнтервалаВремениАнализаДанных</span>,
<span class="Term">ТипЗаполненияТаблицыРезультатаАнализаДанных</span>,
<span class="Term">ТипИспользованияЧисловыхЗначенийАнализаДанных</span>,
<span class="Term">ТипИсточникаДанныхПоискаАссоциаций</span>,
<span class="Term">ТипКолонкиАнализаДанныхДеревоРешений</span>,
<span class="Term">ТипКолонкиАнализаДанныхКластеризация</span>,
<span class="Term">ТипКолонкиАнализаДанныхОбщаяСтатистика</span>,
<span class="Term">ТипКолонкиАнализаДанныхПоискАссоциации</span>,
<span class="Term">ТипКолонкиАнализаДанныхПоискаПоследовательностей</span>,
<span class="Term">ТипКолонкиМоделиПрогноза</span>,
<span class="Term">ТипКерыРасстоянияАнализаДанных</span>,
<span class="Term">ТипОтсеченияПравилАссоциации</span>,
<span class="Term">ТипСтандартизацииАнализаДанных</span>,
<span class="Term">ТипУпрощенияДереваРешений</span>,
<span class="Term">ТипУпорядочиванияПравилАссоциацииАнализаДанных</span>,
<span class="Term">ТипУпорядочиванияШаблоновПоследовательностейАнализаДанных</span>;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Прочие типы: <span class="Term">Произвольный</span>,
<span class="Term">Число</span>,
<span class="Term">Строка</span>, <span class="Term">Дата</span>, <span class="Term">Булево</span>,
<span class="Term">ХранилищеЗначения</span>,
<span class="Term">УникальныйИдентификатор</span>,
<span class="Term">ДинамическийСписок</span>,
<span class="Term">ТаблицаЗначений</span>,
<span class="Term">ДеревоЗначений</span>,
<span class="Term">СписокЗначений</span>,
<span class="Term">ФорматированнаяСтрока</span>,
<span class="Term">ДвоичныеДанные</span>,
<span class="Term">ТабличныйДокумент</span>,
<span class="Term">ФорматированныйДокумент</span>,
<span class="Term">ТекстовыйДокумент</span>,
<span class="Term">NULL</span>,
<span class="Term">ФиксированныйМассив</span>,
<span class="Term">ФиксированноеСоответствие</span>,
<span class="Term">ФиксированнаяСтруктура</span>,
<span class="Term">КомпоновщикНастроекКомпоновкиДанных</span>,
<span class="Term">ГрафическаяСхема</span>,
<span class="Term">ГеографическаяСхема</span>,
<span class="Term">Диаграмма</span>,
<span class="Term">ДиаграммаГанта</span>,
<span class="Term">Дендрограмма</span>,
<span class="Term">ОписаниеТипов</span>,
<span class="Term">Картинка</span>,
<span class="Term">Цвет</span>,
<span class="Term">Шрифт</span>, <span class="Term">СтандартнаяДатаНачала</span>,
<span class="Term">СтандартныйПериод</span>;</p>

<p class="MsoNormalCxSpFirst">При выполнении проверки конфигурации или при
проверке перед обновлением конфигурации базы данных проверяется, что состав
определяемого типа допустим в каждом конкретном месте использования. Так, один
и тот же определяемый тип может быть использован в качестве типа одного объекта
конфигурации и не может – для другого.</p>

<p class="MsoNormalCxSpLast">Для описания типа на встроенном языке
следует использовать конструкцию вида <span class="Term">ОпределяемыйТип.&lt;ИмяОпределяемогоТипа&gt;</span>.</p>

<p class="Note"><span class="Note">Примечание.</span> Если требуется
использовать прикладное решение с младшими версиями системы «1С:Предприятие»
(младше версии 8.3.3), то следует удалить из конфигурации все определяемые
типы.</p>

<a name="_ref351372404"></a><a name="_ref351372400"></a><a name="_ref351133493"></a><a name="_ref351133491"></a><a id="TI000000237" class="bookmark" name="issogl2_5.5.12_хранилища_настроек"><h3>5.5.12. Хранилища настроек</h3></a>

<p class="MsoNormalCxSpFirst">Для сохранения информации о настройках
пользователя, которые должны сохраняться между сеансами работы, в платформе
реализованы хранилища настроек.</p>

<p class="MsoNormalCxSpLast">Существует два вида хранилищ настроек:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Bold">Стандартное хранилище</span> –
хранилище, используемое системой по умолчанию и хранящее данные в системных
таблицах информационной базы.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Bold">Хранилища настроек</span> –
специальные объекты метаданных, которые описывают хранение данных в некотором
объекте информационной базы. Например, в этом объекте может быть описана работа
с настройками, которые хранятся в справочнике.</p>

<p class="MsoNormal">Платформа использует следующие хранилища:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Bold">Системное хранилище</span> –
в данное хранилище система сохраняет все возможные настройки, которые нужны для
работы платформы. К данным настройкам относятся настройки размеров форм,
настройки печати табличного документа и т. п. Полный перечень настроек,
сохраняемых в системном хранилище, см. <A href="/db/content/v8310doc/src/руководство разработчика/приложение 4. перечень автоматически сохраняемых настроек.htm?_=1496848987#_ref216071411">здесь</a>. В качестве системного хранилища настроек всегда
используется стандартное хранилище настроек. То есть данные системного хранилища
всегда сохраняются в системной таблице информационной базы.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Bold">Хранилище общих настроек</span> –
данное хранилище предназначено для хранения различных настроек прикладного
решения. Платформа самостоятельно не записывает в данное хранилище никаких
настроек. Данное хранилище должен использовать разработчик из встроенного
языка, для того чтобы выполнять сохранение/восстановление прикладных настроек
пользователя.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Bold">Хранилище пользовательских
настроек отчетов</span> – в данное хранилище помещаются пользовательские настройки
отчетов.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Bold">Хранилище вариантов отчетов</span> –
в данное хранилище помещаются варианты отчетов.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Bold">Хранилище настроек данных форм</span> –
в это хранилище сохраняются данные форм. Этим хранилищем можно пользоваться,
например, для сохранения реквизитов обработок. При этом можно выбрать
индивидуальное хранилище для каждого отчета и обработки.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Bold">Хранилище пользовательских
настроек динамического списка</span> – в это хранилище сохраняются
пользовательские настройки динамического списка.</p>

<p class="MsoNormalCxSpFirst">При разработке конфигурации имеется
возможность определить собственные хранилища настроек для всех хранилищ, кроме
системного хранилища. Для этого необходимо создать объект хранилища настроек в
соответствующей ветке дерева метаданных и затем указать его в нужном свойстве
конфигурации. Свойства объекта <span class="Interface">Конфигурация</span> имеют те же имена, что и вышеперечисленные
хранилища.</p>

<p class="MsoNormalCxSpMiddle">Данные хранилищ могут храниться как в системной
таблице информационной базы, так и в некотором специальном объекте информационной
базы, например, в справочнике или регистре сведений. Например, можно создать в
конфигурации объект хранилища настроек и указать в свойстве конфигурации, что
данное хранилище следует использовать для хранения настроек отчетов. Таким
образом, настройки отчетов будут сохраняться не в системной таблице, а в
некотором объекте, например, в справочнике, что дает возможность организовать
работу с едиными настройками отчетов, реализовать систему прав, обмен настройками
и т. п.</p>

<p class="MsoNormalCxSpLast">Создавать собственное хранилище имеет смысл
в тех случаях, когда необходима особая структура хранения настроек, необходимы
специальные механизмы управления настройками, требуется обмен настройками в
рамках распределенной базы данных (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 15. механизмы обмена данными.htm?_=1496848987#_ref220475853">здесь</a>) и других аналогичных случаях.</p>

<p class="Note">Примечание.
Для хранения настроек рекомендуется выбирать такие объекты, для которых
системой поддерживается способ идентификации, при котором идентифицирующий
реквизит можно преобразовать в строку и обратно без потери данных. В качестве
примера можно привести справочник и стандартный реквизит <span class="Term">Код</span>,
уникальный во всем справочнике.</p>

<a id="TI000000238" class="bookmark" name="issogl3_5.5.12.1_общие_принципы_работы_хранилища_настроек"><h4>5.5.12.1. Общие принципы работы хранилища настроек</h4></a>

<p class="MsoNormalCxSpFirst">Объект метаданных <span class="Term">ХранилищеНастроек</span>
предназначен для обеспечения хранения прикладных настроек конфигурации. За счет
реализации обработчиков событий и создания форм объекта выполняется модификация
механизма работы с настройками таким образом, что изменяется место хранения
настроек (вместо системных таблиц используются объекты конфигурации, которые
создал разработчик) и визуальные механизмы работы с настройками.</p>

<p class="MsoNormalCxSpMiddle">В конфигурации может быть определено
произвольное количество хранилищ настроек.</p>

<p class="MsoNormalCxSpLast">Хранилище настроек может использоваться как
только для программной работы, так и для программной и интерактивной работы. В
первом случае для обеспечения необходимой функциональности требуется
обязательная реализация обработчиком модуля объекта <span class="Term">ХранилищеНастроек</span>:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Term">ОбработкаСохранения</span> – содержит реализацию
метода <span class="Term">Сохранить()</span>.
В данном обработчике необходимо выполнить сохранение настройки в некоторый объект.
Например, в элемент справочника.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Term">ОбработкаЗагрузки</span> – содержит реализацию
метода <span class="Term">Загрузить()</span>.
В данном обработчике необходимо получить настройки из некоторого объекта.
Например, из элемента справочника.</p>

<p class="Note"><span class="Note">ВНИМАНИЕ</span>! Если не реализовать тот
или иной обработчик, то будет недоступно выполнение действия, которое обработчик
реализует. Например, если не реализовать обработчик <span class="Term">ОбработкаСохранения</span>,
будет недоступно сохранение настроек.</p>

<p class="MsoNormalCxSpFirst">В процессе разработки хранилища разработчик
самостоятельно определяет, каким образом будет идентифицироваться объект
хранилища, тем самым определяя тип параметра. Например, если настройки сохраняются
в справочнике, то в качестве ключа настройки можно использовать поле <span class="Term">Код</span>
или значение <span class="Term">Ссылка</span>
(элемента справочника).</p>

<p class="MsoNormalCxSpLast">Если для работы с настройками требуется
интерактивность (формы сохранения и восстановления настроек), то необходимо реализовать
формы сохранения и восстановления настроек и заполнить соответствующие свойства
объекта <span class="Term">ХранилищеНастроек</span>
(<span class="Interface">Основная форма сохранения</span> и <span class="Interface">Основная форма загрузки</span>).</p>

<p class="Note"><span class="Note">ВНИМАНИЕ!</span> Реализация форм
сохранения и восстановления настроек является обязательной для выполнения интерактивных
операций. Программное сохранение и восстановление настроек возможно и без реализации
этих форм.</p>

<p class="MsoNormalCxSpFirst">Когда пользователь применяет команды
сохранения или загрузки настроек, система получает соответствующую форму
объекта хранилища настроек и отображает ее на экране. Например, при сохранении
настроек отчета система будет использовать форму сохранения того объекта
метаданных, который указан в качестве хранилища настроек отчетов (непосредственно
у самого отчета или у всей конфигурации). При этом форме будут переданы параметры,
более подробную информацию о которых можно получить в описании объекта <span class="Term">ОписаниеНастроек</span>
в синтакс-помощнике.</p>

<p class="MsoNormalCxSpMiddle">При создании формы с помощью конструктора необходимые
параметры будут автоматически добавлены в список параметров формы.</p>

<p class="MsoNormalCxSpMiddle">В формах следует использовать переданные
параметры и соответствующим образом фильтровать список настроек. Так, следует
отображать только настройки для указанного в параметре <span class="Term">КлючОбъекта</span>
объекта настройки (например, отчета).</p>

<p class="MsoNormalCxSpLast">Если пользователь выбрал настройку, то
результатом работы формы должно быть значение типа <span class="Term">ВыборНастроек</span>.
В этом значении, в свойстве <span class="Term">КлючНастроек</span>,
должен находиться ключ выбранной настройки (например, код элемента справочника
или другой, идентифицирующий настройку параметр), а в свойстве <span class="Term">ДополнительныеСвойства</span> –
дополнительная информация, которую пользователь мог указать в форме:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">Закрыть<span class="operator">(</span><span class="keyword">Новый</span> ВыборНастроек<span class="operator">(</span>КлючСохраняемойНастройки<span class="operator">)</span><span class="operator">)</span><span class="operator">;</span></pre>

<p class="Note"><span class="Note">Внимание!</span> Не поддерживается
сохранение настройки в стандартном хранилище настроек, если длина ключа объекта
превышает 256 символов; длина ключа настроек превышает 128 символов; длина имени
пользователя превышает 64 символа.</p>

<a id="TI000000239" class="bookmark" name="issogl3_5.5.12.2_создание_объекта_метаданных"><h4>5.5.12.2. Создание объекта метаданных</h4></a>

<p class="Regularbeforepicture">Для создания <span class="Interface">Хранилища настроек</span> следует создать одноименный объект
конфигурации. Это можно сделать в ветке <span class="Interface">Общие</span>, пункт <span class="Interface">Хранилища настроек</span>.</p>

<p class="Picture"><IMG src="_img/img00114.gif?_=1496848987" WIDTH="297" ALT HEIGHT="307"></p>

<p class="MsoCaption">Рис. 115. Создание хранилища
настроек</p>

<a id="TI000000240" class="bookmark" name="issogl3_5.5.12.3_стандартное_хранилище_настроек"><h4>5.5.12.3. Стандартное хранилище настроек</h4></a>

<p class="MsoNormal">Стандартное хранилище настроек представляется
во встроенном языке объектом <span class="Term">СтандартноеХранилищеНастроекМенеджер</span>.
Данный объект реализует тот же набор методов, что и объект <span class="Term">ХранилищеНастроекМенеджер</span>,
и дополнительно реализует методы:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Term">ПолучитьСписок()</span> – метод получения списка
настроек для выбранного объекта настройки;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Term">Удалить()</span> – удаление определенной
настройки выбранного объекта настройки.</p>

<p class="MsoNormalCxSpFirst">Стандартное хранилище сохраняет настройки в
системных таблицах информационной базы.</p>

<p class="MsoNormalCxSpMiddle">В качестве ключа объекта настройки и в
качестве ключа настройки системное хранилище настроек принимает строку.</p>

<p class="MsoNormalCxSpLast">В качестве настроек системное хранилище
принимает любое значение, которое может быть помещено в хранилище значений.</p>

<p class="NoteCxSpFirst">Примечание. При использовании методов <span class="Term">Сохранить()</span>,
<span class="Term">Удалить()</span>
и <span class="Term">УстановитьОписание()</span>
объекта <span class="Term">СтандартноеХранилищеНастроекМенеджер</span>
следует учитывать, что если объект, к которому относятся настройки (например,
форма), в текущем сеансе уже использовался, то изменения произойдут только в
следующем сеансе.</p>

<p class="NoteCxSpLast"><span class="Note">Совет.</span> При
существенном программном изменении настроек (например, при копировании настроек
от одного пользователя другому) рекомендуется предложить пользователю выполнить
перезапуск клиентского приложения.</p>

<a id="TI000000241" class="bookmark" name="issogl3_5.5.12.4_сохранение_настроек_форм"><h4>5.5.12.4. Сохранение настроек форм</h4></a>

<p class="MsoNormal">Разработчик может управлять сохранением
данных форм в настройках. Для этого при разработке формы ему необходимо воспользоваться
следующими свойствами формы:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">Сохранение данных формы в
настройках</span> – при помощи данного свойства разработчик формы может
включить возможность сохранения данных формы (с возможностью выбора настройки,
в которую будут сохраняться данные). Если у формы включена необходимость сохранения,
то форма предоставляет команды сохранения/загрузки настроек.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Interface">Автоматическое сохранение
данных в настройках</span> – указывает необходимость автоматического
сохранения настроек при закрытии формы и восстановлении при открытии формы. При
этом не важно, используется или нет список настроек.</p>

<p class="MsoNormalCxSpFirst">Если для формы установлена возможность
сохранения данных, то необходимо указать, какие реквизиты формы должны сохраняться
(колонка <span class="Interface">Сохранение</span> на закладке <span class="Interface">Реквизиты</span> редактора формы).</p>

<p class="MsoNormalCxSpLast">При сохранении настроек в качестве ключа
объекта используется полное имя формы. В настройках сохраняется объект типа <span class="Term">Соответствие</span>, в котором в качестве ключей
находятся пути к сохраняемым реквизитам, а в качестве значений – их
(реквизитов) значения.</p>

<a name="_ref202163968"></a><a id="TI000000242" class="bookmark" name="issogl3_5.5.12.5_сохранение_настроек_отчетов"><h4>5.5.12.5. Сохранение настроек отчетов</h4></a>

<p class="MsoNormalCxSpFirst">У объектов <span class="Interface">Отчет</span> и <span class="Interface">Внешний отчет</span> имеются свойства метаданных <span class="Interface">Хранилище вариантов</span> и <span class="Interface">Хранилище настроек</span>. В данных свойствах указывается, в
какие хранилища нужно сохранять варианты и настройки отчета соответственно. Если хранилища не указаны, то используются хранилища,
указанные в свойствах конфигурации. Если в свойствах конфигурации также не
указаны конкретные объекты <span class="Term">ХранилищеНастроек</span>, то используется системное
хранилище.</p>

<p class="MsoNormalCxSpMiddle">Форма отчета предоставляет команды
сохранения и загрузки вариантов и настроек отчетов.</p>

<p class="MsoNormalCxSpLast">При необходимости сохранять в настройках
компоновки данных или пользовательских настройках компоновки данных некоторую
дополнительную информацию можно воспользоваться свойствами <span class="Term">ДополнительныеСвойства</span>
объектов <span class="Term">НастройкиКомпоновкиДанных</span>
и <span class="Term">ПользовательскиеНастройкиКомпоновкиДанных</span>.
Свойство <span class="Term">ДополнительныеСвойства</span>
представляет собой объект типа <span class="Term">Структура</span>.</p>

<a name="_ref351372433"></a><a id="TI000000243" class="bookmark" name="issogl3_5.5.12.6_сохранение_настроек_динамических_списков"><h4>5.5.12.6. Сохранение настроек динамических списков</h4></a>

<p class="MsoNormalCxSpFirst">Пользовательские настройки динамических
списков сохраняются в хранилище, которое указано в свойствах конфигурации (<span class="Term">ХранилищеПользовательскихНастроекДинамическихСписков</span>).
Если в свойствах конфигурации не указано хранилище настроек, то используется
системное хранилище.</p>

<p class="MsoNormalCxSpMiddle">Возможностью автоматического сохранения
пользовательских настроек динамического списка управляет свойство <span class="Interface">Автоматическое сохранение пользовательских настроек</span>
реквизита формы типа <span class="Term">ДинамическийСписок</span>.
Когда свойство установлено в значение <span class="Term">Истина</span>,
пользовательские настройки автоматически сохраняются при закрытии формы и
загружаются при ее открытии.</p>

<p class="MsoNormalCxSpMiddle">Форма динамического списка предоставляет
команды сохранения и загрузки пользовательских настроек. Также динамический
список предоставляет команду для установки стандартных настроек. В случае
выполнения данной команды в динамический список попадут настройки, которые
находятся в свойстве <span class="Term">Список.КомпоновщикНастроек.Настройки</span>.</p>

<p class="MsoNormalCxSpLast">Для динамического списка возможен вызов
события <span class="Term">ПриОбновленииСоставаПользовательскихНастроекНаСервере</span>
в следующих случаях:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
При открытии формы динамического списка;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
После завершения редактирования пользовательских
настроек, если изменился состав настроек.</p>

<a id="TI000000244" class="bookmark" name="issogl3_5.5.12.7_порядок_разработки_хранилища_настроек"><h4>5.5.12.7. Порядок разработки хранилища настроек</h4></a>

<p class="MsoNormal">Далее приводится рекомендованный порядок
разработки хранилищ настроек:</p>

<p class="MsoListNumberCxSpFirst">1. 
Определяется, какое хранилище (см. начало раздела)
будет использоваться. Например, будет реализовано хранилище настроек данных
форм конфигурации.</p>

<p class="MsoListNumberCxSpMiddle">2.  Определяется
перечень объектов метаданных, которые будут использовать это хранилище, и
определяется перечень хранимой в хранилище информации, ее структура и типы. Эта
информация поможет нам правильно выбрать объект метаданных, в данных которого
будут храниться наши настройки.</p>

<p class="MsoListNumberCxSpMiddle">3.  На
основании информации из п. 2 создается объект (и его структура), который
будет хранить настройки. Пусть наши настройки хранятся в элементах справочника.
Так как в нашем случае структура сохраняемых данных крайне разнородна, то нет
смысла реализовывать отдельный набор реквизитов для хранения настроек каждой
формы. Поэтому настройки будут храниться в реквизите справочника типа <span class="Term">ХранилищеЗначения</span>.</p>

<p class="MsoListNumberCxSpMiddle">4.  Создается
объект типа <span class="Term">ХранилищеНастроек</span>,
и для него выполняется реализация форм сохранения и загрузки. Тем самым
обеспечивается интерактивность при сохранении и восстановлении настроек.</p>

<p class="MsoListNumberCxSpMiddle">5.  Для
созданного объекта <span class="Term">ХранилищеНастроек</span>
выполняется реализация обработчиков событий, связанных с сохранением и
восстановлением настроек. Если не выполнить эту операцию, то не будут
происходить собственно операции чтения/записи настроек. Для решения этой задачи
нужно реализовать обработчики событий <span class="Term">ОбработкаСохранения</span>
и <span class="Term">ОбработкаЗагрузки</span>
в модуле созданного объекта типа <span class="Term">ХранилищеНастроек</span>.</p>

<p class="MsoListNumberCxSpMiddle">6.  В
объектах, выделенных в п. 2 (или в свойствах конфигурации), заполняются
соответствующие свойства, тем самым указывая объектам, в каких хранилищах будут
храниться настройки. В нашем примере необходимо заполнить свойство конфигурации
<span class="Interface">Хранилище настроек данных форм</span> ссылкой на объект,
созданный на шаге 4.</p>

<p class="MsoListNumberCxSpLast">7.  При
необходимости выполняется реализация обработчиков событий, связанных с
сохранением и восстановлением настроек в тех прикладных объектах, где это
необходимо.</p>

<br>

<p class="MsoNormal"><a name="_ref223166996"> </a></p>

<a name="_ref310422392"></a><a id="TI000000245" class="bookmark" name="issogl3_5.5.12.8_работа_с_хранилищем_настроек_из_встроенного_языка"><h4>5.5.12.8. Работа с хранилищем настроек из встроенного языка</h4></a>

<p class="MsoNormal">В
данном примере рассматривается копирование настроек текущего пользователя
другим пользователям системы. В качестве источника настроек используется <span class="Term">ХранилищеСистемныхНастроек</span>.</p>

<p class="Note"><span class="Note">Примечание.</span> Пример, приведенный ниже, не является
законченным. Он предназначен для демонстрации работы с стандартным хранилищем
настроек.</p>

<p class="MsoNormal">Список
имен пользователей передается параметром процедуры <span class="Term">СкопироватьНастройки()</span> в виде массива.</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">Процедура</span> СкопироватьНастройки<span class="operator">(</span>СписокПользователей<span class="operator">)</span>
    ОписаниеНастроек <span class="operator">=</span> <span class="keyword">Новый</span> ОписаниеНастроек<span class="operator">;</span>
    ВыборкаНастроек <span class="operator">=</span> ХранилищеСистемныхНастроек<span class="operator">.</span><span class="keyword">Выбрать</span><span class="operator">(</span><span class="operator">)</span><span class="operator">;</span>
    <span class="keyword">Пока</span> ВыборкаНастроек<span class="operator">.</span>Следующий<span class="operator">(</span><span class="operator">)</span> <span class="keyword">Цикл</span>
        <span class="keyword">Для</span> <span class="keyword">каждого</span> Пользователь <span class="keyword">Из</span> СписокПользователей <span class="keyword">Цикл</span>
            ОписаниеНастроек<span class="operator">.</span>Представление <span class="operator">=</span> ВыборкаНастроек<span class="operator">.</span>Представление<span class="operator">;</span>
            ХранилищеНастроек<span class="operator">.</span>Сохранить<span class="operator">(</span>ВыборкаНастроек<span class="operator">.</span>КлючОбъекта<span class="operator">,</span> ВыборкаНастроек<span class="operator">.</span>КлючНастроек<span class="operator">,</span> ВыборкаНастроек<span class="operator">.</span>Настройки<span class="operator">,</span> ОписаниеНастроек<span class="operator">,</span> Пользователь<span class="operator">)</span><span class="operator">;</span>
        <span class="keyword">КонецЦикла</span><span class="operator">;</span>
    <span class="keyword">КонецЦикла</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span></pre>

<a name="_ref425411631"></a><a id="TI000000246" class="bookmark" name="issogl2_5.5.13_общие_формы"><h3>5.5.13. Общие формы</h3></a>

<p class="MsoNormalCxSpFirst">Механизм
общих форм позволяет использовать формы, доступные из любого модуля текущей
конфигурации.<a name="_toc15017185"> Подробно о порядке работы с редактором форм см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 27. инструменты разработки.htm?_=1496848987#_ref214865442">здесь</a>.</a></p>

<p class="MsoNormalCxSpMiddle">Если необходимо разместить команду открытия
общей формы в командном интерфейсе, то сделать это можно с помощью свойства <span class="Interface">Использовать стандартные команды</span>. Команда открытия общей
формы будет размещена в командном интерфейсе тех подсистем, которым принадлежит
общая форма. Если общая форма входит в состав функциональной опции и
функциональная опция отключена, то стандартная команда общей формы не
отображается в командном интерфейсе.</p>

<p class="MsoNormalCxSpLast">Если создается общая форма, которая будет
использоваться в качестве формы отчета, настроек отчета или варианта, то не рекомендуется
для такой формы устанавливать свойство<span class="Interface"> Использовать стандартные команды</span>.</p>

<a name="_ref215489378"></a><a id="TI000000247" class="bookmark" name="issogl2_5.5.14_общие_команды"><h3>5.5.14. Общие команды</h3></a>

<p class="MsoNormalCxSpFirst">В
данной ветке разработчик может создавать команды, не имеющие объектной
специфики или служащие для выполнения действий с объектами, которые не
используют стандартные команды.</p>

<p class="MsoNormalCxSpLast"><a name="_ref215489735">Описание командного интерфейса см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 6. командный интерфейс.htm?_=1496848987#_ref441854321">здесь</a>. Описание команд см. <a href="#_ref254188850">здесь</a>.</a></p>

<a id="TI000000248" class="bookmark" name="issogl2_5.5.15_группы_команд"><h3>5.5.15. Группы команд</h3></a>

<p class="MsoNormal">В
данной ветке разработчик может создавать собственные группы команд. Созданная
группа будет размещаться в той части командного интерфейса, который определен
свойством команды <span class="Interface">Категория</span>.
Группа команд может быть размещена:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
в панели навигации,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
панели навигации формы,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
панели действий,</p>

<p class="MsoListBulletCxSpLast">&#9679; 
командной панели формы.</p>

<p class="MsoNormal">Описание командного
интерфейса см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 6. командный интерфейс.htm?_=1496848987#_ref441854339">здесь</a>. Описание команд см. <a href="#_ref215489389">здесь</a>.</p>

<a id="TI000000249" class="bookmark" name="issogl2_5.5.16_общие_макеты"><h3>5.5.16. Общие макеты</h3></a>

<p class="MsoNormalCxSpFirst">Механизм
общих макетов (печатных форм, форм отчетов, справочных данных и т. д.)
позволяет создавать шаблоны печатных форм, доступные из любого модуля текущей
конфигурации.</p>

<p class="MsoNormalCxSpLast">Подробно
о порядке работы с редактором табличных документов см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 27. инструменты разработки.htm?_=1496848987#_ref216072559">здесь</a>.</p>

<a name="_ref289185509"></a><a name="_ref397005390"></a><a name="_ref397005389"></a><a id="TI000000250" class="bookmark" name="issogl2_5.5.17_общие_картинки"><h3>5.5.17. Общие картинки</h3></a>

<a id="TI000001896" class="bookmark" name="issogl3_5.5.17.1_общая_информация"><h4>5.5.17.1. Общая информация</h4></a>

<p class="MsoNormalCxSpFirst">Конфигуратор
позволяет включать в конфигурацию графические изображения – картинки.
Картинки можно размещать в некоторых элементах управления, в формах, в макетах,
а также обращаться к ним при помощи встроенного языка системы «1С:Предприятия».</p>

<p class="MsoNormalCxSpMiddle">Прикладное
решение может работать на устройствах с различными экранами: размер,
разрешение, плотность точек. Полность точек характеризуется понятием <span class="Bold">dpi</span> (или <span class="Bold">ppi</span>) – количеством
точек на дюйм размера экрана. Чем больше значение dpi, тем меньшее физическое
место будет занимать картинка с фиксированными физическими размерами. Кроме
того, картинка может отображаться в форме, для которой указан какой-либо
масштаб, т. е. формат может быть больше или меньше своего базового
размера.</p>

<p class="MsoNormalCxSpMiddle">Чтобы
картинка лучше соответствовала различным экранам, существует возможность
указывать картинку набором, в котором каждая картинка соответствует
определенному интервалу dpi экрана мобильного устройства. При этом платформа
автоматически подбирает нужную картинку (из набора), опираясь на параметры
конкретного физического устройства. Прикладной программист не должен
предпринимать никаких действий, чтобы была показана нужная картинка.</p>

<p class="MsoNormalCxSpLast">Набор
картинок представляет собой архив zip-формата, который содержит картинки,
описание которых приводится в файле манифеста (<span class="Interface">manifest.xml</span>),
расположенной в этом же архиве (подробнее см. <a href="#_ref469411751">здесь</a>). Картинка может относиться к одному из вариантов
разрешения экрана:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
bldpi – масштаб 85%;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
lpdi – масштаб 100%, для мобильных
устройств – разрешение менее 140 dpi;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
aldpi – масштаб 125%;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
mdpi – масштаб 150%, для мобильных
устройств – разрешение от 140 до 180 dpi;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
amdpi – масштаб 175%;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
hdpi – масштаб 200%, для мобильных
устройств – разрешение от 180 до 270 dpi;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
xdpi – масштаб 300%, для мобильных
устройств – разрешение более 270 dpi;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
udpi – масштаб 400%.</p>

<p class="MsoNormal">Имя
каждой картинки может быть любым, а соотношение между именем картинки и
разрешением указывается в манифесте. Соотношение размеров картинок в архиве
можно рассчитать, базируясь на размере картинки для масштаба 100%. Так, если
при масштабе 100% размер картинки равен 16 точек, то можно получить следующий
набор размеров картинок для разных масштабов отображения:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
bldpi: 16*0.85 = 14 точек;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
lpdi: 16*1.00 = 16 точек;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
aldpi: 16*1.25 = 20 точек;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
mdpi: 16*1.50 = 24 точки;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
amdpi: 16*1.75 = 28 точек;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
hdpi: 16*2.00 = 32 точки;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
xdpi: 16*3.00 = 48 точек;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
udpi: 16*4.00 = 64 точки.</p>

<p class="MsoNormalCxSpFirst">Также
в архиве могут находиться так называемые шаблонные картинки. Это картинки,
информативная часть которых присутствует только в альфа-канале модели RGBA.
Значения остальных каналов в такой картинке должны формировать белый цвет
(R=255, G=255, B=255). Шаблонную картинку рекомендуется формировать в формате
PNG (32 бита на пиксель). При отображении такой картинки поле, отведенное под
картинку, будет заполняться текущим цветом фона, а цветом текста (с соответствующей
интенсивностью) будут отображаться те места картинки, для которых в альфа-канале
установлены значения, отличающиеся от полной прозрачности (A=0).</p>

<p class="MsoNormalCxSpMiddle">В
архиве обязательно должна присутствовать картинка для разрешения ldpi (<span class="Bold">базовая</span> картинка). Остальные картинки являются необязательными.
В случае отсутствия нужной картинки, система будет использовать картинку,
параметры которой максимально близки к треуемым.</p>

<p class="MsoNormalCxSpMiddle">Если
картинку планируется использовать в качестве пиктограммы в меню, панели
инструментов, табличном документе и т. п., важно задать ей правильный
размер, чтобы она отображалась без искажений.</p>

<p class="MsoNormalCxSpLast">Рекомендуемый
размер картинок для масштаба отображения 100%:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
для пиктограмм – не более <span class="Bold">16x16</span>
точек;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
для использования в табличном поле – не
более <span class="Bold">14x14</span> точек;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
в качестве картинки кнопки выбора поля
редактирования – не более <span class="Bold">9x9</span> точек;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
для картинки, которая будет использована в
качестве представления подсистемы – не более <span class="Bold">48x48</span>
точек.</p>

<p class="Note"><span class="Note">Совет.</span>
Если картинку предполагается использовать в нескольких местах, ее размер
разумно ограничить меньшим значением.</p>

<a id="TI000001897" class="bookmark" name="issogl3_5.5.17.2_редактирование_картинки"><h4>5.5.17.2. Редактирование картинки</h4></a>

<p class="MsoNormal">Для
работы с картинками предназначено окно <span class="Interface">Библиотека картинок</span>.
Для его вызова в окне <span class="Interface">Конфигурация</span> нужно
указать ветвь <span class="Interface">Общие картинки</span>
и в контекстном меню выбрать пункт <span class="Interface">Все картинки</span>.</p>

<p class="Regularbeforepicture">На
экран выводится окно ведения списка картинок (см. <a href="#_ref213675787">рис.116</a>).</p>

<p class="Picture"><IMG src="_img/img00115.gif?_=1496848987" WIDTH="392" ALT HEIGHT="271"></p>

<p class="MsoCaption"><a name="_ref213675787">Рис. </a>116. Библиотека
картинок</p>

<p class="MsoNormalCxSpFirst">Для
добавления новой картинки следует нажать кнопку <span class="Interface">Добавить</span>. На
экран выводится окно, в котором можно выбрать картинку из файла или открыть
редактор картинок и создать новую картинку, а также выбрать или изменить для
картинки прозрачный фон. Для выбора готовой картинки нужно нажать кнопку <span class="Interface">Выбрать из файла</span>
и выбрать файл, в котором расположена подготовленная заранее картинка или их
набор. Система «1С:Предприятие» позволяет использовать картинки форматов <span class="Interface">BMP</span>, <span class="Interface">GIF</span>, <span class="Interface">JPG</span>, <span class="Interface">PNG</span>, <span class="Interface">TIFF</span>, <span class="Interface">ICO</span>, <span class="Interface">SVG</span>, метафайлы (<span class="Interface">WMF</span>, <span class="Interface">EMF</span>) или наборы картинок в
zip-архиве (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 25. разработка решений для мобильной платформы.htm?_=1496848987#_ref378865284">здесь</a>).</p>

<p class="MsoNormalCxSpMiddle">Для картинок формата <span class="Interface">gif</span> поддерживаются расширения <span class="Interface">NETSCAPE2.0</span> и <span class="Interface">ANIMEXTS1.0</span>. Другие расширения не поддерживаются и
поведение системы в этом случае не определено.</p>

<p class="MsoNormalCxSpLast">Для
картинок формата <span class="Interface">SVG</span>
игнорируются следующие элементы:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Анимация, java-script и любая интерактивность, в
том числе css-свойства связанные с интерактивностью, например псевдокласс <span class="Term">:hover</span>.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Свойства стилей:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
<span class="Term">color-interpolation</span>;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
<span class="Term">color-rendering</span>.</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Маркеры для пути с нулевой длиной.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Фильтр-примитив <span class="Term">feTile</span>.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Элементы встроенных шрифтов:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
<span class="Term">font</span>,</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
<span class="Term">altGlyph</span>,</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
<span class="Term">altGlyphDef</span>,</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
<span class="Term">altGlyphItem</span>,</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
<span class="Term">glyphRef</span>.</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Свойство <span class="Term">enable-background</span>.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Ссылки на внешние ресурсы.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Для элемента <span class="Term">image</span> не поддерживается относительный путь к
файлу изображения.</p>

<p class="Note"><span class="Note">Совет.</span>
Для картинок, которые будут использоваться в качестве пиктограмм в интерфейсе
(см. рекомендованные размеры картинок в начале раздела), рекомендуется
использовать форматы, поддерживающие сжатие без потерь (<span class="Interface">PNG</span> и <span class="Interface">GIF</span>), для того чтобы избежать
искажения и минимизировать трафик между клиентом и сервером.</p>

<p class="Regularbeforepicture">Нужно
задать имя, по которому данная картинка будет выбираться средствами встроенного
языка.</p>

<p class="Picture"><IMG src="_img/img00116.gif?_=1496848987" WIDTH="388" ALT HEIGHT="431"></p>

<p class="MsoCaption">Рис.
117. Свойства картинки</p>

<p class="MsoNormalCxSpFirst">Чтобы
картинка при вставке хорошо вписывалась в элемент управления или форму,
желательно установить ей прозрачный фон. Для этого в качестве цвета фона при
редактировании картинки достаточно выбрать любой не используемый в картинке
цвет, сформировать изображение и сохранить картинку. Для существующей картинки
можно указать любой цвет. Благодаря установленной прозрачности данного цвета
сквозь него становятся видны детали той части формы, которую закрывает область
картинки.</p>

<p class="MsoNormalCxSpMiddle">Для
установки прозрачного фона нужно нажать кнопку <span class="Interface">Установить прозрачный
фон</span>. Указатель мыши изменит вид. Подвести курсор к той части картинки,
цвет которой нужно сделать прозрачным, и щелкнуть левой кнопкой мыши. Выбранный
цвет становится прозрачным.</p>

<p class="MsoNormalCxSpMiddle">Для
снятия прозрачности следует нажать кнопку <span class="Interface">Убрать прозрачность</span>.</p>

<p class="MsoNormalCxSpLast">Кнопки
<span class="Interface">Установить прозрачный
фон</span> и <span class="Interface">Убрать прозрачность</span>
доступны только для картинок форматов <span class="Interface">BMP</span>, <span class="Interface">JPG</span> и <span class="Interface">TIFF</span>. Для картинок
в остальных форматах данные кнопки недоступны.</p>

<p class="Regularbeforepicture">Подобные
действия можно выполнить с помощью ссылки <span class="Interface">Открыть</span> в
свойстве <span class="Interface">Картинка</span>. На
экран выводится окно выбора картинки.</p>

<p class="Picture"><IMG src="_img/img00117.gif?_=1496848987" WIDTH="394" ALT HEIGHT="304"></p>

<p class="MsoCaption"><a name="_ref378867118">Рис. </a>118. Выбор картинки</p>

<p class="MsoNormal">Для
редактирования картинки нужно нажать кнопку <span class="Interface">Редактировать</span>.
Запускается редактор картинок (подробнее см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 27. инструменты разработки.htm?_=1496848987#_ref221519000">здесь</a>).</p>

<p class="Regularbeforepicture">Кнопки <span class="Interface">Включить набор вариантов</span> и <span class="Interface">Выключить набор вариантов</span> позволяют работать с
картинками, которые представляют из себя особым образом оформленный архив,
содержащий несколько картинок, каждая из которых нарисована для своего варианта
масштаба (подробно описан ранее в данном разделе). Нажатие кнопки <span class="Interface">Выключить набор вариантов</span> приводит к тому, что из набора
картинок удаляются все картинки, кроме базовой картинки (картинки для
разрешения ldpi). Если в наборе нет картинки для разрешения ldpi, то набор
становится пустым. Если в наборе есть картинка для разрешения ldpi, и она
установлена как контурная, то признак шаблонности сбрасывается. Нажатие кнопки <span class="Interface">Включить набор вариантов</span> приводит к тому, что текущая картинка
становится базовой картинкой (для разрешения ldpi). При необходимости
отредактировать одну из картинок в наборе, следует нажать кнопку <span class="Interface">Редактировать</span>. В этом случае будет открыт диалог, в
котором надо выбрать одну из картинок набора, которую необходимо редактировать.</p>

<p class="Picture"><IMG src="_img/img00118.gif?_=1496848987" WIDTH="628" ALT HEIGHT="321"></p>

<p class="MsoCaption"><a name="_ref378866267">Рис. </a>119. Редактирование набора картинок</p>

<p class="MsoNormal">С помощью редактора картинки можно установить
следующие варианты интерфейса: <span class="Interface">Такси</span>, <span class="Interface">Версия 8.2</span>, <span class="Interface">Такси мобильная</span> и <span class="Interface">Любой</span>. Остальные варианты можно указать только прямым
редактированием файла манифеста (подробнее см. <a href="#_ref469411751">здесь</a>).</p>

<p class="Regularbeforepicture">Флажок <span class="Interface">Режим коллекции</span> указывает, что каждая картинка в данном
наборе вариантом представляет собой коллекцию картинок. Подробнее о коллекциях
картинок см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 27. инструменты разработки.htm?_=1496848987#_ref469410939">здесь</a>. Если у картинки отключить режим коллекции, то в
диалоге картинки будут удалены колонки, отвечающие за параметры коллекции
(ширина и высота ячейки коллекции в точках).</p>

<p class="Picture"><IMG src="_img/img00119.gif?_=1496848987" WIDTH="628" ALT HEIGHT="321"></p>

<p class="MsoCaption">Рис. 120. Редактирование набора
картинок (без коллекции)</p>

<p class="Regularbeforepicture">Если картинка для какого-либо разрешения не
задана, поле ввода, соответствующее картинке, будет отображать пустым (как для
картинки <span class="Interface">Ультра большая (mdpi)</span> на <a href="#_ref378866267">рис.119</a>). Нажатие кнопки <span class="Interface">…</span>, в соответствующем поле диалога редактирования набора
картинок, приведет к открытию диалога выбора картинки. Нажатие кнопки <span class="Interface">X</span> приведет к очистке соответствующей картинки диалога.
Редактирование отдельной картинки набора не отличается от редактирования отдельной
картинки.</p>

<p class="Picture"><IMG src="_img/img00120.gif?_=1496848987" WIDTH="437" ALT HEIGHT="236"></p>

<p class="MsoCaption">Рис. 121. Редактирование одной
картинки варианта</p>

<a name="_ref469411751"></a><a id="TI000001898" class="bookmark" name="issogl3_5.5.17.3_манифест_картинки"><h4>5.5.17.3. Манифест картинки</h4></a>

<p class="MsoNormalCxSpFirst">Если картинка содержит набор вариантов, то
такая картинка должна представлять из себя архив, в который упакованы собственно
файлы картинок и файл манифеста (<span class="Interface">manifest.xml</span>), который описывает, какие картинки для
каких вариантов масштаба приготовлены в данном архиве.</p>

<p class="MsoNormalCxSpLast">Манифест (<span class="Interface">manifest.xml</span>) должен соответствовать следующей схеме:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_res">
&lt;xs:complexType name=&quot;PictureVariant&quot;&gt;
    &lt;xs:sequence&gt;
    &lt;/xs:sequence&gt;
    &lt;xs:attribute name=&quot;name&quot; type=&quot;xs:Name&quot; use=&quot;required&quot;/&gt;
    &lt;xs:attribute name=&quot;screenDensity&quot; type=&quot;tns:PictureVariantScreenDensity&quot; use=&quot;required&quot;/&gt;
    &lt;xs:attribute name=&quot;isTemplate&quot; type=&quot;xs:boolean&quot; default=&quot;false&quot;/&gt;
    &lt;xs:attribute name=&quot;interfaceVariant&quot; type=&quot;tns:PictureInterfaceVariant&quot;/&gt;
    &lt;xs:attribute name=&quot;glyphWidth&quot; type=:xs:decimal&quot; /&gt;
    &lt;xs:attribute name=&quot;glyphHeight&quot; type=:xs:decimal&quot; /&gt;
&lt;/xs:complexType&gt;
&lt;xs:simpleType name=&quot;PictureVariantScreenDensity&quot;&gt;
    &lt;xs:restriction base=&quot;xs:string&quot;&gt;
        &lt;xs:enumeration value=&quot;bldpi&quot;/&gt;
        &lt;xs:enumeration value=&quot;ldpi&quot;/&gt;
        &lt;xs:enumeration value=&quot;aldpi&quot;/&gt;
        &lt;xs:enumeration value=&quot;mdpi&quot;/&gt;
        &lt;xs:enumeration value=&quot;amdpi&quot;/&gt;
        &lt;xs:enumeration value=&quot;hdpi&quot;/&gt;
        &lt;xs:enumeration value=&quot;xdpi&quot;/&gt;
        &lt;xs:enumeration value=&quot;udpi&quot;/&gt;
    &lt;/xs:restriction&gt;
&lt;/xs:simpleType&gt;
&lt;xs:simpleType name=&quot;PictureInterfaceVariant&quot;&gt;
    &lt;xs:restriction base=&quot;xs:string&quot;&gt;
        &lt;xs:enumeration value=&quot;taxi&quot;/&gt;
        &lt;xs:enumeration value=&quot;taxiCompact&quot;/&gt;
        &lt;xs:enumeration value=&quot;version8_2&quot;/&gt;
        &lt;xs:enumeration value=&quot;version8_2_OrdinaryApp&quot;/&gt;
        &lt;xs:enumeration value=&quot;version8_0&quot;/&gt;
        &lt;xs:enumeration value=&quot;taxiMobile&quot;/&gt;
    &lt;/xs:restriction&gt;
&lt;/xs:simpleType&gt;
</pre>

<p class="MsoNormal">Атрибут <span class="Term">screenDensity</span>
указывает, для какого масштаба отображения будет использоваться картинка.
Атрибут <span class="Term">interfaceVariant</span>
указывает, для какого варианта интерфейса предназначается каринка:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Term">taxi</span> – интерфейс <span class="Interface">Такси</span>.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">taxiCompact</span> – интерфейс <span class="Interface">Такси</span> с компактным вариантом отображения. Данный вариант
доступен только при ручном редактировании манифеста.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">version8_2_OrdinaryApp</span> – интерфейс
обычного приложения. Данный вариант доступен только при ручном редактировании
манифеста.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">version8_2</span> – интерфейс <span class="Interface">Версия 8.2</span>.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">version8_0</span> – интерфейс для конфигураций системы
«1С:Предприятие» версий 8.0 и 8.1. Данный вариант доступен только при ручном
редактировании манифеста.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Term">taxiMobile</span> – интерфейс мобильных
приложений.</p>

<p class="MsoNormal">Атрибуты <span class="Term">glyphWidth</span>
и <span class="Term">glyphHeight</span>
описывают размер элемента коллекции для картинки, указанной в элементе. В дальнейшем,
эти значения передаются в редактор картинки, который с их помощью выполняет
разбиение картинки на коллекцию.</p>

<a id="TI000000251" class="bookmark" name="issogl2_5.5.18_xdto-пакеты"><h3>5.5.18. XDTO-пакеты</h3></a>

<p class="MsoNormal">Механизм XDTO является универсальным способом
представления данных для взаимодействия с различными внешними источниками
данных и программными системами. Подробнее об использовании механизма XDTO см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 16. работа с различными форматами данных.htm?_=1496848987#_ref221519021">здесь</a>.</p>

<a id="TI000000252" class="bookmark" name="issogl3_5.5.18.1_импорт_схемы_xml_в_глобальную_фабрику_xdto"><h4>5.5.18.1. Импорт схемы XML в глобальную фабрику XDTO</h4></a>

<p class="Regularbeforepicture">Для того чтобы импортировать схему XML из
файла <span class="Interface">.xsd</span> в глобальную фабрику XDTO, следует выделить в
дереве конфигурации ветку XDTO и выполнить команду контекстного меню <span class="Interface">Импорт XML-схемы…</span></p>

<p class="Picture"><IMG src="_img/img00121.gif?_=1496848987" WIDTH="346" ALT HEIGHT="307"></p>

<p class="MsoCaption">Рис. 122. Импорт XML-схемы</p>

<p class="Regularbeforepicture">После указания требуемого файла <span class="Interface">.xsd</span> будет выполнена проверка существования в дереве
конфигурации пакетов XDTO, пространства имен которых совпадают с импортируемыми
из файла. Если такие пакеты существуют, то будет отображен список этих пакетов
и предложено указать те пакеты, которые должны быть обновлены (по умолчанию
существующие пакеты не обновляются).</p>

<p class="Picture"><IMG src="_img/img00122.gif?_=1496848987" WIDTH="364" ALT HEIGHT="164"></p>

<p class="MsoCaption">Рис. 123. Выбор пространств имен</p>

<p class="MsoNormal">После этого будет выполнен импорт, в
результате которого новые пакеты XDTO будут добавлены в дерево конфигурации, а
пакеты, отмеченные для обновления, обновлены.</p>

<a id="TI000000253" class="bookmark" name="issogl3_5.5.18.2_экспорт_схемы_xml-данных_конфигурации"><h4>5.5.18.2. Экспорт схемы XML-данных конфигурации</h4></a>

<p class="Regularbeforepicture">Для того чтобы экспортировать схему XML,
соответствующую типам данных конфигурации (без учета пакетов XDTO, созданных в
дереве конфигурации), в файл <span class="Interface">.xsd</span>, следует выделить в дереве конфигурации ветку XDTO
и выполнить команду контекстного меню <span class="Interface">Экспорт XML-схемы данных конфигурации…</span></p>

<p class="Picture"><IMG src="_img/img00123.gif?_=1496848987" WIDTH="347" ALT HEIGHT="307"></p>

<p class="MsoCaption">Рис. 124. Экспорт схемы конфигурации</p>

<p class="MsoNormal">После выбора каталога и указания имени файла
будет выполнен экспорт схемы XML в указанный файл.</p>

<a id="TI000000254" class="bookmark" name="issogl3_5.5.18.3_экспорт_схемы_xml-пакета_xdto"><h4>5.5.18.3. Экспорт схемы XML-пакета XDTO</h4></a>

<p class="Regularbeforepicture">Для того чтобы экспортировать схему XML,
соответствующую существующему пакету XDTO, в файл <span class="Interface">.xsd</span>, следует выделить в дереве конфигурации требуемый пакет
XDTO и выполнить команду контекстного меню <span class="Interface">Экспорт XML-схемы…</span></p>

<p class="Picture"><IMG src="_img/img00124.gif?_=1496848987" WIDTH="316" ALT HEIGHT="339"></p>

<p class="MsoCaption">Рис. 125. Экспорт XML-схемы
пакета XDTO</p>

<p class="MsoNormalCxSpFirst">После этого будет выполнена проверка
выгружаемого пакета XDTO. Если будут обнаружены ошибки, соответствующие сообщения
будут выведены в окно сообщений, а процедура экспорта будет прервана.</p>

<p class="MsoNormalCxSpLast">В случае успешной проверки будет предложено
выбрать каталог и имя файла <span class="Interface">.xsd</span>, после чего схема XML будет экспортирована в
указанный файл.</p>

<a id="TI000000255" class="bookmark" name="issogl3_5.5.18.4_проверка_пакета_xdto"><h4>5.5.18.4. Проверка пакета XDTO</h4></a>

<p class="MsoNormalCxSpFirst">Для того чтобы проверить пакет XDTO, следует
выделить в дереве конфигурации требуемый пакет XDTO и выполнить команду
контекстного меню <span class="Interface">Проверить пакет</span>.</p>

<p class="MsoNormalCxSpMiddle">В результате будет выполнена проверка модели
пакета XDTO (описание правил проверки см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 16. работа с различными форматами данных.htm?_=1496848987#_ref225333475">здесь</a>).</p>

<p class="MsoNormalCxSpLast">Если будут обнаружены ошибки, соответствующие
сообщения будут выведены в окно сообщений.</p>

<a id="TI000000256" class="bookmark" name="issogl3_5.5.18.5_окно_редактирования_пакета_xdto"><h4>5.5.18.5. Окно редактирования пакета XDTO</h4></a>

<a id="TI000001839" class="bookmark" name="issogl4_5.5.18.5.1_общая_информация"><h5>5.5.18.5.1. Общая информация</h5></a>

<p class="Regularbeforepicture">Редактирование пакета XDTO выполняется в окне
редактирования пакета XDTO.</p>

<p class="Picture"><IMG src="_img/img00125.gif?_=1496848987" WIDTH="367" ALT HEIGHT="341"></p>

<p class="MsoCaption">Рис. 126. Окно редактирования
пакета XDTO</p>

<p class="MsoNormalCxSpFirst">При добавлении нового пакета XDTO в дерево
конфигурации окно редактирования пакета XDTO открывается автоматически.</p>

<p class="MsoNormalCxSpLast">Для того чтобы открыть окно редактирования
для существующего пакета XDTO, следует выделить в дереве конфигурации требуемый
пакет XDTO и выполнить команду контекстного меню <span class="Interface">Открыть пакет</span>.</p>

<a name="_ref216075329"></a><a id="TI000000257" class="bookmark" name="issogl4_5.5.18.5.2_иерархическая_структура_пакета_xdto"><h5>5.5.18.5.2. Иерархическая структура пакета XDTO</h5></a>

<p class="MsoNormalCxSpFirst">Окно редактирования пакета XDTO содержит
иерархическую структуру пакета XDTO, отображенную в виде дерева.</p>

<p class="MsoNormalCxSpMiddle">В корне дерева расположен идентификатор
пакета XDTO, содержащий URI пространства имен данного пакета.</p>

<p class="MsoNormalCxSpLast">На первом уровне иерархии могут располагаться
следующие элементы пакета:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">Директивы импорта</span> –
перечень директив импорта. Каждая директива импорта представляет собой ссылку
на другой пакет, содержащий типы, на которые так или иначе ссылается данный
пакет. При работе с данным пакетом XDTO средствами встроенного языка данный перечень
директив импорта будет доступен в виде объекта <span class="Term">КоллекцияПакетовXDTO</span>,
содержащегося в свойстве <span class="Interface">Зависимости</span> пакета XDTO.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Типы значений</span> –
перечень типов значений XDTO, которые содержит пакет XDTO.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Типы объектов</span> –
перечень типов объектов XDTO, которые содержит пакет XDTO.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Свойства</span> – перечень
свойств пакета XDTO. Представляет собой объявления объектов/значений, которые могут
являться корневыми элементами документов XML, принадлежащих URI пространству
имен данного пакета XDTO.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Каждый тип значения XDTO описывается иерархической
структурой и может содержать в своем составе следующие элементы:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
<span class="Interface">Образец</span> – описывает
один фасет XDTO типа <span class="Interface">Образец</span>.</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
<span class="Interface">Перечисление</span> –
описывает один фасет XDTO типа <span class="Term">Перечисление</span>.</p>

<p class="MsoNormal">Каждый тип объекта XDTO описывается
иерархической структурой, которая может содержать в своем составе набор свойств
объекта.</p>

<a id="TI000000258" class="bookmark" name="issogl4_5.5.18.5.3_свойства_пакета_xdto"><h5>5.5.18.5.3. Свойства пакета XDTO</h5></a>

<p class="MsoNormal">Редактирование свойств пакета XDTO
выполняется в палитре свойств.</p>

<p class="Regularbeforepicture">Если палитра свойств открыта для пакета XDTO,
выделенного в дереве конфигурации, то в ней будут содержаться следующие
свойства: <span class="Interface">Имя</span>, <span class="Interface">Синоним</span>, <span class="Interface">Комментарий</span> и <span class="Interface">URI пространства имен</span>. Кроме этого, палитра свойств
будет содержать ссылку <span class="Interface">Пакет</span>, по которой можно перейти в окно редактирования
пакета XDTO.</p>

<p class="Picture"><IMG src="_img/img00126.gif?_=1496848987" WIDTH="383" ALT HEIGHT="244"></p>

<p class="MsoCaption">Рис. 127. Свойства пакета XDTO</p>

<p class="MsoNormal">Если палитра свойств открыта для пакета XDTO,
выделенного в окне редактирования пакета XDTO (корневой элемент), то она
содержит единственное свойство – <span class="Interface">URI пространства имен</span>. Это свойство задает URI пространства
имен пакета XDTO, к которому принадлежат все определенные в этом пакете типы.</p>

<a id="TI000000259" class="bookmark" name="issogl4_5.5.18.5.4_свойства_директивы_импорта"><h5>5.5.18.5.4. Свойства директивы импорта</h5></a>

<p class="Regularbeforepicture">Редактирование свойств директивы импорта
выполняется в палитре свойств. Для директивы импорта палитра свойств содержит
единственное свойство – <span class="Interface">Пространство имен</span>. Это свойство задает URI пространства
имен импортируемого пакета.</p>

<p class="Picture"><IMG src="_img/img00127.gif?_=1496848987" WIDTH="383" ALT HEIGHT="203"></p>

<p class="MsoCaption">Рис. 128. Свойства директивы
импорта</p>

<a id="TI000000260" class="bookmark" name="issogl4_5.5.18.5.5_свойства_типа_значения_xdto"><h5>5.5.18.5.5. Свойства типа значения XDTO</h5></a>

<p class="Regularbeforepicture">Редактирование свойств типа значения XDTO
выполняется в палитре свойств.</p>

<p class="Picture"><IMG src="_img/img00128.gif?_=1496848987" WIDTH="383" ALT HEIGHT="425"></p>

<p class="MsoCaption">Рис. 129. Свойства значения XDTO</p>

<p class="MsoNormal">Для типа значения XDTO палитра свойств
содержит следующие свойства:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">Имя</span> – имя типа
значения XDTO.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Базовый тип</span> – базовый
тип для данного типа значения XDTO.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Вариант</span> – вариант
простого типа (атомарный тип, список, объединение). Если значение установлено,
то должно не противоречить значениям <span class="Interface">Тип элемента</span> и <span class="Interface">Типы объединения</span>.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Тип элемента</span> –
тип элемента списка в случае, когда тип значения XDTO определяется списком. При
этом все фасеты и свойство <span class="Interface">Типы подчиненных</span> должны быть пустыми.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Типы объединения</span> –
список типов, образующих объединение в случае, когда тип значения XDTO
определяется объединением. Объединяться могут только типы значений XDTO. При
этом все фасеты и свойство <span class="Interface">Тип элемента</span> должны быть пустыми.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Длина</span> – фасет
длины.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Минимальная длина</span> –
фасет минимальной длины.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Максимальная длина</span> –
фасет максимальной длины.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Пробельные символы</span> –
фасет пробельного символа.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Минимум, включающий
границу</span> – фасет минимума, включающего границу.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Минимум, не включающий
границу</span> – фасет минимума, не включающего границу.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Максимум, включающий
границу</span> – фасет максимума, включающего границу.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Максимум, не включающий
границу</span> – фасет максимума, не включающего границу.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Общее количество цифр</span> –
фасет общего количества цифр.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Interface">Количество цифр дробной
части</span> – фасет количества цифр дробной части.</p>

<a id="TI000000261" class="bookmark" name="issogl4_5.5.18.5.6_свойства_типа_объекта_xdto"><h5>5.5.18.5.6. Свойства типа объекта XDTO</h5></a>

<p class="Regularbeforepicture">Редактирование свойств типа объекта XDTO выполняется
в палитре свойств.</p>

<p class="Picture"><IMG src="_img/img00129.gif?_=1496848987" WIDTH="383" ALT HEIGHT="270"></p>

<p class="MsoCaption">Рис. 130. Свойства объекта XDTO</p>

<p class="MsoNormal">Для типа объекта XDTO палитра свойств
содержит следующие свойства:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">Имя</span> – имя типа
объекта XDTO.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Базовый тип</span> – базовый
тип для данного типа объекта XDTO. Это может быть только тип объекта XDTO.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Открытый</span> – признак,
является ли тип объекта XDTO открытым. Данное свойство показывает, может ли
экземпляр объекта XDTO содержать дополнительные свойства, не определенные в его
типе.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Абстрактный</span> – признак,
является ли тип объекта XDTO абстрактным.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Смешанный</span> – свойство
показывает, имеет ли соответствующий объект XDTO смешанное содержание. Если
значение свойства <span class="Interface">Смешанный</span> равно <span class="Term">Истина</span>,
то значение <span class="Interface">Последовательный</span> обязательно равно <span class="Term">Истина</span>,
так как смешанное содержание невозможно смоделировать без применения последовательности
XDTO.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Упорядоченный</span> –
признак, является ли порядок следования элементов, представляющих значения
свойств, строго соответствующим порядку следования свойств в типе объекта XDTO.
Если свойство <span class="Interface">Упорядоченный</span> имеет значение <span class="Term">Ложь</span>,
то на входе порядок следования элементов XML не контролируется, а на выходе
определяется порядком следования свойств, если только свойство <span class="Interface">Последовательный</span> не имеет значение <span class="Term">Истина</span>.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Interface">Последовательный</span> –
это свойство показывает, содержит ли экземпляр соответствующего объекта XDTO
последовательность XDTO. Данный признак равен значению <span class="Term">Истина</span>
в тех случаях, когда порядок следования вложенных элементов XML не может
однозначно определяться порядком следования свойств в типе или соответствующий
объект XDTO имеет смешанное содержание. Последовательность XDTO позволяет
задать в явном виде порядок следования элементов, как они будут представлены в
документе XML. Для объектов типов, у которых свойство <span class="Interface">Последовательный</span> установлено в значение <span class="Term">Ложь</span>,
порядок следования вложенных элементов соответствует порядку следования
свойств.</p>

<a id="TI000000262" class="bookmark" name="issogl4_5.5.18.5.7_свойства_свойств_типа_объекта_xdto"><h5>5.5.18.5.7. Свойства свойств типа объекта XDTO</h5></a>

<p class="Regularbeforepicture">Редактирование свойства свойств типа объекта XDTO
выполняется в палитре свойств.</p>

<p class="Picture"><IMG src="_img/img00130.gif?_=1496848987" WIDTH="383" ALT HEIGHT="270"></p>

<p class="MsoCaption">Рис. 131. Палитра свойств типа
XDTO</p>

<p class="MsoNormal">Для типа объекта XDTO палитра свойств
содержит следующие свойства:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">Имя</span> – имя
свойства. В пределах одного типа объекта XDTO имена свойств должны быть
уникальными.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Тип</span> – тип
свойства. Может быть как типом значения XDTO, так и типом объекта XDTO.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Минимальное количество</span> –
минимальное количество значений свойства. Минимальное количество значений свойства
может принимать значения &gt;= 0. Естественно, значение <span class="Interface">Минимальное количество</span> должно быть меньше или равно значению
<span class="Interface">Максимальное количество</span> (если, конечно, <span class="Interface">Максимальное количество</span> не равно -1);</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Максимальное количество</span> –
свойство типа объекта XDTO может быть определено как содержащее одно или множество
значений. Свойство считается содержащим одно значение, если свойство <span class="Interface">Максимальное количество</span> равно <span class="Interface">1</span>. Если же свойство <span class="Interface">Максимальное количество</span> больше 1, то считается, что
свойство может содержать множество значений. Такое свойство в структуре объекта
моделируется как список. Свойство <span class="Interface">Максимальное количество</span> показывает максимальное количество
значений свойства. Максимальное количество &gt; 1 может быть задано только для
свойств, представляемых в виде элемента XML.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Возможно пустое</span> –
показывает, может ли свойство принимать неопределенное значение. Свойство <span class="Interface">Возможно пустое</span>, равное <span class="Term">Истина</span>,
может быть определено только для свойств с формой представления <span class="Interface">Элемент</span>. Если <span class="Interface">Максимальное количество</span> &gt; 1, неопределенное значение
является допустимым для элемента списка значений свойства.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Фиксированное</span> –
указывает, является ли значение свойства фиксированным. Если установлено в
значение <span class="Term">Истина</span>,
то само фиксированное значение можно получить через свойство <span class="Interface">По умолчанию</span>.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">По умолчанию</span> –
значение свойства по умолчанию. Тип значения по умолчанию может быть только
типом значения XDTO. При этом данное значение должно быть совместимо с типом
свойства (быть того же типа, что и тип свойства или же унаследованного типа).
При создании объекта XDTO свойство, если оно допускает единственное значение,
принимает значение по умолчанию. Для свойств с множеством значений список
значений изначально пуст, независимо от того, определено или нет значение по
умолчанию.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Форма</span> – форма
представления свойства в XML. Это может быть <span class="Interface">Текст</span>, <span class="Interface">Элемент</span> или <span class="Interface">Атрибут</span>. Если формой представления является <span class="Interface">Атрибут</span> или <span class="Interface">Текст</span>, то значение свойства <span class="Interface">Максимальное количество</span> не может быть больше 1. Если
свойство принимает значение <span class="Interface">Текст</span>, то значение свойства <span class="Interface">Минимальное количество</span> также должно быть равным 1. У
одного типа только одно свойство может иметь форму представления <span class="Interface">Текст</span>, при этом остальные свойства должны иметь форму
представления <span class="Interface">Атрибут</span>.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Interface">Локальное имя</span> –
локальное имя, используемое для представления свойства. Для свойств с формой
представления <span class="Interface">Текст</span> – пустая строка.</p>

<a id="TI000000263" class="bookmark" name="issogl4_5.5.18.5.8_глобальное_свойство"><h5>5.5.18.5.8. Глобальное свойство</h5></a>

<p class="Regularbeforepicture">Редактирование свойств глобального свойства
выполняется в палитре свойств.</p>

<p class="Picture"><IMG src="_img/img00131.gif?_=1496848987" WIDTH="383" ALT HEIGHT="328"></p>

<p class="MsoCaption">Рис. 132. Палитра свойств
глобального свойства</p>

<p class="MsoNormal">Для глобального свойства палитра свойств
содержит следующие свойства:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">Имя</span> – имя
глобального свойства. В пределах одного типа объекта XDTO имена глобальных
свойств должны быть уникальными.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Ссылка</span> – ссылка
на корневое определение свойства пакета.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Тип</span> – тип
глобального свойства.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Минимальное количество</span> –
минимальное количество значений свойства. Если <span class="Interface">Минимальное количество</span> = 0, то значение свойства может
быть не установлено.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Максимальное количество</span> –
максимальное количество значений свойства. Если <span class="Interface">Максимальное количество</span> равно -1, то количество
значений свойства неограниченно.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Возможно пустое</span> –
показывает, может ли свойство принимать неопределенное значение.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Фиксированное</span> –
указывает, является ли значение свойства фиксированным.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">По умолчанию</span> –
значение свойства по умолчанию. Лексическое представление значения свойства
должно соответствовать правилам проверки типа данного свойства.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Форма</span> – форма
представления свойства в XML. Это может быть <span class="Interface">Текст</span>, <span class="Interface">Элемент</span> или <span class="Interface">Атрибут</span>.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Interface">Локальное имя</span> –
локальное имя, используемое для представления свойства.</p>

<a id="TI000000264" class="bookmark" name="issogl2_5.5.19_web-сервисы"><h3>5.5.19. Web-сервисы</h3></a>

<p class="MsoNormalCxSpFirst">Механизм Web-сервисов
позволяет использовать «1С:Предприятие» как набор сервисов в сложных распределенных
и гетерогенных системах, а также позволяет интегрировать «1С:Предприятие» с
другими промышленными системами использованием сервисно-ориентированной
архитектуры.</p>

<p class="MsoNormalCxSpLast">Подробнее
об использовании механизма Web-сервисов см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 17. механизмы интернет-сервисов.htm?_=1496848987#_ref380405633">здесь</a>.</p>

<a id="TI000000265" class="bookmark" name="issogl3_5.5.19.1_добавление_web-сервиса"><h4>5.5.19.1. Добавление Web-сервиса</h4></a>

<p class="MsoNormalCxSpFirst">Для того чтобы добавить Web-сервис в дерево конфигурации,
следует выделить ветку <span class="Interface">Общие – </span><span class="Interface">Web-сервисы</span>
и выполнить команду контекстного меню <span class="Interface">Добавить</span>.</p>

<p class="MsoNormalCxSpMiddle">В результате выполнения команды будет открыто
окно редактирования Web-сервиса (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 2. работа с конфигурацией.htm?_=1496848987#_ref414277435">здесь</a>).</p>

<p class="MsoNormalCxSpLast">На закладке <span class="Interface">Прочее</span> окна редактирования Web-сервиса следует
установить следующие параметры:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">URI пространства имен</span> –
содержит URI пространства имен Web-сервиса. Каждый Web-сервис может быть однозначно
идентифицирован по своему имени и URI пространству имен, которому он
принадлежит.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Пакеты XDTO</span> – перечень
пакетов XDTO, типы которых могут использоваться в качестве типов возвращаемого
значения операций и типов параметров операций Web-сервиса.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Interface">Имя файла публикаций</span> –
имя файла описания Web-сервиса, который
расположен на веб-сервере (см. <a href="/db/v8310doc/bookmark/adm/TI000000222" target="_top">здесь</a>).</p>

<p class="MsoNormalCxSpFirst">Для получения доступа к Web-сервису необходимо
использовать адрес, который формируется следующим образом: <span class="Interface">&lt;Имя хоста веб-сервера&gt;/&lt;Имя виртуального
каталога&gt;/ws/&lt;Имя Web-сервиса&gt;</span> или <span class="Interface">&lt;Имя хоста веб-сервера&gt;/&lt;Имя виртуального каталога&gt;/ws/&lt;Адрес
Web-сервиса&gt;</span>.</p>

<p class="MsoNormalCxSpMiddle">Так, если виртуальный каталог имеет имя <span class="Interface">DemoWS</span>, имя Web-сервиса в конфигураторе
указано как <span class="Interface">ДемонстрацияРаботыWS</span>, а в качестве адреса указано <span class="Interface">DemoWorkWS</span>, то обращение к Web-сервису можно выполнять
одновременно по двум адресам (для получения доступа с локальной машины): <a href="http://localhost/DemoWS/ws/ДемонстрацияРаботыWS" target="_blank">http://localhost/DemoWS/ws/ДемонстрацияРаботыWS</a> или <a href="http://localhost/DemoWS/ws/DemoWorkWS" target="_blank">http://localhost/DemoWS/ws/DemoWorkWS</a>.</p>

<p class="MsoNormalCxSpLast">Кроме этого, на закладке содержится кнопка <span class="Interface">Модуль</span>, которая позволяет открыть для редактирования
модуль Web-сервиса.</p>

<a id="TI000000266" class="bookmark" name="issogl3_5.5.19.2_иерархическая_структура_web-сервиса"><h4>5.5.19.2. Иерархическая структура Web-сервиса</h4></a>

<p class="Regularbeforepicture">Каждый Web-сервис, описываемый в
дереве конфигурации, может содержать набор операций. Каждой операции должна соответствовать
экспортируемая процедура, описанная в модуле Web-сервиса.</p>

<p class="Picture"><IMG src="_img/img00132.gif?_=1496848987" WIDTH="421" ALT HEIGHT="297"></p>

<p class="MsoCaption">Рис. 133. Описание Web-сервиса</p>

<p class="MsoNormal">В свою очередь, каждая операция может
содержать набор параметров, имена которых должны соответствовать именам параметров
процедуры, описывающей данную операцию.</p>

<a id="TI000000267" class="bookmark" name="issogl3_5.5.19.3_операции_web-сервиса"><h4>5.5.19.3. Операции Web-сервиса</h4></a>

<p class="Regularbeforepicture">На закладке <span class="Interface">Операции</span> выполняется добавление операции Web-сервиса. Редактирование
свойств операции выполняется в палитре свойств.</p>

<p class="Picture"><IMG src="_img/img00133.gif?_=1496848987" WIDTH="383" ALT HEIGHT="328"></p>

<p class="MsoCaption">Рис. 134. Свойство операции Web-сервиса</p>

<p class="MsoNormalCxSpFirst"><span class="Interface">Тип возвращаемого
значения</span> – тип значения, которое возвращает операция Web-сервиса. Может являться типом
значения XDTO или типом объекта XDTO.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Возможно пустое
значение</span> – показывает, может ли возвращаемое значение принимать
неопределенное значение.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">В транзакции</span> –
показывает, будет ли выполняться код модуля Web-сервиса в транзакции или
нет. Если свойство установлено, то при вызове Web-сервиса автоматически
будет начата транзакция, а при завершении транзакция будет либо
зафиксирована, либо произойдет откат транзакции (в зависимости от результатов
выполнения). Если свойство не установлено, при начале исполнения модуля Web-сервиса транзакция начата
не будет.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Имя метода</span> –
имя процедуры модуля Web-сервиса, которая будет
выполнена при вызове данного свойства.</p>

<p class="MsoNormalCxSpLast"><span class="Interface">Режим управления
блокировкой данных</span> – указывает, какие блокировки будут использовать
при доступе к данным (подробнее см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 9. работа с данными.htm?_=1496848987#_ref414279683">здесь</a>).</p>

<a id="TI000000268" class="bookmark" name="issogl3_5.5.19.4_параметры_операции"><h4>5.5.19.4. Параметры операции</h4></a>

<p class="Regularbeforepicture">На закладке <span class="Interface">Операции</span> для указанной операции нужно осуществить
задание параметров операции Web-сервиса. Редактирование
свойств параметра выполняется в палитре свойств.</p>

<p class="Picture"><IMG src="_img/img00134.gif?_=1496848987" WIDTH="383" ALT HEIGHT="328"></p>

<p class="MsoCaption">Рис. 135. Свойства параметра
операции</p>

<p class="MsoNormalCxSpFirst"><span class="Interface">Тип значения</span> –
тип значения параметра операции Web-сервиса. Может являться
типом значения XDTO или типом объекта XDTO.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Возможно пустое
значение</span> – показывает, может ли значение параметра операции
принимать неопределенное значение.</p>

<p class="MsoNormalCxSpLast"><span class="Interface">Направление передачи</span> –
определяет направление передачи данных с помощью данного параметра. Возможные
значения:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">Входной</span> – означает,
что параметр может использоваться только для передачи данных Web-сервису.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Выходной</span> – означает,
что параметр может использоваться только для получения данных от Web-сервиса.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Interface">Входной – Выходной</span> –
означает, что параметр может использоваться как для передачи данных, так и для
их получения от Web-сервиса.</p>

<a id="TI000000269" class="bookmark" name="issogl3_5.5.19.5_указание_типов_определяемых_системой"><h4>5.5.19.5. Указание типов, определяемых системой</h4></a>

<p class="MsoNormal">Чтобы в Web-сервисе воспользоваться
типами, определяемыми системой «1С:Предприятие» (например, в параметрах и возвращаемом
значении операций), нужно в конфигурации определить пакеты XDTO и для каждого
пакета указать в его списке импортируемых пакетов (свойство <span class="Interface">Директивы импорта</span>) набор пакетов платформы, в которые
эти типы входят. URI пространства имен для указания типа содержится в статье синтакс-помощника
по объекту данного типа.</p>

<a id="TI000000270" class="bookmark" name="issogl3_5.5.19.6_публикация_web-сервисов"><h4>5.5.19.6. Публикация Web-сервисов</h4></a>

<p class="MsoNormal">Публикация Web-сервисов описывается см. <a href="/db/v8310doc/bookmark/adm/TI000000222" target="_top">здесь</a>.</p>

<a name="_ref215392590"></a><a name="_ref380405387"></a><a id="TI000001446" class="bookmark" name="issogl2_5.5.20_http-сервисы"><h3>5.5.20. HTTP-сервисы</h3></a>

<p class="MsoNormalCxSpFirst">Механизм HTTP-сервисов позволяет
использовать «1С:Предприятие» как набор сервисов в сложных распределенных и
гетерогенных системах, а также позволяет интегрировать «1С:Предприятие» с
другими промышленными системами.</p>

<p class="MsoNormalCxSpMiddle">Подробнее об использовании механизма HTTP-сервисов
см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 17. механизмы интернет-сервисов.htm?_=1496848987#_ref380409689">здесь</a>.</p>

<p class="MsoNormalCxSpLast">Описание редактирования HTTP-сервисов
см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 17. механизмы интернет-сервисов.htm?_=1496848987#_ref380409820">здесь</a>.</p>

<a id="TI000000271" class="bookmark" name="issogl2_5.5.21_ws-ссылки"><h3>5.5.21. WS-ссылки</h3></a>

<p class="MsoNormal">Система «1С:Предприятие» может использовать
веб-сервисы, предоставляемые другими поставщиками, с помощью статических
ссылок, создаваемых в дереве конфигурации.</p>

<a id="TI000000272" class="bookmark" name="issogl3_5.5.21.1_добавление_ws-ссылки"><h4>5.5.21.1. Добавление WS-ссылки</h4></a>

<p class="Regularbeforepicture">Для того чтобы добавить статическую ссылку на
внешний веб-сервис в дерево конфигурации, следует выделить ветку WS-ссылки и
выполнить команду контекстного меню <span class="Interface">Добавить</span> или соответствующую команду меню <span class="Interface">Действия</span>.</p>

<p class="Picture"><IMG src="_img/img00135.gif?_=1496848987" WIDTH="283" ALT HEIGHT="275"></p>

<p class="MsoCaption">Рис. 136. Добавление WS-ссылки</p>

<p class="MsoNormal">В открывшемся окне следует ввести URL
описания добавляемого веб-сервиса, например: <a href="http://users.v8.1c.ru/ws/products.1cws?wsdl" target="_blank">http://users.v8.1c.ru/ws/products.1cws?wsdl</a>.</p>

<p class="Note"><span class="Note">Примечание.</span> При добавлении
WS-ссылки следует помнить, что «1С:Предприятие» удаляет из введенного URL
завершающий символ «<span class="Interface">/</span>», в силу чего URL <a href="http://localhost/ws/ws-service/?wsdl" target="_blank">http://localhost/ws/ws-service/?wsdl</a> и
URL <a href="http://users.v8.1c.ru/ws/products.1cws?wsdl" target="_blank"> http://localhost/ws/ws-service?wsdl</a> с
точки зрения «1С:Предприятия» будут считаться идентичными.</p>

<a id="TI000000273" class="bookmark" name="issogl3_5.5.21.2_иерархическая_структура_ws-ссылки"><h4>5.5.21.2. Иерархическая структура WS-ссылки</h4></a>

<p class="MsoNormal">Просмотр иерархической структуры WS-ссылки
выполняется в окне просмотра WS-ссылки. Значения свойств элементов ссылки можно
просмотреть в палитре свойств.</p>

<p class="Regularbeforepicture">Для того чтобы открыть окно просмотра WS-ссылки,
следует выделить в дереве конфигурации требуемую WS-ссылку и выполнить команду
контекстного меню <span class="Interface">Свойства</span>. После этого в палитре свойств воспользоваться
ссылкой WS-ссылка, которая открывает окно просмотра WS-ссылки.</p>

<p class="Picture"><IMG src="_img/img00136.gif?_=1496848987" WIDTH="308" ALT HEIGHT="128"></p>

<p class="MsoCaption">Рис. 137. WS-ссылка</p>

<p class="MsoNormalCxSpFirst">Окно просмотра содержит иерархическую
структуру WS-ссылки, отображенную в виде дерева.</p>

<p class="MsoNormalCxSpLast">На первом уровне иерархии могут
располагаться:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">Модель данных</span> –
содержит перечень пакетов XDTO, описывающих структуру типов, используемую
веб-сервисами, на которые ссылается данная WS-ссылка.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Interface">Web-сервисы</span> – перечень Web-сервисов, на которые
ссылается данная ссылка.</p>

<p class="MsoNormal">Просмотр структуры и свойств модели данных
выполняется аналогично работе с пакетами XDTO (см. <a href="#_ref216075329">здесь</a>), за исключением того, что редактирование свойств
пакетов, отображаемых в окне просмотра WS-ссылки, невозможно.</p>

<p class="Regularbeforepicture">Просмотр структуры WS-ссылки выполняется аналогично
работе с Web-сервисами, за исключением
того, что для каждого Web-сервиса отображаются
поддерживаемые точки подключения Web-сервиса, для которых, в
свою очередь, отображается список операций и параметров каждой операции.</p>

<p class="Picture"><IMG src="_img/img00137.gif?_=1496848987" WIDTH="337" ALT HEIGHT="214"></p>

<p class="MsoCaption">Рис. 138. Структура Web-сервиса</p>

<p class="MsoNormal">Различные точки подключения Web-сервиса позволяют выполнять
операции, используя различные протоколы.</p>

<a name="_ref214351571"></a><a name="_ref38943377"></a><a name="_ref38943373"></a><a id="TI000000274" class="bookmark" name="issogl2_5.5.22_элементы_стиля"><h3>5.5.22. Элементы стиля</h3></a>

<p class="Regularbeforepicture">Объекты конфигурации <span class="Interface">Элементы стиля</span> предназначены для единообразного
оформления различных элементов формы в тех случаях, когда недостаточно того
оформления, которое автоматически предлагает «1С:Предприятие». Например,
требуется цвет каких-либо надписей в формах конфигурации сделать одинаковым. В
этом случае логично создать элемент стиля, задать ему цвет и использовать
созданный элемент для установки цвета текста элемента формы.</p>

<p class="Picture"><IMG src="_img/img00138.gif?_=1496848987" WIDTH="563" ALT HEIGHT="399"></p>

<p class="MsoCaption">Рис. 139. Использование элемента
стиля</p>

<p class="MsoNormal"><span class="Interface">Элементы стиля</span>
могут быть трех разных видов:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Цвет,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Шрифт,</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Рамка.</p>

<p class="Note"><span class="Note">Примечание.</span> Системные элементы
стиля недоступны для выбора в качестве значений пользовательских элементов
стиля.</p>

<p class="MsoNormalCxSpFirst">В диалоге выбора шрифта в тонком клиенте в
списке шрифтов присутствуют шрифты, установленные на текущем компьютере, и
перечень специальных шрифтов, заключенных в угловые скобки (<span class="Interface">&lt;&gt;</span>). Если выбран шрифт <span class="Interface">&lt;Шрифт текста&gt;</span>, то будет использоваться шрифт
интерфейса «1С:Предприятия», остальные шрифты соответствуют соответствующим
шрифтам операционной системы. В начале списка размеров шрифта <span class="Interface">&lt;Шрифт текста&gt;</span> присутствует элемент <span class="Interface">&lt;&gt;</span>. Выбор этого размера шрифта (его значение равно
0) означает, что будет использован размер шрифта интерфейса «1С:Предприятия». Начертание
шрифта (жирный, наклонный и т. д.) по умолчанию берется из стиля, но
может быть изменено пользователем без каких-либо ограничений. При выборе
другого шрифта внесенные пользователем изменения размера или начертания не
сохраняются и устанавливаются в значения по умолчанию.</p>

<p class="MsoNormalCxSpLast">Имеется возможность программного доступа к
значению элемента стиля с помощью свойства <span class="Term">Значение</span>.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">Метаданные<span class="operator">.</span>ЭлементыСтиля<span class="operator">.</span>ЦветОтрицательного<span class="operator">.</span>Значение</pre>

<a name="_ref353274646"></a><a name="_ref353274645"></a><a name="_ref422491757"></a><a name="_ref422491756"></a><a id="TI000000275" class="bookmark" name="issogl2_5.5.23_языки"><h3>5.5.23. Языки</h3></a>

<p class="MsoNormal">Объекты
конфигурации <span class="Interface">Языки</span>
предназначены для создания интерфейса программы на различных языках. Для каждого
объекта конфигурации типа <span class="Interface">Языки</span>
резервируется отдельная строка для тех реквизитов метаданных, для которых
допускается представление на разных языках.</p>

<p class="Regularbeforepicture">Рассмотрим
пример формы для элемента справочника <span class="Term">Номенклатура</span>. Для языка <span class="Interface">Русский</span> надписи
формы выглядят так:</p>

<p class="Picture"><IMG src="_img/img00139.gif?_=1496848987" WIDTH="521" ALT HEIGHT="389"></p>

<p class="MsoCaption">Рис.
140. Форма на русском языке</p>

<p class="Regularbeforepicture">Если
в ветви <span class="Interface">Языки</span> создано
несколько объектов (например, <span class="Interface">Русский</span> и <span class="Interface">Английский</span>), то
для смены языка нужно выбрать пункт <span class="Interface">Конфигурация</span> –
<span class="Interface">Язык редактирования
конфигурации</span>. В открывшемся окне выбора языка выбрать язык просмотра
конфигурации.</p>

<p class="Picture"><IMG src="_img/img00140.gif?_=1496848987" WIDTH="331" ALT HEIGHT="201"></p>

<p class="MsoCaption">Рис.
141. Выбор языка редактирования конфигурации</p>

<p class="MsoNormal">Аналогичный
результат можно получить с помощью кнопки выбора языка, расположенной в панели
состояния справа от кнопок <span class="Interface">CAP</span> и <span class="Interface">NUM</span> (правый
нижний угол основного окна конфигуратора).</p>

<p class="Regularbeforepicture">Конфигуратор
заменит текст надписей на варианты надписей выбранного языка.</p>

<p class="Picture"><IMG src="_img/img00141.gif?_=1496848987" WIDTH="528" ALT HEIGHT="394"></p>

<p class="MsoCaption">Рис.
142. Форма на английском языке</p>

<p class="Regularbeforepicture">Разумеется,
текст надписей должен быть заранее введен для каждого элемента управления. Для
ввода текста в палитре свойств элемента управления <span class="Term">Надпись</span> в свойстве <span class="Term">Заголовок</span> (<span class="Term">Текст</span> или <span class="Term">Синоним</span>, в зависимости от типа элемента управления)
нужно нажать кнопку «лупа» (см. <a href="#_ref214777666">рис.143</a>). На экран выводится окно <span class="Interface">Строки на разных
языках</span>.</p>

<p class="Picture"><IMG src="_img/img00142.gif?_=1496848987" WIDTH="383" ALT HEIGHT="328"></p>

<p class="MsoCaption"><a name="_ref214777666">Рис. </a>143. Строки на
разных языках</p>

<p class="Note"><span class="Note">Совет.</span>
В конфигурации нет ограничений на число языков. Однако не следует создавать
объекты типа <span class="Interface">Языки</span> «с запасом», т. к.
создать объект <span class="Interface">Язык</span> можно в
любой момент.</p>

<p class="MsoNormalCxSpFirst">В
свойстве <span class="Interface">Код языка</span>
указывается код языка, например, <span class="Interface">EN</span> для языка <span class="Interface">Английский</span>.</p>

<p class="MsoNormalCxSpMiddle">Если
в конфигурации определено два и более объекта типа <span class="Interface">Языки</span>, то для
свойства <span class="Term">Синоним</span> и <span class="Term">Заголовок</span> элемента
управления появляется кнопка редактирования текста на разных языках (в виде
лупы).</p>

<p class="MsoNormalCxSpMiddle">Первый
объект языка программа создает в соответствии с выбором языка (страны) при
создании новой информационной базы.</p>

<p class="MsoNormalCxSpLast">Чтобы
сформировать текстовое представление реквизита для отображения в форме,
используется следующее правило:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Выполняется получение заголовка отображаемого
объекта на <span class="Bold">языке конфигурации</span> текущего пользователя.
Если заголовок задан, используется именно он.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Выполняется попытка получения синонима отображаемого
объекта на <span class="Bold">языке конфигурации</span> текущего пользователя.
Если синоним задан, используется именно он.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Дальнейшее зависит от вида отображаемого
объекта:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
для стандартных реквизитов получается представление
на языке <span class="Bold">локализации платформы</span>;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
для объектов, созданных прикладным разработчиком,
используется имя объекта так (и на <span class="Bold">том языке</span>), как оно
задано в конфигурации.</p>

<p class="Note">ВНИМАНИЕ! Если
тексты в свойствах <span class="Term">Синоним</span>
или <span class="Term">Заголовок</span>
введены, то изменение кода языка в свойстве <span class="Interface">Код языка</span> приведет к «потере» введенных текстов (тексты
остаются для прежнего значения кода). Тексты «восстанавливаются» при указании
прежнего значения кода языка.</p>

<p class="MsoNormalCxSpFirst">Для редактирования текстов и выполнения задач
локализации (создания интерфейса на другом языке) следует использовать режим <span class="Interface">Редактирование текстов интерфейса</span> (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 27. инструменты разработки.htm?_=1496848987#_ref428285443">здесь</a>).</p>

<p class="MsoNormalCxSpMiddle">В том случае, если предполагается
использовать прикладное решение на мобильных устройствах, рекомендуется
указывать коды языков в соответствии со стандартом ISO 639 (<a href="http://www.iso.org/iso/ru/language_codes" target="_blank">http://www.iso.org/iso/ru/language_codes</a>). В
противном случае при проверке конфигурации будет выдаваться предупреждение.</p>

<p class="MsoNormalCxSpLast">В коде языка запрещено использование
следующих символов: <span class="Interface">#</span>, <span class="Interface">*</span>, <span class="Interface">|</span>, <span class="Interface">\</span>, <span class="Interface">:</span>, <span class="Interface">&quot;</span>, <span class="Interface">&lt;</span>, <span class="Interface">&gt;</span>, <span class="Interface">?</span>, <span class="Interface">/</span>.</p>

<a name="_ref141014885"></a><a name="_ref141014814"></a><a name="_ref141014745"></a><a name="_ref141003322"></a><a name="_ref141003319"></a><a id="TI000000276" class="bookmark" name="issogl1_5.6_общие_свойства_объектов_конфигурации"><h2>5.6. Общие свойства объектов конфигурации</h2></a>

<p class="MsoNormal">Данный
раздел содержит описание общих свойств объектов метаданных.</p>

<a name="_ref216000149"></a><a id="TI000000277" class="bookmark" name="issogl2_5.6.1_основные_свойства"><h3>5.6.1. Основные свойства</h3></a>

<p class="MsoNormal">Практически
все объекты конфигурации имеют следующие свойства, располагающиеся в категории
свойств <span class="Interface">Основные</span>:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">Имя</span> – имя
объекта конфигурации. Имя должно состоять из одного слова, начинаться с буквы и
не содержать специальных символов, кроме «<span class="Interface">_</span>». По имени
объекта производится доступ и управление объектом конфигурации средствами
встроенного языка. Имена объектов конфигурации не должны совпадать с
зарезервированными словами языка запросов (список зарезервированных слов
см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 8. работа с запросами.htm?_=1496848987#_ref305601932">здесь</a>). Длина имени объекта конфигурации не может превышать
80 символов. Конфигурации, созданные в «1С:Предприятии» версии 8.3.6 и младше,
могут иметь имена объектов конфигурации длиннее 80 символов, однако, при
попытке редактировать такой объект в версии 8.3.7 и выше – имя будет
необходимо сократить до 80 символов.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Interface">Синоним</span> – помимо
имени можно указать также его синоним. Если конфигурация создается для
использования на разных языках, то следует указать синонимы на используемых
языках. При работе с системой «1С:Предприятие» синоним будет выдаваться в
различных списках выбора, заголовках окон, текстах надписей, при формировании
интерфейсов с учетом текущего языка. Синоним не имеет ограничений на
использование символов. Если синоним не задан, выбирается имя.</p>

<p class="Note"><span class="Note">Примечание.</span><span class="Interface"> </span>Имя или
синоним, отображаемые пользователю, также называются <span class="Bold">представлением
объекта конфигурации</span>.</p>

<p class="MsoListBullet">&#9679; 
<span class="Interface">Комментарий</span> – произвольная
строка символов. Как правило, расшифровывает и поясняет имя объекта.</p>

<a name="_ref215490491"></a><a id="TI000000278" class="bookmark" name="issogl2_5.6.2_представление_объектов_метаданных"><h3>5.6.2. Представление объектов метаданных</h3></a>

<p class="Regularbeforepicture">Для
многих объектов метаданных реализована возможность задавать различные
представления объекта. Это сделано для того, чтобы разработчик имел возможность
задать представление стандартных команд, их подсказок, а также заголовков форм.</p>

<p class="Picture"><IMG src="_img/img00143.gif?_=1496848987" WIDTH="383" ALT HEIGHT="365"></p>

<p class="MsoCaption">Рис.
144. Представление объектов</p>

<p class="MsoListBullet">&#9679; 
<span class="Interface">Представление объекта</span> (для
регистра – <span class="Interface">записи</span>):</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
название одного объекта (например, <span class="Interface">Расчетный счет</span>);</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
используется в представлении стандартной команды
(создание объекта).</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">Расширенное представление
объекта</span> (для регистра – <span class="Interface">записи</span>) используется
для формирования заголовка формы объекта. Например, <span class="Interface">Расчетный счет
организации</span>.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Interface">Представление списка</span>:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
название списка объектов (например, <span class="Interface">Расчетные счета</span>);</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
используется в представлении стандартной команды
(команда открытия списка объектов).</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">Расширенное представление
списка</span> – используется для формирования заголовка формы списка
(например, <span class="Interface">Расчетные счета
организации</span>).</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Расширенное представление</span> –
заголовок формы отчета или обработки (например, <span class="Interface">Отчет о взаиморасчетах
по расчетным счетам</span>).</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Пояснение</span> – используется
для формирования подсказки к стандартным командам (например, <span class="Interface">Расчетные счета наших
организаций</span>).</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Interface">Картинка</span> – картинка
для представления подсистемы в панели разделов.</p>

<p class="MsoNormalCxSpFirst">Следует
учитывать, что заполнение свойств, связанных с представлением объектов и
списков, необходимо только в тех случаях, когда требуется несколько уточнить
информацию, отображаемую для объекта по умолчанию.</p>

<p class="MsoNormalCxSpMiddle">Например,
существует справочник <span class="Term">Товары</span> (<span class="Interface">Имя</span> объекта
метаданных – <span class="Interface">Товары</span>, <span class="Interface">Синоним</span> объекта
метаданных – <span class="Interface">Товары</span>), элементами
которого могут быть товары и услуги. Но в текстах команд вы хотите использовать
единственное число для команды (создать товар) и не хотите отражать информацию
об услугах, т. к. она «удлиняет» текст команды. В то же время в форме
объекта вы хотите указать пользователю, что в данной форме можно редактировать
и товары, и услуги. В этом случае имеет смысл свойство <span class="Interface">Представление объекта</span>
заполнить текстом <span class="Interface">Товар</span>, а
свойство <span class="Interface">Расширенное
представление</span> объекта заполнить текстом <span class="Interface">Товар (услуга)</span>.
Тогда команда создания элемента справочника товары будет выглядеть как <span class="Interface">Товар: создать</span>,
а заголовок формы – <span class="Interface">Товар (услуга)</span>.</p>

<p class="MsoNormalCxSpLast">Подробную
информацию о том, какие из вышеперечисленных свойств каким объектам метаданных
соответствуют см. <A href="/db/content/v8310doc/src/руководство разработчика/приложение 3. правила формирования текстов стандартных команд и автоматических заголовков форм.htm?_=1496848987#_ref441854504">здесь</a>. Там же можно получить информацию о правилах
формирования текстов стандартных команд, подсказок команд и заголовков форм.</p>

<a name="_ref214782338"></a><a name="_ref323141391"></a><a name="_ref381267196"></a><a id="TI000000279" class="bookmark" name="issogl2_5.6.3_произвольное_представление_данных"><h3>5.6.3. Произвольное представление данных</h3></a>

<p class="MsoNormalCxSpFirst">Стандартное представление данных, которое
формирует система, может не устраивать пользователя. Например, если с системой
работают пользователи, говорящие на разных языках и объекты системы содержат
всю необходимую информацию также на разных языках. Например, для товаров
существует два названия: на русском и на английском языке. А выводить нужный
текст необходимо в зависимости от кода локализации сеанса. Также нужно, чтобы
представление на нужном языке генерировалось везде, где формируется
представление объекта: динамический список, отчет и т. д.</p>

<p class="MsoNormalCxSpMiddle">Для реализации этой задачи существует
специальный механизм, позволяющий разработчику определить реквизиты, которые
участвуют в формировании представления, а также описать алгоритм, по которому
формируется представление объекта.</p>

<p class="MsoNormalCxSpLast">Данная возможность доступна для следующих
объектов конфигурации:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Планы обмена,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Справочники,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Документы,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Планы видов характеристик,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Планы счетов,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Планы видов расчета,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Бизнес-процессы,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Задачи,</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Таблицы внешних источников данных.</p>

<p class="MsoNormalCxSpFirst">Механизм формирования представления состоит
из двух этапов: определение реквизитов, участвующих в формировании представления
и собственно формирование представления.</p>

<p class="MsoNormalCxSpMiddle">Для определения списка реквизитов используется
обработчик события <span class="Term">ОбработкаПолученияПолейПредставления</span>
менеджера соответствующего объекта. Обработчик вызывается при первой попытке
получения представления выбранного объекта, и результат работы сохраняется на
время сеанса. В данном обработчике необходимо заполнить массив <span class="Term">Поля</span>
именами реквизитов, которые будут участвовать в формировании представления.
Если параметр <span class="Term">СтандартнаяОбработка</span>
в обработчике будет установлено в значение <span class="Term">Истина</span>,
то после завершения работы обработчика, массив <span class="Term">Поля</span>
будет очищен и заполнен полями, используемыми для формирования стандартного
представления данного объекта. В противном случае платформа будет использовать
только те имена полей, которые были помещены в массив <span class="Term">Поля</span>.</p>

<p class="MsoNormalCxSpMiddle">Не рекомендуется включать в список полей,
используемых для получения представления, поля неограниченной длины. Если это
будет сделано, то возможно возникновение проблем получения представления поля
для полей составного типа и при использовании представления в запросах с
группировкой и получением уникальных записей.</p>

<p class="MsoNormalCxSpLast">Также настоятельно не рекомендуется
передавать в списке полей ссылочные поля (включая поле <span class="Term">Ссылка</span>)
и получать нужные данные «через точку» от таких полей. В этом случае
производительность системы будет радикальным образом снижена из-за того, что
требуемые поля будут получаться крайне неэффективно. В тоже время, получение данных
для полей, указанных в параметре <span class="Term">Поля</span>,
будет выполняться наиболее эффективным образом, и при этом не выполняется
«лишних» чтений объектов, для которых формируется представление.</p>

<p class="Note"><span class="Note">Примечание.</span> Примеры, приведенные
ниже, не являются законченным. Они предназначены для демонстрации механизмов работы
с произвольным представлением.</p>

<p class="MsoNormal">Допустим, что в справочнике <span class="Term">Товары</span>
есть реквизиты <span class="Term">РусскоеНаименование</span>,
<span class="Term">АнглийскоеНаименование</span>
и <span class="Term">Артикул</span>,
которые должны участвовать в формировании представления. В этом случае
обработчик получения полей представления (в модуле менеджера справочника <span class="Term">Товары</span>)
будет выглядеть следующим образом:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">Процедура</span> ОбработкаПолученияПолейПредставления<span class="operator">(</span>Поля<span class="operator">,</span> СтандартнаяОбработка<span class="operator">)</span>
    Поля<span class="operator">.</span>Добавить<span class="operator">(</span><span class="string">&quot;РусскоеНаименование&quot;</span><span class="operator">)</span><span class="operator">;</span>
 Поля<span class="operator">.</span>Добавить<span class="operator">(</span><span class="string">&quot;АнглийскоеНаименование&quot;</span><span class="operator">)</span><span class="operator">;</span>
    Поля<span class="operator">.</span>Добавить<span class="operator">(</span><span class="string">&quot;Артикул&quot;</span><span class="operator">)</span><span class="operator">;</span>
    СтандартнаяОбработка <span class="operator">=</span> <span class="keyword">Ложь</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span></pre>

<p class="MsoNormal">При необходимости получения представления
система вызывает обработчик события ОбработкаПолученияПредставления в
менеджере соответствующего объекта. В этот обработчик передаются значения реквизитов,
участвующих в формировании представления. Программный код, расположенный в
обработчике, выполняет формирование текста представления.</p>

<p class="Note"><span class="Note">Внимание!</span> Обработчик события ОбработкаПолученияПредставления
вызывается при любой необходимости получения представления какого-либо объекта
информационной базы. Избыточные данные, или неправильный выбор данных для
формирования представления, может привести к существенному замедлению работы
системы.</p>

<p class="MsoNormalCxSpFirst">Обработчик <span class="Term">ОбработкаПолученияПредставления</span>
формирует представление и возвращает его с помощью параметра <span class="Term">Представление</span>
обработчика. Данные, необходимые для формирования представления, передаются с
помощью параметра <span class="Term">Данные</span>.
<span class="Term">Данные</span>
представляют из себя структуру, где ключом является имя реквизита, а
значением – значение реквизита для текущего объекта. Если параметр <span class="Term">СтандартнаяОбработка</span>
установить в значение <span class="Term">Истина</span>,
то система попытается сформировать стандартное представление для текущего объекта,
исходя из переданных данных. Если в параметре <span class="Term">Данные</span>
отсутствуют реквизиты, необходимые для формирования стандартного представления,
то представлением будет пустая строка. Если формирование представления
выполняется для нового объекта (еще не сохраненного в информационной базе), то
в качестве значения поля <span class="Term">Ссылка</span>
структуры <span class="Term">Данные</span>,
будет передаваться значение <span class="Term">Неопределено</span>.</p>

<p class="MsoNormalCxSpLast">Рассмотрим пример формирования представления
для двуязычного справочника <span class="Term">Товары</span>:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">Процедура</span> ОбработкаПолученияПредставления<span class="operator">(</span>Данные<span class="operator">,</span> Представление<span class="operator">,</span> СтандартнаяОбработка<span class="operator">)</span>
    СтандартнаяОбработка <span class="operator">=</span> <span class="keyword">Ложь</span><span class="operator">;</span>
    КодЛокализацииСеанса <span class="operator">=</span> ВРег<span class="operator">(</span>ТекущийКодЛокализации<span class="operator">(</span><span class="operator">)</span><span class="operator">)</span><span class="operator">;</span>
    <span class="keyword">Если</span> Найти<span class="operator">(</span>КодЛокализацииСеанса<span class="operator">,</span> <span class="string">&quot;RU&quot;</span><span class="operator">)</span> <span class="operator">&lt;</span><span class="operator">&gt;</span> <span class="number">0</span> <span class="keyword">Тогда</span>
        Текст <span class="operator">=</span> Данные<span class="operator">.</span>РусскоеНаименование<span class="operator">;</span>
    <span class="keyword">ИначеЕсли</span>  Найти<span class="operator">(</span>КодЛокализацииСеанса<span class="operator">,</span> <span class="string">&quot;EN&quot;</span><span class="operator">)</span> <span class="operator">&lt;</span><span class="operator">&gt;</span> <span class="number">0</span> <span class="keyword">Тогда</span>
        Текст <span class="operator">=</span> Данные<span class="operator">.</span>АнглийскоеНаименование<span class="operator">;</span>
    <span class="keyword">Иначе</span>
        Текст <span class="operator">=</span> Данные<span class="operator">.</span>РусскоеНаименование<span class="operator">;</span>
    <span class="keyword">КонецЕсли</span><span class="operator">;</span>
    Представление <span class="operator">=</span> Текст <span class="operator">+</span> <span class="string">&quot;(&quot;</span> <span class="operator">+</span> Данные<span class="operator">.</span>Артикул <span class="operator">+</span> <span class="string">&quot;)&quot;</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span></pre>

<p class="MsoNormal">Следует помнить, что если в обработчике <span class="Term">ОбработкаПолученияПредставления</span>
будет совершена ошибка встроенного языка, то возможна ситуация, когда работа
приложения будет аварийно завершена.</p>

<a name="_ref425411626"></a><a id="TI000000280" class="bookmark" name="issogl2_5.6.4_стандартные_реквизиты"><h3>5.6.4. Стандартные реквизиты</h3></a>

<p class="Regularbeforepicture">Для
того чтобы на уровне конфигурации переопределять некоторые интерфейсные
свойства (такие как синоним, проверка заполнения и т. д.) стандартных
реквизитов (например, <span class="Term">Код</span>, <span class="Term">Наименование</span>, <span class="Term">Родитель</span>) и стандартных табличных частей (например,
<span class="Term">ВидыСубконто</span>, <span class="Term">БазовыеВидыРасчета</span>) прикладных объектов, существует
возможность настройки этих свойств.</p>

<p class="Picture"><IMG src="_img/img00144.gif?_=1496848987" WIDTH="587" ALT HEIGHT="229"></p>

<p class="MsoCaption"><a name="_ref214347171">Рис. </a>145. Стандартные
реквизиты</p>

<p class="MsoNormalCxSpFirst">Для
этого в палитре свойств ряда объектов существуют команды, открывающие списки
стандартных реквизитов и стандартных табличных частей (см. <a href="#_ref214347171">рис.145</a>). Такие команды доступны для тех объектов, у которых
имеются стандартные реквизиты и стандартные табличные части.</p>

<p class="MsoNormalCxSpMiddle">С
помощью палитры свойств можно переопределять некоторые свойства стандартных
реквизитов таким образом, чтобы они более полно соответствовали требованиям
решаемой прикладной задачи. Например, для свойства <span class="Term">Владелец</span> справочника <span class="Term">РасчетныеСчета</span> можно задать синоним <span class="Interface">Контрагент</span>.
Тогда во всех формах представление этого реквизита (<span class="Term">Владелец</span>) по умолчанию будет выглядеть как «<span class="Interface">Контрагент:</span>».</p>

<p class="MsoNormalCxSpMiddle">В
том случае если свойства стандартного реквизита (или стандартной табличной
части) не заданы, будут использованы свойства стандартных реквизитов по
умолчанию.</p>

<p class="MsoNormalCxSpLast">По
своему набору свойств стандартный реквизит практически ничем не отличается от
любого другого реквизита, за исключением того, что нельзя изменить:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
имя стандартного реквизита,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
тип стандартного реквизита,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
имя стандартной табличной части,</p>

<p class="MsoListBulletCxSpLast">&#9679; 
индексирование стандартного реквизита.</p>

<p class="Note"><span class="Note">ВНИМАНИЕ!</span> Наличие описания стандартного реквизита не
меняет его имени, то есть все обращения к реквизиту во встроенном языке и в
языке запросов остаются неизменными.</p>

<a name="_ref214715306"></a><a name="_ref215985457"></a><a name="_ref346704961"></a><a name="_ref416868913"></a><a id="TI000000281" class="bookmark" name="issogl2_5.6.5_предопределенные_данные"><h3>5.6.5. Предопределенные данные</h3></a>

<a name="_ref346729278"></a><a name="_ref370403654"></a><a id="TI000000282" class="bookmark" name="issogl3_5.6.5.1_общая_информация"><h4>5.6.5.1. Общая информация</h4></a>

<p class="MsoNormal"><span class="Bold">Предопределенные данные</span> – это элементы прикладных
объектов, которые создаются в конфигураторе и обращение к которым возможно по
имени, без предварительного поиска. Предопределенные данные имеет смысл создавать
в том случае, если какой-либо элемент данных будет нужен постоянно и требуется
упростить обращение к этому элементу из программного кода. Например, в
справочнике <span class="Term">Товары</span> можно завести предопределенный элемент <span class="Term">Услуга</span>, обращение к которому будет выглядеть
следующим образом: <span class="Term">Справочники.Товары.Услуга</span>. Предопределенными
могут быть как элементы, так и группы элементов. Группы можно создавать в тех
случаях, когда предопределенные элементы создаются в иерархических объектах,
например в иерархическом справочнике. Предопределенные данные могут быть созданы:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
для справочников (см. <a href="#_ref346707986">здесь</a>),</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
планов счетов (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 11. бухгалтерский учет.htm?_=1496848987#_ref346708029">здесь</a>),</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
планов видов характеристик (см. <a href="#_ref45029020">здесь</a>),</p>

<p class="MsoListBulletCxSpLast">&#9679; 
планов видов расчета (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 12. периодические расчеты.htm?_=1496848987#_ref70159817">здесь</a>).</p>

<p class="MsoNormal">После
создания предопределенного элемента в конфигураторе, возможность создания или
обновления связанного с ним элемента данных определяется несколькими
параметрами:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Значение свойства объекта в информационной базе.
Получить и установить значение этого свойства можно в
режиме «1С:Предприятие» с помощью методов <span class="Term">ПолучитьОбновлениеПредопределенныхДанных()</span>
и УстановитьОбновлениеПредопределенныхДанных();</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Значение свойства объекта конфигурации ОбновлениеПредопределенныхДанных. Устанавливается в конфигураторе;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Значение, установленное для всей информационной
базы. Получить и установить значение этого свойства можно в режиме
«1С:Предприятие» с помощью методов <span class="Term">ПолучитьОбновлениеПредопределенныхДанныхИнформационнойБазы()</span> и <span class="Term">УстановитьОбновлениеПредопределенныхДанныхИнформационнойБазы()</span>;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Вид узла распределенной информационной базы (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 15. механизмы обмена данными.htm?_=1496848987#_ref346711531">здесь</a>). Значение этого параметра определяется
автоматически:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
Для корневого узла и не распределенной
информационной базы принимает значение <span class="Interface">Обновлять
автоматически</span>;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
Для подчиненного узла распределенной
информационной базы – <span class="Interface">Не обновлять
автоматически</span>.</p>

<p class="MsoNormal">Каждый
вышеописанный параметр может принимать одно из следующих значений (кроме
параметра, описывающего вид узла распределенной информационной базы):</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">Не обновлять автоматически</span> –
в этом случае система не выполняет создание или обновление элемента данных при
создании или изменении предопределенных данных. Следует понимать, что если для
объекта конфигурации установлено такое свойство, то при обращении к
предопределенным данным может генерироваться исключение, т. к.
отсутствует элемент данных, связанный с предопределенным элементом;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Обновлять автоматически</span> –
в этом случае система автоматически создаст (или обновит существующие) элементы
данных для новых (или измененных) предопределенных данных;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Interface">Авто</span> – система
автоматически определяет необходимость выполнения обновления.</p>

<p class="MsoNormalCxSpFirst">Выполняемое
действие (обновлять или не обновлять) определяется последовательным анализом
вышеперечисленных параметров (в указанном порядке) до тех пор, пока не будет
обнаружено значение, отличное от значения <span class="Interface">Авто</span>. Это
значение и будет определять возможность создания или обновления
предопределенных элементов.</p>

<p class="MsoNormalCxSpLast">Связь
элемента данных и элемента предопределенных данных осуществляется с помощью
свойства ИмяПредопределенныхДанных. С помощью этого свойства имеется возможность
выполнять следующие действия:</p>

<p class="MsoListBullet">&#9679; 
Связывать элемент предопределенных данных с
элементов данных. Для этого следует присвоить свойству ИмяПредопределенныхДанных имя предопределенного элемента данных,
который надо связать с данными:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">ЭлементСсылка <span class="operator">=</span> Справочник<span class="operator">.</span>Товары<span class="operator">.</span>НайтиПоНаименованию<span class="operator">(</span><span class="string">&quot;Услуга доставки&quot;</span><span class="operator">)</span><span class="operator">;</span>
Объект <span class="operator">=</span> ЭлементСсылка<span class="operator">.</span>ПолучитьОбъект<span class="operator">(</span><span class="operator">)</span><span class="operator">;</span>
Объект<span class="operator">.</span>ИмяПредопределенныхДанных <span class="operator">=</span> <span class="string">&quot;Услуга&quot;</span><span class="operator">;</span>
Объект<span class="operator">.</span>Записать<span class="operator">(</span><span class="operator">)</span><span class="operator">;</span></pre>

<p class="IndentlistCxSpFirst">В
результате этой операции, предопределенному элементу <span class="Term">Услуга</span> справочника <span class="Term">Товары</span> будет сопоставлен элемент данных с
именем <span class="Interface">Услуга доставки</span>.</p>

<p class="IndentlistCxSpLast">При
записи объекта проверяется, что в информационной базе не существует другого
элемента данных с именем предопределенных данных, установленного в значение, с
которым записывается элемент данных.</p>

<p class="MsoListBullet">&#9679; 
«Отключить» элемент данных от элемента
предопределенных данных. Для этого необходимо присвоить свойству <span class="Term">ИмяПредопределенныхДанных</span> пустую строку и
записать элемент:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">Объект <span class="operator">=</span> Справочник<span class="operator">.</span>Товары<span class="operator">.</span>Услуга<span class="operator">.</span>ПолучитьОбъект<span class="operator">(</span><span class="operator">)</span><span class="operator">;</span>
Объект<span class="operator">.</span>ИмяПредопределенныхДанных <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="operator">;</span>
Объект<span class="operator">.</span>Записать<span class="operator">(</span><span class="operator">)</span><span class="operator">;</span></pre>

<p class="Indentlist">Если
попробовать обратиться к предопределенному элементу <span class="Term">Справочник.Товары.Услуга</span> после выполнения вышеприведенного
примера, то будет сгенерировано исключение.</p>

<p class="MsoNormal">Таким
образом, процесс смены элемента данных, связанного с предопределенными данными,
выполняется в два этапа:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Выполняется «отключение» существующего элемента
данных от предопределенного элемента;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Выполняется связывание нового элемента данных с
предопределенным элементом.</p>

<p class="MsoNormal">Создание
элементов данных, связанных с предопределенными данными, может быть выполнено
одним из трех способов:</p>

<p class="MsoListBullet">&#9679; 
Автоматически, во время реструктуризации
информационной базы. Это происходит в следующем случае:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
Разрешено автоматическое создание и обновление
предопределенных данных;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
Предопределенные данные ранее создавались в
данной области данных или информационной базе.</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Автоматически, при первом обращении к таблице,
хранящей данных объекта конфигурации. Создание предопределенных элементов в
этом случае будет выполняться при условии, что создание предопределенных
элементов не запрещено.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
С помощью встроенного языка, указав свойство <span class="Term">ИмяПредопределенныхДанных</span> при создании
элемента данных. Этот способ можно использовать, если автоматическое создание
предопределенных элементов запрещено в свойствах объектов конфигурации.</p>

<p class="MsoNormalCxSpFirst">Обновление
данных, связанных с предопределенными, будет выполняться в том случае, если
разрешено автоматическое обновление предопределенных данных, предопределенные
данные связаны с реальными данными и предопределенные данные изменены в
конфигураторе. Во всех остальных случаях информация, введенная в конфигураторе,
не будет перенесена в информационную базу.</p>

<p class="MsoNormalCxSpMiddle">Изменение
порядка следования предопределенных элементов в предопределенных табличных
частях плана счетов и плана видов расчета обрабатывается в связанных данных, т. е.
порядок элементов в данных будет таким же, каким он задан в метаданных. Данные,
введенные пользователем (не предопределенные) будут располагаться после
предопределенных.</p>

<p class="MsoNormalCxSpLast">Если
в конфигураторе выполнено удаление элемента предопределенных данных, то будет
выполнено следующее:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Элемент данных, связанный с элементом
предопределенных данных, будет помечен на удаление.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
В списке субконто элемента плана счетов будут
удалены соответствующие записи.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
В списках ведущих, базовых и вытесняющих видов
расчета будут удалены соответствующие записи.</p>

<p class="MsoNormal">Для
принудительного создания элементов предопределенных данных (для справочников,
планов видов характеристик, планов видов расчетов и планов счетов) следует
воспользоваться методом ИнициализироватьПредопределенныеДанные<span class="Term">()</span>. Вызов этого метода выполнит принудительное
создание элементов предопределенных данных при выполнении следующих условий:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Предопределенные элементы ранее не создавались в
текущей области данных.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Обновление предопределенных данных настроено
таким образом, что создание и обновление предопределенных данных должно
выполняться.</p>

<p class="MsoNormalCxSpFirst">Если
указанные условия не выполняются – создание предопределенных элементов не
выполняется.</p>

<p class="MsoNormalCxSpMiddle">Если
в прикладном решении отключено автоматическое обновление предопределенных
данных, то удаление предопределенного элемента приводит к изменению в связанном
объекте данных (если таковой есть). Значение свойства <span class="Term">ИмяПредопределенныхДанных</span> заменяется значением
#xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx, где <span class="Term">xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</span> – это
уникальный идентификатор удаленного элемента метаданных.</p>

<p class="MsoNormalCxSpLast">Если
требуется получить список предопределенных элементов для объекта конфигурации,
то сделать это можно с помощью метода <span class="Term">ПолучитьИменаПредопределенных()</span>.</p>

<p class="Lang-subheader">Пример
получения списка предопределенных:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">Список <span class="operator">=</span> Метаданные<span class="operator">.</span>Справочники<span class="operator">.</span>Товары<span class="operator">.</span>ПолучитьИменаПредопределенных<span class="operator">(</span><span class="operator">)</span><span class="operator">;</span></pre>

<p class="MsoNormal">Если
метод вернул пустой массив, значит, у объекта конфигурации отсутствуют
предопределенные значения. В противном случае можно, например, для каждого
предопределенного элемента выполнить проверку наличия связанного элемента в
данных.</p>

<a name="_ref363658721"></a><a name="_ref393803122"></a><a id="TI000000283" class="bookmark" name="issogl3_5.6.5.2_работа_в_распределенной_информационной_базе"><h4>5.6.5.2. Работа в распределенной информационной базе</h4></a>

<p class="MsoNormal">При
работе в режиме распределенной информационной базы вместе с конфигурацией
передаются предопределенные элементы. Собственно элементы данных, связанные с
предопределенными данными, передаются обычным образом, с помощью плана обмена.
При этом автоматическое создание предопределенных данных в периферийной
информационной базе не произойдет, подробное описание причины
см. <a href="#_ref346729278">здесь</a>.</p>

<p class="Note"><span class="Note">Внимание!</span> Если данные, связанные с предопределенными
элементами, оказались получены в подчиненном узле раньше, чем конфигурация со
связанными предопределенными элементами, то автоматического «связывания» данных
и предопределенных данных не произойдет. Для этого потребуется повторно
выгрузить из центральной в периферийную информационную базу нужные элементы
данных.</p>

<p class="MsoNormalCxSpFirst">Если
начальный образ периферийной информационной базы создается до того, как с
главной информационной базой начали работать, можно воспользоваться специальным
методом <span class="Term">ИнициализацияПредопределенныхДанных()</span> для
создания предопределенных элементов, чтобы они автоматически попали в
периферийную информационную базу. Метод надо вызывать до того, как выполнено
создание начального образа.</p>

<p class="MsoNormalCxSpMiddle">При
отмене назначения главного узла (например, для выполнения каких-либо
специальных действий), следует учитывать следующий момент: при определении
необходимости создания или обновления предопределенных элементов такая
информационная база не будет считаться периферийной. В связи с этим, при первом
запуске такой информационной базы в режиме «1С:Предприятие», режим создания или
обновления предопределенных элементов может быть определен как <span class="Interface">Обновлять автоматически</span>.
Чтобы избежать этого, можно воспользоваться параметром командной строки <span class="Interface">/SetPredefinedDataUpdate</span>
(или использовать метод глобального контекста <span class="Term">УстановитьОбновлениеПредопределенныхДанныхИнформационнойБазы()</span>).</p>

<p class="MsoNormalCxSpMiddle">Этим
же способом можно воспользоваться в том случае, если используется универсальный
механизм обмена данными между информационными базами с подобными, но не
идентичными типовыми решениями, и необходимо сделать одну информационную базу
ведущей (в части предопределенных данных). Для информационной базы, где
необходимо создавать предопределенные элементы, следует указать значение <span class="Interface">Создавать
автоматически</span>, а для другой информационной базы – <span class="Interface">Не создавать автоматически</span>.
При этом связь элемента конфигурации и объекта данных будет выполняться по
имени предопределенного элемента.</p>

<p class="MsoNormalCxSpLast">Также
при использовании универсального механизма обмена данными следует учитывать
следующие особенности:</p>

<p class="MsoListBullet">&#9679; 
При записи объекта данных, который в
базе-источнике является предопределенным, система проверяет наличие такого же
имени предопределенных данных в типообразующем объекте конфигурации. Если такое
имя есть – объект будет загружен без изменений. Если такого имени нет –
в объекте при загрузке будет очищено свойство <span class="Term">ИмяПредопределенныхДанных</span>.</p>

<p class="IndentlistCxSpFirst">Например,
выполняется универсальный обмен данными между одинаковыми информационными
базами. В каждой информационной базе существует справочник <span class="Term">Номенклатура</span>. В каждой информационной базе в
этом справочнике содержится предопределенный элемент <span class="Term">Услуга</span>. Ссылки на эти объекты данных разные.</p>

<p class="IndentlistCxSpMiddle">Тогда
при загрузке произойдет следующее: система обнаружит наличие в базе-приемнике
предопределенный элемент <span class="Term">Услуга</span> и выполнит загрузку с сохранением
свойства <span class="Term">ИмяПредопределенногоЭлемента</span>. Это будет
возможно в том случае, если перед записью элемента
свойство <span class="Term">ОбменДанными.Загрузка</span>
установлено в значение <span class="Term">Истина</span>.
В противном случае будет вызвано исключение.</p>

<p class="IndentlistCxSpMiddle">Однако
при попытке обратиться в базе-приемнике к предопределенному элементу <span class="Term">Услуга</span>, произойдет ошибка, т. к. в
системе не может быть двух объектов, связанных с одинаковым предопределенным
элементом.</p>

<p class="IndentlistCxSpLast">Не
следует допускать возникновения такой ситуации. Прикладной разработчик должен самостоятельно
обрабатывать попытку загрузки объекта данных с дублирующим именем
предопределенных данных.</p>

<p class="MsoListBullet">&#9679; 
При записи объекта данных, у которого имя
предопределенных данных ссылается на удаленный элемент (имеет вид <span class="Term">#xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</span>), то
такой элемент будет записан в любом случае. Однако система не позволит записать
два объекта, ссылающиеся на один удаленный предопределенный элемент (с
одинаковым значением имени предопределенных данных), кроме как в случае, когда
перед записью элемента свойство <span class="Term">ОбменДанными.Загрузка</span> установлено в значение <span class="Term">Истина</span>.</p>

<p class="MsoNormal">При необходимости отключать информационной базы от
главного узла, при использовании подчиненных данных, рекомендуется следовать
рекомендациям, описание которых см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 15. механизмы обмена данными.htm?_=1496848987#_ref393802612">здесь</a>.</p>

<a id="TI000000284" class="bookmark" name="issogl3_5.6.5.3_работа_в_режиме_разделения"><h4>5.6.5.3. Работа в режиме разделения</h4></a>

<p class="MsoNormal">Описание
особенностей работы в разделенной информационной базе см. <A href="/db/content/v8310doc/src/руководство разработчика/приложение 7. особенности поведения системы в различных режимах.htm?_=1496848987#_ref346726459">здесь</a>.</p>

<a name="_ref399330554"></a><a id="TI000001481" class="bookmark" name="issogl2_5.6.6_нумерация_объектов"><h3>5.6.6. Нумерация объектов</h3></a>

<a id="TI000001482" class="bookmark" name="issogl3_5.6.6.1_общая_информация"><h4>5.6.6.1. Общая информация</h4></a>

<p class="MsoNormal">В
системе «1С:Предприятие» существуют объекты, которые необходимо нумеровать в
автоматическом или ручном режиме. Нумерация доступна для следующих объектов:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Справочники;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Документы;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Планы видов характеристик;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Бизнес-процессы;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Задачи;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Планы обмена.</p>

<p class="MsoNormal">В
зависимости от объекта, доступны различные виды и режимы нумерации. Нумерация
может выполняться для номера (документы, бизнес-процессы, задачи) и кода (все
остальные объекты). Рассмотрим особенности нумерации объектов более подробно.</p>

<p class="Lang-parameter">Тип
кода/номера</p>

<p class="MsoNormalCxSpFirst">Код/номер
объекта конфигурации может быть числовым или строковым.</p>

<p class="MsoNormalCxSpLast">Если
код/номер задается строковым, то появляется несколько различных дополнительных
возможностей:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Код/номер может состоять не только из цифр, а из
любых доступных символов.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Допустимая длина кода</span> –
определяет, какую длину будет иметь код/номер. Если это свойство имеет значение
<span class="Term">Фиксированная</span>, то длина кода/номера всегда
будет равна значению, указанному в качестве свойства <span class="Interface">Длина кода</span> или <span class="Interface">Длина номера</span>. При
этом строка будет дополняться пробелами. Если для свойства выбрано значение <span class="Term">Переменная</span>, то длина кода/номера не может быть
больше значения, указанного в свойствах <span class="Interface">Длина кода</span> или <span class="Interface">Длина номера</span>,
но фактическая длина будет определяться количеством символов, участвующих в
формировании номера.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Для кода/номера имеется возможность задавать
различные префиксы (см. <a href="#_ref405465400">здесь</a>).</p>

<p class="MsoNormalCxSpFirst">При
использовании строкового кода/номера необходимо понимать, как работает
нумерация. Рассмотрим пример нумерации. Тип кода справочника – <span class="Term">Строка</span>. Длина кода – 3 символа. Допустим,
оператор ввел номер <span class="Interface">01</span> и записал
элемент справочника. В результате этого действия максимальное значение номера,
который может быть создан системой автоматической нумерации, будет равен 99.
Это произошло потому, что при ручном вводе нового номера произошло явное
ограничение длины номер двумя разрядами. Система автоматической нумерации «не
умеет» автоматически расширять создаваемый номер, если длина номера явно
ограничена.</p>

<p class="MsoNormalCxSpMiddle">Таким
образом, для того, чтобы автоматическая нумерация строковых кодов/номеров
работала хорошо, рекомендуется или не указывать номера вручную или задавать
лидирующие нули так, чтобы любой код/номер всегда был максимально возможной
длины (с учетом ведущих нулей).</p>

<p class="MsoNormalCxSpLast">Также
не стоит забывать, что указание ведущих нулей обеспечит корректную сортировку
кодов/номеров в случае, если тип кода/номера является строкой.</p>

<p class="Lang-parameter">Признак
автонумерации</p>

<p class="MsoNormal">Данное
свойство определяет, будет система автоматически назначать код/номер для нового
объекта при записи объекта или нет. В случае включенной автоматической
нумерации система обеспечивает следующее поведение:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Выдается код/номер, не совпадающий ни с одним
номером в информационной базе;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Выдаваемый код/номер должен быть на 1 больше
максимального из значения кода/номера среди объектов информационной базы (по
которым обеспечивается нумерация) и кодов/номеров, которые выданы для объектов,
еще не записанных в информационную базу.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
При удалении или ручном уменьшении максимального
кода/номера, нумерация (при возможности) продолжается с максимального
оставшегося номера/кода. Продолжение нумерации с минимально возможного
кода/номера в общем случае не гарантируется.</p>

<p class="Lang-parameter">Контроль
уникальности</p>

<p class="MsoNormal">Данное
свойство определяет, будет система контролировать уникальность кода/номера для
объекта или нет. Контроль будет выполняться как для автоматически назначенного
кода/номера, так и для кода/номера, который указан вручную.</p>

<p class="Lang-parameter">Нумератор</p>

<p class="MsoNormal">Для
документов имеется возможность указывать нумератор, что, например, позволяет
обеспечить общее пространство номеров для нескольких разных видов документов.
Подробнее о нумераторах см. <a href="#_ref405465401">здесь</a>.</p>

<a id="TI000001483" class="bookmark" name="issogl3_5.6.6.2_серии_кодов_номеров"><h4>5.6.6.2. Серии кодов/номеров</h4></a>

<p class="MsoNormal">Для
справочников и планов видов характеристик имеется возможность указать, каким
образом будет формироваться новый номер. Это можно сделать с помощью свойства <span class="Interface">Серии кодов</span>:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">Во всем справочнике</span>/<span class="Interface">Во всем плане видов
характеристик</span> – в процессе формирования нового кода для элемента
справочника/плана видов характеристик будет сформирован код, уникальный во всем
справочнике/плане видов характеристик;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">В пределах подчинения</span> –
в процессе формирования нового кода для элемента справочника/плана видов
характеристик будет сформирован код, уникальный в пределах иерархии элемента
(элементы, имеющие одного и того же родителя будут иметь различные коды,
элементы, имеющие разных родителей могут иметь одинаковые коды);</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Interface">В пределах подчинения
владельцу</span> – в процессе формирования нового кода для элемента
справочника будет сформирован код, уникальный в пределах подчинения (элементы,
имеющие одного и того же владельца будут иметь различные коды; элементы,
имеющие различных владельцев могут иметь одинаковые коды). Данный вариант
применим только для справочников.</p>

<a id="TI000001484" class="bookmark" name="issogl3_5.6.6.3_периодичность_кодов_номеров"><h4>5.6.6.3. Периодичность кодов/номеров</h4></a>

<p class="MsoNormal">Для
документов и бизнес-процессов имеется возможность обеспечивать периодичность
номеров. Это означает, что нумерация начнется с начала, каждый раз, когда
начинается новый период. Периодичность настраивается с помощью свойства <span class="Interface">Периодичность</span>.
Данное свойство может принимать следующие значения:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">Непериодический</span> –
нумерация не зависит от временных периодов;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">В пределах года</span> –
нумерация начинается сначала при наступлении нового
года;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">В пределах квартала</span> –
нумерация начинается сначала при наступлении нового квартала;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">В пределах месяца</span> –
нумерация начинается сначала при наступлении нового месяца;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Interface">В пределах дня</span> –
нумерация начинается сначала при наступлении нового дня.</p>

<p class="MsoNormalCxSpFirst">Контроль
уникальности при периодической нумерации будет выполняться в рамках
установленного периода (за год, квартал, месяц или день). Если задана непериодическая
нумерация, то уникальность будет контролироваться во всех существующих объектах
данного вида.</p>

<p class="MsoNormalCxSpLast">Принадлежность
к тому или иному периоду определяется по дате документа или бизнес-процесса, а
не по текущей дате. В связи с этим изменение даты документа или бизнес-процесса
может привести к изменению номера в том случае, когда новая дата относится к
другой периодичности (если таковая установлена).</p>

<a name="_ref405465400"></a><a id="TI000001485" class="bookmark" name="issogl3_5.6.6.4_префиксы_нумерации"><h4>5.6.6.4. Префиксы нумерации</h4></a>

<p class="MsoNormal">При
автоматизации различных задач может возникать задача обеспечения раздельной
нумерации объектов одного вида в зависимости от некоторых условий. Например, в
информационной базе ведется учет от лица нескольких фирм и для каждой фирмы
нужна собственная нумерация документов. Данная задача решается с помощью <span class="Bold">префиксов</span> кодов/номеров. Префикс кода/номера – это
последовательность символов, предваряющих собственно код/номер, в рамках
которых происходит нумерация объектов. Использование префиксов нумерации имеет
несколько особенностей:</p>

<p class="MsoListNumberCxSpFirst">1.  Префиксы
используются только со строковым типом кода/номера.</p>

<p class="MsoListNumberCxSpMiddle">2. 
Длина кода/номера, при использовании префикса,
может оказаться больше, чем без использования префикса (на размер префикса и
разделителя). Так, если изначально длина кода была задана в 6 символов, и
необходимо начать использование префикса длиной 3 символа, то для сохранения
пространства нумерации в 6 разрядов, необходимо длину кода/номера увеличить до
9 символов (6 символов – собственно код и 3 символа – префикс).</p>

<p class="MsoListNumberCxSpLast">3. 
Для автоматического изменения префиксов в
зависимости от значений реквизитов объектов необходимо выполнять дополнительные
действия на встроенном языке.</p>

<p class="MsoNormalCxSpFirst">Для
установки нового номера, с учетом префикса, следует использовать обработчик <span class="Term">ПриУстановкеНовогоКода()</span>/<span class="Term">ПриУстановкеНовогоНомера()</span> или методы <span class="Term">УстановитьНовыйКод()</span>/<span class="Term">УстановитьНовыйНомер()</span> с указанием нужного
префикса. Если префикс не указан или указан не полностью, то среди существующих
в информационной базе префиксов будет определен максимальный префикс (в
алфавитном порядке) и в рамках этого префикса будет получен новый номер.</p>

<p class="MsoNormalCxSpMiddle">Рассмотрим
примеры поведения системы нумерации.</p>

<p class="MsoNormalCxSpLast">Есть
два объекта, у которых указаны номера <span class="Term">А-151</span> и <span class="Term">Б-152</span>. При установке нового кода для префикса <span class="Term">А– </span>будет получен номер <span class="Term">А-152</span>, а для префикса <span class="Term">Б–</span> – номер <span class="Term">Б-153</span>. Если в системе есть объекты со
следующими номерами: <span class="Term">АА151</span>, <span class="Term">АБ150</span> и <span class="Term">БВ114</span>, то, в зависимости от заданного
префикса, возможны несколько вариантов полученных номеров (каждое описание
действий префикса отталкивается от стартовых значений номеров и не учитывает
действия других примеров):</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Указан префикс <span class="Term">АА</span>. В этом случае будет получен номер <span class="Term">АА152</span>.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Указан префикс <span class="Term">АБ</span>. В этом случае будет получен номер <span class="Term">АБ151</span>.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Указан префикс <span class="Term">А</span>. В этом случае будет получен номер <span class="Term">АБ151</span>. Такой номер будет получен в результате
того, что префикс указан не полностью и система доопределит максимальный
префикс (в алфавитном порядке). Этим префиксом будет префикс <span class="Term">АБ</span> и в рамках этого префикса будет получен
новый номер: <span class="Term">АБ152</span>.</p>

<p class="MsoNormalCxSpFirst">Рассмотрим
пример установки префикса в зависимости от значения реквизита объекта.</p>

<p class="MsoNormalCxSpLast">Допустим,
что у нас существует документ, который содержит реквизит <span class="Term">Организация</span> типа <span class="Term">СправочникСсылка</span>. Реквизит <span class="Term">Префикс</span> (типа <span class="Term">Строка</span>) справочника <span class="Term">Организации</span> содержит префикс номера документа.
Таким образом, для каждой организации будет поддерживаться собственная
уникальная нумерация. Для назначения префикса следует в модуле объекта используемого
документа создать обработчик <span class="Term">ПриУстановкеНовогоНомера()</span>, в котором будет
устанавливаться префикс номера документа в зависимости от организации,
выбранной в конкретном экземпляре документа.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">Процедура</span> ПриУстановкеНовогоНомера<span class="operator">(</span>СтандартнаяОбработка<span class="operator">,</span> Префикс<span class="operator">)</span>
    Префикс <span class="operator">=</span> Организация<span class="operator">.</span>Префикс<span class="operator">+</span><span class="string">&quot;-&quot;</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span></pre>

<a id="TI000001486" class="bookmark" name="issogl3_5.6.6.5_особенности_работы_механизма_автонумерации"><h4>5.6.6.5. Особенности работы механизма автонумерации</h4></a>

<p class="MsoNormal">Контроль
уникальности кода/номера объекта, если установлено свойство <span class="Interface">Контроль уникальности</span>,
выполняется при его записи, вне зависимости от режима автонумерации объектов и
того, каким образом объекту присваивается новый код/номер – вручную или
автоматически. Если объект записывается в «режиме загрузки» (при записи объекта
свойство <span class="Term">ОбменДанными.Загрузка</span> установлено в значение <span class="Term">Истина</span>) – контроль уникальности
кода/номера не производится.</p>

<a name="_ref425411609"></a><a id="TI000000285" class="bookmark" name="issogl2_5.6.7_ввод_по_строке"><h3>5.6.7. Ввод по строке</h3></a>

<a name="_ref385239722"></a><a id="TI000001456" class="bookmark" name="issogl3_5.6.7.1_общая_информация"><h4>5.6.7.1. Общая информация</h4></a>

<p class="Regularbeforepicture">Для
прикладных объектов (справочники, документы, планы видов характеристик, планы
счетов, планы видов расчета, регистры, бизнес-процессы и задачи, а также планы
обмена) в свойстве <span class="Interface">Ввод по строке</span>
можно указать те реквизиты, по которым выполняется поиск. Если ввод по строке
разрешен (заданы соответствующие реквизиты), то допустимо в поле ввода
соответствующего типа не выполнять выбор из формы объекта, а ввести информацию,
которая содержится в заданных реквизитах объекта.</p>

<p class="Picture"><IMG src="_img/img00145.gif?_=1496848987" WIDTH="478" ALT HEIGHT="225"></p>

<p class="MsoCaption"><a name="_ref214786997">Рис. </a>146. Ввод по строке</p>

<p class="MsoNormalCxSpFirst">Например,
у нас есть справочник <span class="Term">Номенклатура</span>, в котором находится несколько
товаров, начинающихся со слова <span class="Interface">Bosch</span>. Тогда,
введя в поле ввода номенклатуры слово <span class="Interface">bosс</span>, мы
получим список товаров, которые начинаются с этого слова (см. <a href="#_ref214786997">рис.146</a>).</p>

<p class="MsoNormalCxSpLast">В
качестве реквизитов, по которым будет выполняться поиск, могут выступать:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Для справочников, планов видов характеристик,
планов счетов, планов видов расчета, планов обмена – <span class="Term">Код</span> и <span class="Term">Наименование</span>.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Для документов – <span class="Term">Номер</span>.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Для бизнес-процессов и задач – <span class="Term">Номер</span> и <span class="Term">Наименование</span>.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Реквизиты, имеющие тип <span class="Term">Число</span> или <span class="Term">Строка</span>, для которых свойство <span class="Interface">Индексировать</span>
имеет значение <span class="Interface">Индексировать</span>
или <span class="Interface">Индексировать с доп.
упорядочиванием</span>. Примером последних может служить поле для ввода артикула,
штрихкода, ИНН.</p>

<p class="Regularbeforepicture">Для
формирования списка реквизитов нужно нажать кнопку выбора и в открывшемся
диалоге перенести в левый список те поля, по которым может производиться ввод
по строке.</p>

<p class="Picture"><IMG src="_img/img00146.gif?_=1496848987" WIDTH="438" ALT HEIGHT="291"></p>

<p class="MsoCaption">Рис.
147. Настройка ввода по строке</p>

<p class="MsoNormal">Если
полей несколько, то установить порядок их следования. При поиске по строке
поиск выполняется в полях в той последовательности, в которой они приведены в
данном диалоге. Например, для элемента справочника <span class="Term">Номенклатура</span> ввод
может осуществляться как по коду, так и по артикулу. Если значение кода одного
элемента совпадет со значением артикула другого, то в список найденные значения
попадут в том порядке, в котором указаны при настройке.</p>

<p class="Note"><span class="Note">ВНИМАНИЕ!</span> При выполнении поиска данных (во время ввода
по строке) действуют ограничения доступа к данным (см. <a href="#_ref214787493">здесь</a>).</p>

<p class="MsoNormal">Кроме
указания того, по каким полям будет выполняться поиск, система позволяет
дополнительно настроить некоторые параметры поиска. Свойство <span class="Interface">Способ поиска строки</span>
предназначено для указания способа поиска строки:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Только в начале поля, выбранного для ввода по
строке (значение <span class="Interface">Начало</span>). В этом
случае поисковая строка не разбивается на слова, а введенный текст ищется
целиком. Например, если поиск выполняется в следующих данных: <span class="Interface">Иванов Максим</span> и
<span class="Interface">Максимов</span>, то
при вводе в поле ввода слова <span class="Interface">Максим</span> будут
найдены данные <span class="Interface">Максимов</span>, а при
вводе в поле ввода <span class="Interface">Иван Макс</span> не
будет найдено ничего.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
В любой части поля (значение <span class="Interface">Любая часть</span>). Если
строка поиска состоит из нескольких слов и поиск выполняется в любой части, то
для поиска используется запрос, аналогичный следующему (для двух полей и двух
слов):</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_res">(Поле1 ПОДОБНО &quot;%Слово1%&quot; ИЛИ Поле2 ПОДОБНО &quot;%Слово1%&quot;) И (Поле1 ПОДОБНО &quot;%Слово2%&quot; ИЛИ Поле2 ПОДОБНО &quot;%Слово2%&quot;)</pre>

<p class="MsoNormal">Свойство
<span class="Interface">Полнотекстовый поиск</span>
позволяет задействовать полнотекстовый поиск при организации ввода по строке.
Полнотекстовый поиск нельзя использовать для таблиц внешних источников данных. Использование
полнотекстового поиска обладает несколькими особенностями:</p>

<p class="MsoListNumberCxSpFirst">1.  Полнотекстовый
поиск всегда выполняется по началу слов.</p>

<p class="MsoListNumberCxSpMiddle">2.  Полнотекстовый
поиск используется для первоначального отбора объектов, в которых будет
выполняться дальнейший поиск (уменьшается количество объектов, в которых будет
выполняться поиск).</p>

<p class="MsoListNumberCxSpMiddle">3.  К
результатам полнотекстового поиска будут добавлены все непроиндексированные
ссылки из таблицы, по которой выполнялся ввод по строке.</p>

<p class="MsoListNumberCxSpMiddle">4.  В
списке отобранных объектов будет выполняться поиск по полям, которые отобраны
для использования в механизме ввода по строке способом, который задан свойством
<span class="Interface">Способ поиска строки</span>.</p>

<p class="MsoListNumberCxSpLast">5.  Для
каждого слова из поискового запроса в конце добавляется символ &quot;<span class="Interface">*</span>&quot;.</p>

<p class="MsoNormal">Указанные
особенности могут привести к тому, что:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Полнотекстовый поиск может чрезмерно сузить
набор данных для поиска, если используется поиск по любой части вместе с
полнотекстовым поиском. В результате данные найдены не будут. При этом
отключение полнотекстового поиска приведет к нахождению нужных данных. Это
произойдет потому, что полнотекстовый поиск ищет только по началу слова. Если
искомый текст не находится в начале слова – ввод по строке не найдет такие
данные.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Неактуальный индекс полнотекстового поиска может
негативно сказаться на результатах поиска.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Если полнотекстовый поиск завершился с ошибкой,
то будет применяться обычный поиск, в соответствии со свойством <span class="Interface">Способ поиска строки</span>.
Это может привести к ситуации, когда найденный объект превратиться в
ненайденный (для способа поиска по любой части слова). Например: в поле ввода
введен символ «<span class="Interface">а</span>», который
есть не только в начале, а и в середине массива слов, в котором выполняется
поиск. Для большого набора данных полнотекстовый поиск завершится с ошибкой
(слишком большой результат поиска) и с помощью обычного поиска будут найдены
данные, которые внутри себя содержат букву «<span class="Interface">а</span>». Затем
пользователь введет еще одну букву (например, «<span class="Interface">ц</span>») и поисковая
строка станет «<span class="Interface">ац</span>». В этом
случае полнотекстовый поиск отберет только те данные, которые начинаются на «<span class="Interface">ац</span>» и
проигнорирует те данные, которые содержат «<span class="Interface">ац</span>» внутри
себя.</p>

<p class="MsoNormalCxSpFirst">Если
выпадающий список формируется системой (а не с помощью программного кода
прикладного решения), то представления найденных объектов формируются по
специальному алгоритму. Представление найденного объекта состоит из двух
частей: представление реквизита, содержащего строку поиска (обязательная часть)
и дополнительное представление (не обязательная часть).</p>

<p class="MsoNormalCxSpLast">Собственно
представление формируется следующим образом:</p>

<p class="MsoListBullet">&#9679; 
Определяется поле, содержащее поисковую строку:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
В случае использования полнотекстового поиска
или при обычном поиске по нескольким словам таким полем будет первое поле, из
состава полей, указанных в свойстве <span class="Interface">Ввод по строке</span>,
в котором найдено первое слово из поисковой строки.</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
При использовании обычного поиска по одному
слову таким полем будет реквизит, в котором выполнялся поиск.</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Представление значения, расположенного в
определенном поле будет являться обязательной частью представления найденного
объекта для выпадающего списка.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Определяется, необходимо или нет формировать
дополнительное представление. Для этого определяется состав полей, который
будет использоваться для формирования дополнительного представления:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
Если у найденного объекта есть только одно поле,
используемое для формирования представления, и поисковая строка обнаружена в
этом реквизите – используются поля альтернативного представления.</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
В противном случае используются поля основного
представления. Список полей основного и альтернативного представления приведен
ниже.</p>

<p class="MsoListBullet">&#9679; 
Если список полей для формирования
дополнительного представления является пустым – дополнительное
представление не формируется. В противном случае дополнительное представление
формируется следующим образом:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
В круглые скобки заключается текстовое
представление всех полей, которые выбраны для формирования дополнительного
представления, через &quot;<span class="Interface">, </span>&quot;;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
Сформированное дополнительное представление добавляется
справа, через пробел, к обязательной части представления найденного объекта.</p>

<p class="MsoListBullet">&#9679; 
Для формирования основного и альтернативного
представления используются следующие поля:</p>

<p class="MsoListBullet2">&#9679; 
Справочник, бизнес-процесс, план видов
характеристик, план счетов, план видов расчета:</p>

<p class="MsoListBullet3CxSpFirst">&#9679; 
Основное представление: <span class="Term">Наименование</span>, <span class="Term">Код</span>.</p>

<p class="MsoListBullet3CxSpLast">&#9679; 
Альтернативное представление: в зависимости от
того, какое выбрано основное представление, для альтернативного представления
используется оставшееся поле.</p>

<p class="MsoListBullet2">&#9679; 
Документ:</p>

<p class="MsoListBullet3CxSpFirst">&#9679; 
Основное представление: <span class="Term">Номер</span>, <span class="Term">Дата</span>.</p>

<p class="MsoListBullet3CxSpLast">&#9679; 
Альтернативное представление: отсутствует.</p>

<p class="MsoListBullet2">&#9679; 
Задача:</p>

<p class="MsoListBullet3CxSpFirst">&#9679; 
Основное представление: <span class="Term">Наименование</span>,
<span class="Term">Номер</span>,
<span class="Term">Дата</span>.</p>

<p class="MsoListBullet3CxSpLast">&#9679; 
Альтернативное представление: отсутствует.</p>

<p class="MsoListBullet2">&#9679; 
Внешний источник данных:</p>

<p class="MsoListBullet3CxSpFirst">&#9679; 
Основное представление: поле указанное в
свойстве <span class="Interface">Поле представления</span>
таблицы внешнего источника данных (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 23. внешние источники данных.htm?_=1496848987#_ref380677346">здесь</a>).</p>

<p class="MsoListBullet3CxSpLast">&#9679; 
Альтернативное представление: отсутствует.</p>

<p class="MsoNormalCxSpFirst">Свойство
<span class="Interface">Режим получения данных
выбора</span> управляет тем, как платформа осуществляет поиск данных при вводе
по строке. Если свойство установлено в значение <span class="Interface">Фоновый</span>, то для
получения данных используется фоновое задание, а в выпадающем списке
отображается анимированная картинка, аналогичная фоновому выполнению отчета
(см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 10. система компоновки данных.htm?_=1496848987#_ref384125579">здесь</a>). Фоновое задание используется в том случае, если за
200 мс требуемые данные не получены для отображения пользователю. Для файлового
варианта информационной базы возможно получение данных в фоновом режиме в том
случае, если в момент получения данных не выполняется другое фоновое или
регламентное задание. Во время фонового получения результатов выбора
пользователь может продолжать редактировать поле ввода. Указанием значения <span class="Interface">Непосредственно</span>
в качестве значения свойства приводит к тому, что поиск выполняется без
использования фоновых заданий.</p>

<p class="MsoNormalCxSpLast">При
настройке ввода по строке рекомендуется следовать следующим рекомендациям:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Значение <span class="Interface">Фоновый</span> для свойства
<span class="Interface">Режим получения данных
выбора</span> рекомендуется устанавливать для объектов, в которых планируется
большое количество данных.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Полнотекстовый поиск рекомендуется включать для
объектов, в которых ожидается большое количество данных.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Поиск строки в любом месте рекомендуется
включать совместно с фоновым поиском, либо в таблицах, в которых не ожидается
большого количества данных. Желательно, так же при большом количестве данных,
если включается поиск в любом месте, то включать и полнотекстовый поиск (чтобы
большая часть поисков выполнялась бы через полнотекстовый поиск).</p>

<a name="_ref372735337"></a><a id="TI000000286" class="bookmark" name="issogl3_5.6.7.2_особенности_поведения_поля_ввода"><h4>5.6.7.2. Особенности поведения поля ввода</h4></a>

<p class="MsoNormal">При
вводе данных в поле ввода следует учитывать некоторые особенности работы со
списком выбора. Если в результате набора обнаружено несколько объектов,
начинающихся с введенного текста, то список этих объектов будет расположен в
выпадающем списке. Во время ввода пользователь может с помощью кнопок <span class="Interface">Стрелка вверх</span> и
<span class="Interface">Стрелка вниз</span>
передвигаться по списку, при этом продолжая набор текста в самом поле. В этом
случае для осуществления выбора требуется выбрать необходимый элемент и
подтвердить выбор нажатием кнопки <span class="Interface">Enter</span> или <span class="Interface">Tab</span>. Для
формирования списка выбора для поля ввода используется следующий алгоритм:</p>

<p class="MsoListNumberCxSpFirst">1.  Выполняется
получение данных при выполнении поиска в первом поле (из
списка выбранных полей) по началу строки и по подстроке. Количество
записей, полученных в результате поиска по началу строки, будем называть <span class="Term">РС</span>, а количество записей, полученных в
результате поиска по подстроке, будем называть <span class="Term">РП</span>.</p>

<p class="MsoListNumberCxSpMiddle">2.  Если
<span class="Term">РС+РП&lt;=10</span>, то в выпадающий список попадут
все результаты каждого поиска.</p>

<p class="MsoListNumberCxSpMiddle">3.  Если
<span class="Term">РП</span> и <span class="Term">РС</span> больше 5 (каждый), то в список выбора
попадет по 5 записей из каждого списка.</p>

<p class="MsoListNumberCxSpMiddle">4.  Если
любое из значений <span class="Term">РП</span> или <span class="Term">РС</span> меньше 5, то в выпадающий список попадут
все записи из меньшего списка и столько записей из большего списка, чтобы
дополнить выпадающий список до 10.</p>

<p class="MsoListNumberCxSpLast">5. 
Если общее количество записей в выпадающем
списке оказалось меньше 10, то выполняем алгоритм с шага 1 для следующего поля
из списка выбранных полей, используя разницу между 10 и количеством полученных
результатов как число необходимых к получению данных на следующем шаге.</p>

<a name="_ref384137332"></a><a id="TI000000287" class="bookmark" name="issogl3_5.6.7.3_программное_формирование_списка_выбора"><h4>5.6.7.3. Программное формирование списка выбора</h4></a>

<p class="MsoNormalCxSpFirst">Если
разработчика не устраивает, каким образом формируется список выбора, он может
переопределить его самостоятельно.</p>

<p class="MsoNormalCxSpLast">Сделать
это можно двумя способами:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Непосредственно в форме – в этом случае
особое формирование списка выбора будет работать только для этого, единственного
поля. Для этого необходимо определить обработчики событий НачалоВыбора, <span class="Term">АвтоПодбор</span> и <span class="Term">ОкончаниеВводаТекста</span>.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
В модуле менеджера соответствующего
объекта – в этом случае особое формирование списка выбора будет выполняться
для всех полей ввода, в которых вводятся значения используемого объекта.</p>

<p class="MsoNormalCxSpFirst">Если
поле связано с данными, имеющими тип ссылки на прикладной объект (например, <span class="Term">СправочникСсылка</span>, <span class="Term">ПеречислениеСсылка</span> и т. д.), то
список выбора можно сформировать или в модуле менеджера соответствующего
объекта, или с помощью обработчиков модуля формы. В остальных случаях список
выбора можно сформировать только с помощью обработчиков модуля формы.</p>

<p class="MsoNormalCxSpMiddle">Подробнее
остановимся на втором способе.</p>

<p class="MsoNormalCxSpLast">Для
программного формирования списка выбора необходимо переопределить обработчик
события <span class="Term">ОбработкаПолученияДанныхВыбора</span> менеджера
объекта. Обработчик получает набор параметров, определяющих условия
формирования списка выбора. Набор параметров представляет собой структуру,
которая содержит:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Строку поиска – текстовую строку, содержащую
текст, который пользователь ввел в поле ввода. Данное свойство присутствует
всегда (свойство <span class="Term">СтрокаПоиска</span>).</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Отбор – структура, которая описывает отбор
так, как его описывает параметр формы <span class="Term">Отбор</span> для расширения формы для динамического
списка. Данное свойство присутствует всегда.</p>

<p class="Indentlist">Отбор,
указанный в данном свойстве, будет конвертироваться (по возможности) в запрос
полнотекстового поиска, уточняя этот запрос для повышения скорости поиска.</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Свойство, которое указывает режим выбора групп и
элементов (передается только для иерархических списков) – свойство <span class="Term">ВыборГруппИЭлементов</span>.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Свойство, которое определяет способ поиска
строки: по началу слова или по любой части (свойство <span class="Term">СпособПоискаСтроки</span>).</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Необходимость использования полнотекстового
поиска (свойство <span class="Term">ПолнотекстовыйПоиск</span>).</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Режим получения данных выбора (свойство <span class="Term">РежимПолученияДанныхВыбора</span>).</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Кроме этого, в структуре передаются элементы,
которые заданы в свойствах элемента формы – <span class="Interface">Связи параметров
выбора</span> (см. <a href="#_ref397525399">здесь</a>) и <span class="Interface">Параметры выбора</span>
(см. <a href="#_ref271716125">здесь</a>).</p>

<p class="MsoNormalCxSpFirst">Кроме
того, в обработчик передается переменная, в которую следует вернуть
сформированный список выбора, и параметр <span class="Term">СтандартнаяОбработка</span>, который определяет
поведение системы после того, как произойдет выход из обработчика.</p>

<p class="MsoNormalCxSpMiddle">Если
разработчик устанавливает параметр <span class="Term">СтандартнаяОбработка</span> в значение <span class="Term">Ложь</span>, то ему необходимо самому полностью
формировать список выбора.</p>

<p class="MsoNormalCxSpLast">Если
флажок стандартной обработки установить в значение <span class="Term">Истина</span>, то можно предоставить системе
возможность сформировать список выбора, но при этом можно модифицировать
параметры выбора (добавить дополнительные значения отбора, изменить режим
выбора групп и элементов и т. д.).</p>

<p class="NoteCxSpFirst"><span class="Note">Примечание 1.</span> Если система сама формирует список
выбора, при формировании списка учитываются ограничения доступа к данным (см. <a href="#_ref73775184">здесь</a>).</p>

<p class="NoteCxSpLast"><span class="Note">Примечание 2.</span> Примеры, приведенные ниже, не являются
законченным. Они предназначены для демонстрации различных механизмов получения
списков выбора.</p>

<p class="MsoNormal">Так,
следующий код в случае любого текста, вводимого пользователем, будет
предоставлять выбор из трех товаров, с кодами <span class="Interface">00000002</span>, <span class="Interface">00000003</span> и <span class="Interface">00000004</span>.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">Процедура</span> ОбработкаПолученияДанныхВыбора<span class="operator">(</span>ДанныеВыбора<span class="operator">,</span> Параметры<span class="operator">,</span> СтандартнаяОбработка<span class="operator">)</span>
    ДанныеВыбора <span class="operator">=</span> <span class="keyword">Новый</span> СписокЗначений<span class="operator">;</span>
    ДанныеВыбора<span class="operator">.</span>Добавить<span class="operator">(</span>Справочники<span class="operator">.</span>Товары<span class="operator">.</span>НайтиПоКоду<span class="operator">(</span><span class="string">&quot;00000002&quot;</span><span class="operator">)</span><span class="operator">)</span><span class="operator">;</span>
    ДанныеВыбора<span class="operator">.</span>Добавить<span class="operator">(</span>Справочники<span class="operator">.</span>Товары<span class="operator">.</span>НайтиПоКоду<span class="operator">(</span><span class="string">&quot;00000003&quot;</span><span class="operator">)</span><span class="operator">)</span><span class="operator">;</span>
    ДанныеВыбора<span class="operator">.</span>Добавить<span class="operator">(</span>Справочники<span class="operator">.</span>Товары<span class="operator">.</span>НайтиПоКоду<span class="operator">(</span><span class="string">&quot;00000004&quot;</span><span class="operator">)</span><span class="operator">)</span><span class="operator">;</span>
    СтандартнаяОбработка <span class="operator">=</span> <span class="keyword">Ложь</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span></pre>

<p class="MsoNormal">В
следующем примере отбор, который сформировало поле ввода, будет расширен
установкой дополнительного отбора так, чтобы в список выбора не попали услуги. При
этом все формирование списка выбора берет на себя система.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">Процедура</span> ОбработкаПолученияДанныхВыбора<span class="operator">(</span>ДанныеВыбора<span class="operator">,</span> Параметры<span class="operator">,</span> СтандартнаяОбработка<span class="operator">)</span>
    Параметры<span class="operator">.</span>Отбор<span class="operator">.</span>Вставить<span class="operator">(</span><span class="string">&quot;Вид&quot;</span><span class="operator">,</span> Перечисления<span class="operator">.</span>ВидыТоваров<span class="operator">.</span>Товар<span class="operator">)</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span></pre>

<p class="MsoNormal">В
качестве последнего примера рассмотрим упрощенный случай реализации отбора
полностью средствами встроенного языка. В этом примере будет рассмотрен отбор
товаров, название которых начинается со строки, введенной пользователем в поле
ввода.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">Процедура</span> ОбработкаПолученияДанныхВыбора<span class="operator">(</span>ДанныеВыбора<span class="operator">,</span> Параметры<span class="operator">,</span> СтандартнаяОбработка<span class="operator">)</span>
    Запрос <span class="operator">=</span> <span class="keyword">Новый</span> Запрос<span class="operator">;</span>
    Запрос<span class="operator">.</span>Текст <span class="operator">=</span> <span class="string">&quot;ВЫБРАТЬ РАЗРЕШЕННЫЕ</span>
<span class="string">        |    Товары.Ссылка как Товар</span>
<span class="string">        |ИЗ</span>
<span class="string">        |    Справочник.Товары КАК Товары</span>
<span class="string">        |ГДЕ</span>
<span class="string">        |    Товары.Наименование ПОДОБНО &amp;Наименование&quot;</span><span class="operator">;</span>
    Запрос<span class="operator">.</span>УстановитьПараметр<span class="operator">(</span><span class="string">&quot;Наименование&quot;</span><span class="operator">,</span> Параметры<span class="operator">.</span>СтрокаПоиска <span class="operator">+</span> <span class="string">&quot;%&quot;</span><span class="operator">)</span><span class="operator">;</span>
    Результат <span class="operator">=</span> Запрос<span class="operator">.</span><span class="keyword">Выполнить</span><span class="operator">(</span><span class="operator">)</span><span class="operator">;</span>
    ТаблицаРезультатов <span class="operator">=</span> Результат<span class="operator">.</span>Выгрузить<span class="operator">(</span><span class="operator">)</span><span class="operator">;</span>
    МассивТоваров <span class="operator">=</span> ТаблицаРезультатов<span class="operator">.</span>ВыгрузитьКолонку<span class="operator">(</span><span class="string">&quot;Товар&quot;</span><span class="operator">)</span><span class="operator">;</span>
    ДанныеВыбора <span class="operator">=</span> <span class="keyword">Новый</span> СписокЗначений<span class="operator">;</span>
    ДанныеВыбора<span class="operator">.</span>ЗагрузитьЗначения<span class="operator">(</span>МассивТоваров<span class="operator">)</span><span class="operator">;</span>
    СтандартнаяОбработка <span class="operator">=</span> <span class="keyword">Ложь</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span></pre>

<p class="MsoNormalCxSpFirst">Также
следует обратить внимание на еще один способ формирования списка выбора:
передачу в качестве значения элемента списка значений не ссылки на искомый
объект (как в примерах выше), а структуру особого содержания.</p>

<p class="MsoNormalCxSpLast">Эта
структура состоит из следующих элементов:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Term">Значение</span> –
собственно значение выбираемого элемента.
Элемент структуры с таким именем должен быть обязательно.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">ПометкаУдаления</span> – признак,
что выбираемое значение
помечено на удаление в информационной базе.
Элемент структуры с таким именем не является обязательным.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Term">Предупреждение</span> – строка
с текстом предупреждения, которое отобразит «1С:Предприятие» при
выборе такого элемента из списка значений. Элемент структуры с таким
именем не является обязательным.</p>

<p class="MsoNormalCxSpFirst">Если
в структуре свойство <span class="Term">ПометкаУдаления</span> равно значению <span class="Term">Истина</span> и не указано свойство <span class="Term">Предупреждение</span>, то система автоматически
сформирует текст предупреждения. Если свойство <span class="Term">Предупреждение</span> указано, то отображается именно
оно. Следует помнить, что текст <span class="Term">Предупреждение</span> завершается вопросом <span class="Interface">Продолжить?</span> и
отображается в качестве вопроса с вариантами ответа <span class="Interface">Да</span> и <span class="Interface">Нет</span>.</p>

<p class="MsoNormalCxSpMiddle">Далее
будет показана модификация предыдущего примера, в котором для складов с
установленным в значение <span class="Term">Истина</span> реквизитом <span class="Term">НеИспользовать</span> будет сформировано предупреждение
<span class="Interface">Этот склад не должен
использоваться</span>.</p>

<p class="MsoNormalCxSpLast">Также
можно совмещать в одном списке выбора и значения типа <span class="Term">Структура</span>, и простые значения.</p>

<p class="Lang-subheader">Пример:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="keyword">Процедура</span> ОбработкаПолученияДанныхВыбора<span class="operator">(</span>ДанныеВыбора<span class="operator">,</span> Параметры<span class="operator">,</span> СтандартнаяОбработка<span class="operator">)</span>
    СтандартнаяОбработка <span class="operator">=</span> <span class="keyword">Ложь</span><span class="operator">;</span>
    ДанныеВыбора <span class="operator">=</span> <span class="keyword">Новый</span> СписокЗначений<span class="operator">;</span>
    <span class="comment">// Сформируем список с предупреждениями</span>
    Запрос <span class="operator">=</span> <span class="keyword">Новый</span> Запрос<span class="operator">;</span>
    Запрос<span class="operator">.</span>Текст <span class="operator">=</span> <span class="string">&quot;ВЫБРАТЬ</span>
<span class="string">        |    Склады.Ссылка,</span>
<span class="string">        |    Склады.Наименование,</span>
<span class="string">        |    Склады.НеИспользовать</span>
<span class="string">        |ИЗ</span>
<span class="string">        |    Справочник.Склады КАК Склады&quot;</span><span class="operator">;</span>
    Результат <span class="operator">=</span> Запрос<span class="operator">.</span><span class="keyword">Выполнить</span><span class="operator">(</span><span class="operator">)</span><span class="operator">;</span>
    ВыборкаДетальныеЗаписи <span class="operator">=</span> Результат<span class="operator">.</span><span class="keyword">Выбрать</span><span class="operator">(</span><span class="operator">)</span><span class="operator">;</span>
    <span class="keyword">Пока</span> ВыборкаДетальныеЗаписи<span class="operator">.</span>Следующий<span class="operator">(</span><span class="operator">)</span> <span class="keyword">Цикл</span>
        Структура <span class="operator">=</span> <span class="keyword">Новый</span> Структура<span class="operator">(</span><span class="string">&quot;Значение&quot;</span><span class="operator">,</span> ВыборкаДетальныеЗаписи<span class="operator">.</span>Ссылка<span class="operator">)</span><span class="operator">;</span>
        <span class="comment">// Заполним предупреждение</span>
        <span class="keyword">Если</span> ВыборкаДетальныеЗаписи<span class="operator">.</span>НеИспользовать <span class="keyword">Тогда</span>
             Структура<span class="operator">.</span>Вставить<span class="operator">(</span><span class="string">&quot;Предупреждение&quot;</span><span class="operator">,</span> <span class="string">&quot;Этот склад не должен использоваться!&quot;</span><span class="operator">)</span><span class="operator">;</span>
        <span class="keyword">КонецЕсли</span><span class="operator">;</span>
        Элемент <span class="operator">=</span> ДанныеВыбора<span class="operator">.</span>Добавить<span class="operator">(</span><span class="operator">)</span><span class="operator">;</span>
        Элемент<span class="operator">.</span>Значение <span class="operator">=</span> Структура<span class="operator">;</span>
        Элемент<span class="operator">.</span>Представление <span class="operator">=</span> ВыборкаДетальныеЗаписи<span class="operator">.</span>Наименование<span class="operator">;</span>
    <span class="keyword">КонецЦикла</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span></pre>

<p class="Note"><span class="Note">Примечание.</span> Если представления элементов (в том числе
и элементов структуры с именем <span class="Term">Значение</span>) не указаны в явном виде, то они
будут получены автоматически.</p>

<a name="_ref215985720"></a><a id="TI000000288" class="bookmark" name="issogl2_5.6.8_формы"><h3>5.6.8. Формы</h3></a>

<p class="MsoNormal"><span class="Interface">Форма</span> – это объект, созданный для ввода или просмотра
какой-либо информации, а также для управления различными процессами. С помощью
форм программа запрашивает у пользователя ту информацию, которая необходима ей
для дальнейшей работы, либо выдает какую-либо информацию пользователю для
просмотра и редактирования.</p>

<p class="Regularbeforepicture">В
тех случаях, когда необходимо обеспечить функционирование конфигурации
одновременно в обычном и управляемом режимах, можно использовать дополнительные
формы объектов метаданных. При этом «1С:Предприятие» будет
автоматически выбирать для использования ту форму,
которая соответствует текущему режиму работы.</p>

<p class="Picture"><IMG src="_img/img00147.gif?_=1496848987" WIDTH="383" ALT HEIGHT="365"></p>

<p class="MsoCaption">Рис.
148. Основные и дополнительные формы</p>

<p class="MsoNormal">Тонкий
клиент и веб-клиент оперируют только управляемыми формами. Значит:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
если обе назначенные формы – управляемые, то будет открыта та форма,
которая назначена как основная;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
если среди назначенных форм есть только одна управляемая, будет открыта
именно она;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
если управляемая форма не назначена, она будет сгенерирована автоматически.</p>

<p class="MsoNormal">Толстый
клиент при выборе формы старается выбрать форму, которая максимально
соответствует текущему режиму запуска:</p>

<p class="MsoListBullet">&#9679; 
если никакие формы не назначены, то будет сгенерирована:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
в обычном режиме – обычная форма;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
в управляемом режиме – управляемая форма;</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
если назначена только одна форма, то именно она и будет открыта;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
если назначены две формы, обычная и управляемая, то будет открыта:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
в обычном режиме – обычная форма;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
в управляемом режиме – управляемая форма.</p>

<p class="MsoListBullet">&#9679; 
если назначены две обычные или две управляемые формы, то будет открыта
та форма, которая назначена основной.</p>

<p class="MsoNormalCxSpFirst">Двойной
комплект форм можно использовать в тех случаях, когда вы переводите вашу
конфигурацию из неуправляемого в управляемый режим, либо когда необходимо,
например, часть возможностей конфигурации сделать доступными в веб-клиенте (или
тонком клиенте). В этом случае можно реализовать необходимые возможности в
управляемых формах и указать их в качестве дополнительных форм. Тогда при
работе в режиме веб-клиента (или тонкого клиента) будут использоваться нужные
формы (управляемые).</p>

<p class="MsoNormalCxSpLast"><a name="_ref215489389">Однако следует учитывать, что на получение форм по
умолчанию в толстом клиенте оказывают влияние свойства конфигурации </a><span class="Interface">Использовать управляемые формы в обычном приложении</span> и<span class="Interface"> Использовать обычные формы в управляемом приложении</span>:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Если свойство конфигурации<span class="Interface"> Использовать
управляемые формы в обычном приложении</span> имеет значение <span class="Term">Ложь</span>, то в толстом клиенте, в обычном режиме,
при получении формы по умолчанию обязательно должна быть получена обычная
форма. Если ни основная, ни дополнительная форма не является обычной, то
генерируется обычная форма.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Если свойство конфигурации<span class="Interface"> Использовать обычные формы в управляемом приложении</span> имеет
значение <span class="Term">Ложь</span>,
то в толстом клиенте, в управляемом режиме, при получении формы по умолчанию
обязательно должна быть получена управляемая форма. Если ни основная, ни
дополнительная форма не является обычной, то генерируется управляемая форма.</p>

<p class="MsoNormalCxSpFirst">Если в результате открывается форма, которая
автоматически сгенерирована системой и режим запуска клиентского приложения отличается
от режима запуска, установленного в свойстве конфигурации <span class="Interface">Основной режим запуска</span>, то формы объектов и формы
наборов записей открываются в режиме <span class="Interface">Только просмотр</span>. Также в формах списков и формах
объектов будут отсутствовать команды <span class="Interface">Создать на основании</span>, а в формах списков – команда <span class="Interface">Создать</span>, если для выполнения этих команд системе необходимо
автоматически сгенерировать форму, подходящую для текущего режима запуска и
режим запуска клиентского приложения отличается от режима запуска,
установленного в свойстве конфигурации <span class="Interface">Основной режим запуска</span>.</p>

<p class="MsoNormalCxSpMiddle">Если в качестве основного режима запуска
прикладного решения выбрано управляемое приложение, то для каждой управляемой формы
прикладного решения можно выбрать назначение формы. Свойство формы<span class="Interface"> Назначения использования</span> эквивалентно (по составу и применению)
аналогичному свойству конфигурации (см. <a href="#_ref335324134">здесь</a>). Поведение редактора формы зависит от пересечения
множеств назначений конфигурации и конкретной формы.</p>

<p class="MsoNormalCxSpLast">Если
в пересечении отсутствует значение <span class="Interface">Персональный к</span><span class="Interface">омпьютер</span>,
то:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
В палитре свойств недоступны свойства
реквизитов, параметров, команд, элементов, которые не поддерживаются мобильной
платформой;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Недоступно редактирование контекстного меню
элемента формы;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Недоступно редактирование расширенной подсказки
для элемента формы;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Недоступны те виды полей формы, которые не
поддерживаются мобильной платформой (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 25. разработка решений для мобильной платформы.htm?_=1496848987#_ref335933717">здесь</a>);</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Редактор настроек динамического списка не
позволяет разворачивать доступные поля (связано с тем, что на мобильной
платформе динамический список работает строго с одной таблицей).</p>

<p class="MsoNormal">Если
в назначении формы отсутствует значение <span class="Interface">Мобильное приложение</span>, то она не включается в конфигурацию
мобильного приложения.</p>

<a name="_ref277067399"></a><a name="_ref254188850"></a><a name="_ref254188832"></a><a name="_ref254188805"></a><a id="TI000000289" class="bookmark" name="issogl2_5.6.9_команды"><h3>5.6.9. Команды</h3></a>

<p class="MsoNormalCxSpFirst">Для
выполнения операций, связанных с конкретным объектом метаданных, существуют
команды этого объекта. При этом непараметризованные команды объекта будут
доступны в командном интерфейсе тех подсистем, в состав которых входит объект метаданных.
Если команда является параметризованной, то она будет доступна в тех формах,
которые содержат реквизиты формы (включая подчиненные реквизиты первого уровня
основного реквизита формы) того же типа, что и тип параметра команды.</p>

<p class="MsoNormalCxSpMiddle">Для
команд требуется написать процедуру выполнения команды. Для этого служит модуль
команды, в котором необходимо реализовать обработчик <span class="Term">ОбработкаКоманды()</span>. Данная процедура должна
предваряться директивой <span class="Term">&amp;НаКлиенте</span>, так как выполнение команды
происходит в клиентском приложении. Однако другие процедуры и функции,
расположенные в модуле команды, могут предваряться другими директивами, если
это необходимо для выполнения команды. Подробнее про директивы компиляции см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 4. встроенный язык.htm?_=1496848987#_ref231122752">здесь</a>.</p>

<p class="MsoNormalCxSpLast">Модуль
команды может содержать, например, открытие формы отчета с предварительно
установленным ему параметром для вывода на печать карточки определенного
бухгалтерского счета или открытие формы списка товаров с установленным отбором
по виду товара. Если команда, принадлежащая группе <span class="Interface">Панель навигации</span>,
должна открывать одну и ту же форму в разных закладках, следует при получении
(или открытии) формы указывать ключ уникальности или ключевой параметр формы.</p>

<p class="Note"><a name="_ref214801190"><span class="Note">Примечание.</span> Если команда
расположена в панели навигации основного окна приложения (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 3. интерфейс приложения.htm?_=1496848987#_ref254188964">здесь</a>), то повторный выбор этой команды не приведет к ее
(команды) повторному выполнению. Это относится и к стандартным командам, и к
командам, созданным в конфигурации.</a></p>

<a name="_ref414539447"></a><a name="_ref414539446"></a><a id="TI000000290" class="bookmark" name="issogl2_5.6.10_механизм_заполнения_реквизитов_новых_объектов"><h3>5.6.10. Механизм заполнения реквизитов новых объектов</h3></a>

<p class="MsoNormal">Существует
возможность заполнения реквизитов новых объектов при интерактивном создании
(кроме копирования), при вводе на основании, при использовании методов <span class="Term">ОткрытьФорму()</span>/<span class="Term">ПолучитьФорму()</span> или при явном вызове метода <span class="Term">Заполнить()</span>. Это заполнение может выполняться:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
значениями отбора при вводе из списка;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
конкретными значениями, указанными в
конфигурации в свойствах реквизитов (значения заполнения);</p>

<p class="MsoListBulletCxSpLast">&#9679; 
значениями, которые разработчик указал в
обработчике события <span class="Term">ОбработкаЗаполнения()</span>.</p>

<p class="MsoNormal">Механизм
обработки заполнения реализован для следующих объектов:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
планы обмена,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
справочники,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
документы,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
планы видов характеристик,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
планы счетов,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
планы видов расчета,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
наборы записей регистров сведений,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
бизнес-процессы,</p>

<p class="MsoListBulletCxSpLast">&#9679; 
задачи.</p>

<p class="MsoNormal">Для
получения данных заполнения в обработчике <span class="Term">ОбработкаЗаполнения()</span> существует параметр <span class="Term">ДанныеЗаполнения</span>. В зависимости от того, каким
образом вызван обработчик, значение параметра <span class="Term">ДанныеЗаполнения</span> может принимать разные
значения:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Ввод на основании – в качестве значения
параметра передается ссылка на объект-основание. При этом значение параметра <span class="Term">ДанныеЗаполнения</span> будет являться ссылкой на
объект-основание базы данных.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Ввод из списка с установленным отбором – в
качестве значения параметра передается структура, элементами которой становятся
используемые элементы отбора с установленным видом сравнения <span class="Interface">Равно</span> или <span class="Interface">В списке</span> (при
этом в списке находится единственное значение). При создании нового документа
из формы журнала документов элементы отбора по графам журнала предварительно
преобразуются таким образом, чтобы в качестве имени элемента структуры <span class="Term">ДанныеЗаполнения</span> выступало имя реквизита
документа, а не имя графы журнала.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Ввод нового объекта или записи без использования
отбора – значение параметра равно <span class="Term">Неопределено</span>.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Ввод нового объекта или записи с помощью
глобальной команды – значение параметра равно <span class="Term">Неопределено</span>.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Программное выполнение методов <span class="Term">ОткрытьФорму()</span>/<span class="Term">ПолучитьФорму()</span> – в случае, если
исполнение методов <span class="Term">ОткрытьФорму()</span>/<span class="Term">ПолучитьФорму()</span> приводит к созданию формы
нового объекта, в качестве значения параметра обработчика <span class="Term">ДанныеЗаполнения</span> будет передано значение (типа
<span class="Term">Структура</span>) параметра формы <span class="Term">ЗначенияЗаполнения</span>. Если параметр <span class="Term">ЗначенияЗаполнения</span> не задан в параметрах
формы, то значение параметра обработчика будет равно <span class="Term">Неопределено</span>.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Программный вызов метода объекта <span class="Term">Заполнить()</span> – в качестве значения
параметра передается та информация, которая передана в качестве параметра
метода <span class="Term">Заполнить()</span>.</p>

<p class="MsoNormalCxSpFirst">Операция
интерактивного создания нового объекта с помощью копирования обрабатывается в
обработчике события <span class="Term">ПриКопировании</span> соответствующего объекта. При
обработке создания нового объекта копированием следует помнить о том, что
реквизиты типа <span class="Term">ХранилищеЗначения</span> не будут автоматически
перенесены в создаваемый объект. Перенос таких данных следует явно описывать в
обработчике события <span class="Term">ПриКопировании</span> создаваемого объекта.</p>

<p class="MsoNormalCxSpLast">На
заполнение реквизитов из данных заполнения оказывает влияние свойство <span class="Interface">Заполнять из данных
заполнения</span> реквизита объекта метаданных. Если это свойство имеет
значение <span class="Term">Истина</span>, то реквизиты будут заполняться
системой из данных заполнения автоматически. Если свойство имеет значение <span class="Term">Ложь</span> или в данных заполнения нет необходимого
значения, то система будет пытаться заполнить реквизит из свойства <span class="Interface">Значение заполнения</span>.</p>

<p class="Note"><span class="Note">ВНИМАНИЕ!</span> Разработчик может управлять заполнением стандартных
реквизитов объектов наравне с самостоятельно созданными реквизитами. Например,
можно запретить заполнение стандартного реквизита <span class="Term">Родитель</span>, и тогда он не будет автоматически
заполняться текущей группой.</p>

<p class="MsoNormal">Если
после исполнения обработчика <span class="Term">ОбработкаЗаполнения()</span> параметр <span class="Term">СтандартнаяОбработка</span> равен значению <span class="Term">Истина</span>, то система автоматически заполнит те
реквизиты (включая стандартные), для которых в метаданных установлены свойства <span class="Interface">Заполнять из данных
заполнения</span> или <span class="Interface">Значение заполнения</span>
и которые не заполнены в обработчике (значение равно значению по умолчанию для
типа реквизита). Свойство <span class="Interface">Заполнять из данных
заполнения</span> автоматически устанавливается системой для некоторых
стандартных реквизитов ряда объектов:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
для справочников – реквизиты <span class="Term">Родитель</span> и <span class="Term">Владелец</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
для планов счетов, планов видов характеристик и
планов видов расчета – реквизит <span class="Term">Родитель</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
для регистра сведений – ведущие измерения;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
для стандартных реквизитов остальных объектов
данное свойство автоматически не устанавливается.</p>

<p class="MsoNormalCxSpFirst">При
этом данные для стандартного заполнения берутся системой из одноименных
реквизитов данных, передающихся в параметре <span class="Term">ДанныеЗаполнения</span>.</p>

<p class="MsoNormalCxSpMiddle">Данные
заполнения передаются в создаваемую форму объекта в качестве стандартного
параметра формы <span class="Term">ЗначенияЗаполнения</span> и передаются из этого
параметра расширением формы для заполнения объекту. Также имеется возможность
программно задать параметр формы <span class="Term">ЗначенияЗаполнения</span> нового объекта, при этом
будут выполнены все действия, которые исполняются при интерактивном создании
объекта.</p>

<p class="MsoNormalCxSpMiddle">При
программном создании нового объекта обработка заполнения системой автоматически
не вызывается. Для вызова обработчика заполнения существует метод <span class="Term">Заполнить()</span>.</p>

<p class="MsoNormalCxSpLast"><span class="Interface">Значение заполнения</span> – это свойство реквизита
объекта метаданных, позволяющее задать значение по умолчанию, которое может
принимать реквизит при интерактивном создании объекта.</p>

<p class="Note"><span class="Note">ВНИМАНИЕ!</span> Заполнение реквизитов из свойства <span class="Interface">Значение заполнения</span>
происходит после вызова обработчика <span class="Term">ОбработкаЗаполнения()</span>. Реквизит будет заполнен
в том случае, если его значение не заполнено ранее (в обработчике <span class="Term">ОбработкаЗаполнения()</span> или механизмом
стандартного заполнения).</p>

<p class="MsoNormal">Тип
значения заполнения совпадает с типом реквизита. При этом в качестве значения
этого свойства можно указывать значения примитивных типов или предопределенные
данные.</p>

<a id="TI000000291" class="bookmark" name="issogl2_5.6.11_проверка_заполнения_реквизитов"><h3>5.6.11. Проверка заполнения реквизитов</h3></a>

<a id="TI000001487" class="bookmark" name="issogl3_5.6.11.1_общая_информация"><h4>5.6.11.1. Общая информация</h4></a>

<p class="MsoNormalCxSpFirst">В
информационной системе данные могут вноситься множеством различных способов, и
часто они могут быть некорректны. Поэтому при разработке решения бывает необходимо
прилагать много усилий на реализацию проверки правильности вводимых данных и
уведомления пользователя о некорректности введенной информации.</p>

<p class="MsoNormalCxSpMiddle">Механизм
проверки заполнения позволяет существенно упростить процесс разработки конфигураций.</p>

<p class="MsoNormalCxSpMiddle">Платформа
поддерживает автоматическую проверку указанных реквизитов прикладных объектов и
форм, а также позволяет выполнить процесс проверки в модуле. Для управления
проверкой заполнения реквизита служит свойство <span class="Interface">Проверка заполнения</span>.
Если свойство установлено в значение <span class="Interface">Не проверять</span> –
платформа не проверяет заполнение реквизита. Значение <span class="Interface">Выдавать ошибку</span>
указывает на необходимость выполнять проверку.</p>

<p class="MsoNormalCxSpLast">Платформа
выполняет автоматическую проверку заполнения:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
констант;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
справочников, документов, отчетов, обработок,
планов видов характеристик, планов счетов, планов видов расчета,
бизнес-процессов, задач:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
реквизитов и стандартных реквизитов,</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
табличных частей,</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
реквизитов и стандартных реквизитов табличных
частей;</p>

<p class="MsoListBullet">&#9679; 
наборов записей регистров бухгалтерии, регистра
сведений, регистра накопления, регистра расчета, перерасчетов, последовательностей:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
измерений,</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
ресурсов,</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
реквизитов и стандартных реквизитов;</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
реквизитов форм;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
реквизитов форм отчетов;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
реквизитов форм обработок.</p>

<p class="Note"><span class="Note">Примечание.</span> Проверка заполнения реквизитов выполняется
аналогично функции <span class="Term">ЗначениеЗаполнено()</span>. Проверка заполнения табличных
частей подразумевает, что табличная часть считается заполненной, когда в ней
присутствует хотя бы одна строка.</p>

<p class="MsoNormal">Проверка
заполнения может быть вызвана двумя способами:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
вызовом метода <span class="Term">ПроверитьЗаполнения()</span> (у объекта или формы);</p>

<p class="MsoListBulletCxSpLast">&#9679; 
автоматически.</p>

<p class="Note"><span class="Note">ВНИМАНИЕ!</span> Если свойство конфигурации <span class="Interface">Режим совместимости</span>
установлено в значение <span class="Interface">Версия 8.1</span>, то
автоматическая проверка заполнения не работает.</p>

<a id="TI000000292" class="bookmark" name="issogl3_5.6.11.2_установки_по_умолчанию"><h4>5.6.11.2. Установки по умолчанию</h4></a>

<p class="MsoNormal">Свойство
реквизита <span class="Interface">Проверка заполнения</span>
по умолчанию устанавливается в значение <span class="Interface">Выдавать ошибку</span>
для следующих стандартных реквизитов:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Term">ПланОбмена</span> – <span class="Term">Наименование</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">Справочник</span> – <span class="Term">Владелец</span>, <span class="Term">Наименование</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">Документ</span> – <span class="Term">Дата</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">ПланВидовХарактеристик</span> – <span class="Term">Наименование</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">ПланСчетов</span> – <span class="Term">Код</span>, <span class="Term">Наименование</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">ПланСчетов.ВидыСубконто</span> – <span class="Term">ВидСубконто</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">ПланВидовРасчета</span> – <span class="Term">Наименование</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">ПланВидовРасчета.ВедущиеВидыРасчета</span> – <span class="Term">ВидРасчета</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">ПланВидовРасчета.БазовыеВидыРасчета</span> – <span class="Term">ВидРасчета</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">ПланВидовРасчета.ВытесняющиеВидыРасчета</span> –
<span class="Term">ВидРасчета</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">РегистрСведений</span> – <span class="Term">Период</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">РегистрНакопления</span> – <span class="Term">Период</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">РегистрБухгалтерии</span> – <span class="Term">Период</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">РегистрРасчета</span> – <span class="Term">ПериодРегистрации</span>, <span class="Term">ВидРасчета</span>, <span class="Term">ПериодДействияНачало</span>, <span class="Term">ПериодДействияКонец</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">БизнесПроцесс</span> – <span class="Term">Дата</span>;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Term">Задача</span> – <span class="Term">Наименование</span>.</p>

<a name="_ref216684443"></a><a id="TI000000293" class="bookmark" name="issogl3_5.6.11.3_порядок_работы"><h4>5.6.11.3. Порядок работы</h4></a>

<p class="MsoNormal">Автоматическая
проверка заполнения вызывается расширением формы перед интерактивной записью
всех объектов, кроме документов, бизнес-процессов, отчетов и обработок. Для
этих объектов определено следующее поведение:</p>

<p class="MsoListBullet">&#9679; 
для документов:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
проверка заполнения вызывается расширением формы
перед проведением, если свойство <span class="Interface">Проведение</span>
установлено в значение <span class="Term">Разрешить</span>;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
проверка заполнения вызывается расширением формы
перед записью, если свойство <span class="Interface">Проведение</span>
установлено в значение <span class="Term">Запретить</span>;</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
для бизнес-процессов проверка заполнения
вызывается расширением формы перед стартом;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
для отчетов проверка заполнения вызывается
расширением формы при нажатии кнопки <span class="Interface">Сформировать</span>;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
для обработок проверка заполнения вызывается
расширением формы в случаях, если нажаты кнопки, связанные со стандартными
командами формы <span class="Interface">OK</span>, <span class="Interface">Да</span>, <span class="Interface">Повторить</span>, <span class="Interface">Пропустить</span>.</p>

<p class="MsoNormalCxSpFirst">Если
реквизит является основным реквизитом формы следующих типов: <span class="Term">СправочникОбъект</span>, <span class="Term">ДокументОбъект</span>, <span class="Term">ОтчетОбъект</span>, <span class="Term">ПланВидовХарактеристикОбъект</span>, <span class="Term">ПланСчетовОбъект</span>, <span class="Term">ПланВидовРасчетовОбъект</span>, <span class="Term">БизнесПроцессОбъект</span>, <span class="Term">ЗадачаОбъект</span>, то для значения такого реквизита
также будет вызвана проверка заполнения.</p>

<p class="MsoNormalCxSpLast">Для
вызова проверки заполнения системой необходимо, чтобы у формы (с которой
происходит работа) было установлено свойство <span class="Interface">Проверять заполнение
автоматически</span>. В этом случае вначале будет вызван обработчик <span class="Term">ОбработкаПроверкиЗаполненияНаСервере()</span> формы,
а затем обработчик <span class="Term">ОбработкаПроверкиЗаполнения()</span> модуля объекта.</p>

<p class="Note"><span class="Note">ВНИМАНИЕ!</span> Если у формы свойство <span class="Interface">Проверять заполнение
автоматически</span> установлено в значение <span class="Term">Истина</span> при выполнении стандартных команд <span class="Interface">Записать</span> (<span class="Interface">Провести</span> для
документов и т. д.), а также стандартных команд формы <span class="Interface">OK</span>, <span class="Interface">Да</span>, <span class="Interface">Повторить</span>, <span class="Interface">Пропустить</span>,
будет вызван метод <span class="Term">ПроверитьЗаполнение()</span>. В противном случае
проверка заполнения не вызывается ни для формы, ни для объекта.</p>

<p class="MsoNormal">Процесс
проверки заполнения происходит следующим образом:</p>

<p class="MsoListBullet">&#9679; 
Формируется список имен реквизитов формы, для
которых возможна проверка заполнения и для которых свойство <span class="Term">ПроверкаЗаполнения</span> установлено в значение <span class="Term">ВыдаватьОшибку</span>. В этот список не будут
включены имена реквизитов, тип которых не поддерживает проверку заполнения
(например, <span class="Term">СправочникОбъект</span>), но будет включено имя
основного реквизита формы.</p>

<p class="Indentlist">В
автоматически формируемый список реквизитов не будут включены реквизиты формы,
отключенные с помощью функциональных опций.</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Вызывается обработчик события формы <span class="Term">ОбработкаПроверкиЗаполненияНаСервере</span>, в
котором разработчик может описать свой алгоритм проверки заполнения или
изменить состав проверяемых реквизитов. В обработчик будет передан
сформированный список имен реквизитов. Если в обработчике необходимо добавить к
списку какие-либо реквизиты, это можно сделать только для реквизитов вышеперечисленных
типов (для которых возможна проверка заполнения в форме) и основного реквизита.
Добавление в список имен реквизитов объектного типа (например, <span class="Term">СправочникОбъект</span>) вызовет исключение при
дальнейшей автоматической проверке. Добавление в список имени несуществующего
реквизита вызовет исключение при дальнейшей автоматической проверке.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
После завершения работы обработчика события
механизм проверки заполнения получает обратно список имен, проверяемых
реквизитом (который, возможно, был изменен в обработчике). Система анализирует список
реквизитов и проверяет заполненность каждого реквизита. Если реквизит является
основным реквизитом объектного типа (например, <span class="Term">Объект</span> типа <span class="Term">СправочникОбъект</span>), будет вызвана проверка
заполнения самого объекта. Если реквизит является реквизитом объектного типа,
но не основным, будет вызвано исключение.</p>

<p class="MsoNormalCxSpFirst">Разработчик
имеет возможность влиять на процесс проверки путем определения в модуле
объекта, набора записей и в модуле формы обработчика события <span class="Term">ОбработкаПроверкиЗаполнения</span>.</p>

<p class="MsoNormalCxSpLast">Определив
обработчик события, разработчик получает полный контроль над проверкой заполнения.
В параметре <span class="Term">ПроверяемыеРеквизиты</span>
обработчик получает массив реквизитов, для которых в режиме Конфигуратор
указано, что они должны проверяться. Разработчик может произвольно
модифицировать этот массив:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
удалять те реквизиты, проверку заполнения
которых он реализует сам или считает, что их не нужно проверять в данный момент;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
добавлять необходимые реквизиты, для которых
должна выполниться проверка заполнения.</p>

<p class="MsoNormalCxSpFirst">В
случае если разработчика не устраивает стандартная процедура проверки, он может
написать алгоритм проверки сам и, используя объект <span class="Term">СообщениеПользователю</span>, сообщить об имеющихся
проблемах пользователю.</p>

<p class="MsoNormalCxSpMiddle">Если
в процессе проверки разработчик вывел пользователю сообщения об ошибках, необходимо
установить параметр <span class="Term">Отказ</span> в значение <span class="Term">Истина</span>, чтобы
уведомить платформу о том, что текущее действие не может быть завершено.</p>

<p class="MsoNormalCxSpLast">Параметр
события <span class="Term">ПроверяемыеРеквизиты</span> содержит имена атрибутов
в следующем формате:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
для реквизитов и констант – <span class="Term">ИмяРеквизита</span>, например, <span class="Term">Поставщик</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
для табличных частей – <span class="Term">ИмяТабличнойЧасти</span>, например, <span class="Term">Товары</span>;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
для реквизитов табличных частей – <span class="Term">ИмяТабличнойЧасти.ИмяРеквизита</span>, например, <span class="Term">Товары.Номенклатура</span>;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
для реквизитов форм – <span class="Term">ИмяРеквизита</span>, например, <span class="Term">ДокументОбъект</span>.</p>

<p class="MsoNormalCxSpFirst"><a name="_ref216098913"></a><a name="_toc212961213">Для реквизитов, входящих в состав функциональных опций (см. <a href="#_ref221348676">здесь</a>) без параметров, значение опции учитывается при проверке
заполнения. Если функциональная опция включена, то реквизит будет включен в
список проверяемых реквизитов; если опция выключена, реквизит не будет включен
в список проверяемых реквизитов. Это значит, что отключенное поле не будет передано
через параметры </a><span class="Term">ПроверяемыеРеквизиты</span> в <span class="Term">ОбработкаПроверкиЗаполнения</span>.</p>

<p class="MsoNormalCxSpLast">Реквизиты,
входящие в состав функциональной опции с параметрами (см. <a href="#_ref221348676">здесь</a>), всегда включаются в список проверяемых реквизитов
(параметр <span class="Term">ПроверяемыеРеквизиты</span>). Удаление реквизита из
списка проверяемых реквизитов в таких случаях необходимо выполнять в обработчике
<span class="Term">ОбработкаПроверкиЗаполнения</span>. Для этого следует
получить значение функциональной опции, указав в качестве параметров
необходимые данные объекта.</p>

<a id="TI000000294" class="bookmark" name="issogl3_5.6.11.4_правила_отображения_отметки_незаполненного"><h4>5.6.11.4. Правила отображения отметки незаполненного</h4></a>

<p class="MsoNormal">На
отображение отметки незаполненного влияют следующие свойства элементов
конфигурации:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
свойство<span class="Interface"> Проверка заполнения</span>
реквизита или стандартного реквизита объекта метаданных;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
свойство<span class="Interface"> Проверка заполнения</span>
реквизита формы;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
свойство<span class="Interface"> Автоотметка незаполненного</span>
элемента формы;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
свойство <span class="Term">ОтметкаНезаполненного</span> элемента формы (доступно
только для программного изменения).</p>

<p class="MsoNormal">Свойство
элемента формы <span class="Interface">Автоотметка
незаполненного</span> может быть установлено в значение:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">Авто – </span>отметка
будет отображаться, если у реквизита формы или реквизита (стандартного
реквизита) объекта метаданных свойство <span class="Interface">Проверка заполнения</span>
установлено в значение <span class="Interface">Выдавать ошибку</span>
и реквизит, связанный с элементом формы, содержит пустое значение.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Да</span> – отметка
будет отображаться для незаполненного элемента вне зависимости от того, в каком
состоянии находится свойство <span class="Interface">Проверка заполнения</span>.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Interface">Нет</span> – отметка
не будет отображаться для незаполненного элемента вне зависимости от того, в
каком состоянии находится свойство <span class="Interface">Проверка заполнения</span>.</p>

<p class="MsoNormal">При
начале интерактивного изменения поля ввода отметка незаполненного перестает
отображаться, при этом значение свойства <span class="Term">ОтметкаНезаполненного</span> не изменяется.
Отображение отметки восстанавливается (если это необходимо) после того, как в
поле ввода завершено интерактивное редактирование или установлено значение. При
этом свойство <span class="Term">ОтметкаНезаполненного</span> может быть изменено системой
в том случае, если свойство <span class="Term">АвтоОтметкаНезаполненного</span> установлено в
значение <span class="Term">Истина</span>:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
если значение в поле не заполнено, то свойство <span class="Term">ОтметкаНезаполненного</span> будет установлено в
значение <span class="Term">Истина</span>;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
если в поле значение заполнено, то свойство <span class="Term">ОтметкаНезаполненного</span> будет установлено в
значение <span class="Term">Ложь</span>.</p>

<p class="Note"><span class="Note">Примечание.</span> Если свойство <span class="Term">ОтметкаНезаполненного</span> установлено у таблицы,
то для таблицы, в которой нет строк, будет подсвечена первая строка, а для
заполненной таблицы – все строки.</p>

<p class="MsoNormal">Кроме
того, отметка незаполненного также будет отображена, если в окне сообщений есть
сообщение (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 6. командный интерфейс.htm?_=1496848987#_ref220330559">здесь</a>), связанное с конкретным полем формы, вне зависимости
от установленных свойств элемента формы и связанных с ним реквизитов. После очистки
окна сообщений отметка незаполненного снимается у тех элементов формы, значение
свойства <span class="Term">ОтметкаНезаполненного</span> которых равно значению <span class="Term">Ложь</span>.</p>

<a name="_ref425413740"></a><a id="TI000000295" class="bookmark" name="issogl2_5.6.12_индексирование_реквизитов_объектов"><h3>5.6.12. Индексирование реквизитов объектов</h3></a>

<p class="MsoNormalCxSpFirst">Большинство
прикладных объектов конфигурации имеют в составе подчиненных объектов группу <span class="Interface">Реквизиты</span>. В
этой группе указываются дополнительные характеристики объектов.</p>

<p class="MsoNormalCxSpMiddle">В
режиме 1С:Предприятие часто требуется осуществлять отбор данных по значению какого-либо
реквизита или сортировать списки данных по реквизитам. Средства «1С:Предприятия»
позволяют выполнить подобную задачу, однако если данных достаточно много, такая
задача может выполняться долго.</p>

<p class="MsoNormalCxSpMiddle">Чтобы
ускорить эту работу, следует реквизитам, по которым будет выполняться отбор или
сортировка, устанавливать свойство <span class="Interface">Индексировать</span>. Если
свойство установлено (выбрано значение <span class="Interface">Индексировать</span>
или <span class="Interface">Индексировать с доп.
упорядочиванием</span>), то подобные задачи будут выполняться эффективнее. Для
примитивных типов реквизитов указание индексирования предоставляет пользователям
средство сортировки списка по щелчку мыши в области заголовка колонки.</p>

<p class="MsoNormalCxSpMiddle">Наряду
с сортировкой по реквизиту или отбором данных по значению какого-либо реквизита
часто требуется, чтобы в результирующем списке данные были дополнительно
отсортированы по основному представлению (наименованию или коду), т. е.
в пределах одного значения реквизита записи были отсортированы по
представлению. Добиться правильного результата можно, если выбрано значение
индексирования <span class="Interface">Индексировать</span>, а в
условиях сортировки списка указаны реквизит и представление.</p>

<p class="MsoNormalCxSpLast">Если
возникает необходимость минимизации времени таких отборов или сортировки, то
для реквизита следует выбрать значение индексирования <span class="Interface">Индексировать с доп.
упорядочиванием</span> (если выбор такого значения возможен).</p>

<p class="Note"><span class="Note">ВНИМАНИЕ!</span> Механизм дополнительного упорядочивания
будет эффективно использоваться только в том случае, когда в режиме
1С:Предприятие в условиях сортировки списка указан определенный порядок сортировки:
сначала по реквизиту, а затем по представлению.</p>

<p class="MsoNormalCxSpFirst">Если
такие условия сортировки не задаются, то использование значения <span class="Interface">Индексировать с доп.
упорядочиванием</span> не имеет смысла, т. к. оно будет эквивалентно
обычному индексированию, однако размер индекса при этом будет больше.</p>

<p class="MsoNormalCxSpMiddle">Индексирование
с дополнительным упорядочиванием используется для реквизитов справочников,
документов, планов видов характеристик, планов счетов, планов видов расчетов.</p>

<p class="MsoNormalCxSpLast">Для
реквизитов регистров допускается использование обычного индексирования.</p>

<a id="TI000000296" class="bookmark" name="issogl2_5.6.13_права"><h3>5.6.13. Права</h3></a>

<p class="MsoNormalCxSpFirst">Права
доступа к объектам конфигурации можно редактировать как с помощью редактора
прав доступа ролей (см. <a href="#_ref216085312">здесь</a>), так и с помощью окна редактирования объекта (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 2. работа с конфигурацией.htm?_=1496848987#_ref414277435">здесь</a>).</p>

<p class="MsoNormalCxSpMiddle">В
окне редактирования объекта выполняется настройка прав доступа для данного
объекта во всех ролях, которые существуют в системе.</p>

<p class="MsoNormalCxSpLast">Имеется
возможность задавать права доступа:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
для собственно объектов метаданных,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
табличных частей,</p>

<p class="MsoListBulletCxSpLast">&#9679; 
реквизитов объектов.</p>

<a name="_ref215985342"></a><a id="TI000000297" class="bookmark" name="issogl2_5.6.14_быстрый_выбор"><h3>5.6.14. Быстрый выбор</h3></a>

<p class="MsoNormalCxSpFirst">За
способ выбора объектов при заполнении полей ввода отвечают свойства <span class="Interface">Способ выбора</span> и
<span class="Interface">Быстрый выбор</span>.</p>

<p class="MsoNormalCxSpMiddle">Свойство
<span class="Interface">Быстрый выбор</span>
отвечает за режим выбора по умолчанию. Свойство доступно только в том случае,
если свойство <span class="Interface">Способ выбора</span>
имеет значение <span class="Interface">Обоими способами</span>.
Покажем работу свойств <span class="Interface">Быстрый выбор</span>
на примере.</p>

<p class="MsoNormalCxSpMiddle">Допустим,
у нас есть справочник <span class="Term">Склады</span>. У него свойство <span class="Interface">Способ выбора</span>
равно <span class="Interface">Обоими способами</span>,
а также установлено свойство <span class="Interface">Быстрый выбор</span>.
В этом случае по умолчанию выбор из значений справочника <span class="Term">Склады</span> во всей конфигурации будет осуществляться
в режиме быстрого выбора. Если отключить свойство <span class="Interface">Быстрый выбор</span>,
то выбор по умолчанию станет <span class="Interface">Из формы</span>.</p>

<p class="MsoNormalCxSpMiddle">Также
имеется возможность явного переопределения режима выбора для реквизита объекта
метаданных и/или элемента формы. Для этого достаточно изменить значение <span class="Interface">Авто</span> свойства <span class="Interface">Быстрый выбор</span>
на значение <span class="Interface">Использовать</span> –
для разрешения быстрого выбора или <span class="Interface">Не использовать</span> –
для запрещения быстрого выбора. По умолчанию свойство <span class="Interface">Быстрый выбор</span>
реквизита объекта метаданных и элемента формы установлено в значение <span class="Interface">Авто</span>.</p>

<p class="MsoNormalCxSpLast">Таким
образом, получается трехуровневая схема управления режимом выбора:</p>

<p class="MsoListNumberCxSpFirst">1.  Вначале
платформа анализирует свойство <span class="Interface">Быстрый выбор</span>
элемента формы.</p>

<p class="MsoListNumberCxSpMiddle">2.  Если
свойство равно <span class="Interface">Авто</span>, то оно
анализируется у реквизита объекта.</p>

<p class="MsoListNumberCxSpLast">3. 
В случае равенства <span class="Interface">Авто</span> выполняется анализ свойств <span class="Interface">Способ выбора</span> и <span class="Interface">Быстрый выбор</span> прикладного объекта, соответствующего типу
реквизита. Если на каком-то из первых двух уровней (элемент формы и реквизит
объекта) значение свойства <span class="Interface">Быстрый выбор</span> отлично от <span class="Interface">Авто</span>, анализ прекращается и выполняется выбор в
определенном режиме.</p>

<p class="Note"><span class="Note">Примечание.</span> Если свойство <span class="Interface">Способ выбора</span>
прикладного объекта равно <span class="Interface">Из формы</span> или <span class="Interface">Быстрый выбор</span>
(но только не <span class="Interface">Обоими способами</span>),
то установка свойств <span class="Interface">Быстрый выбор</span> реквизита
и элемента формы никак не влияет на способ выбора.</p>

<a name="_ref216607027"></a><a name="_ref271726534"></a><a name="_ref367986040"></a><a name="_ref397440919"></a><a id="TI000000298" class="bookmark" name="issogl2_5.6.15_история_выбора_при_вводе"><h3>5.6.15. История выбора при вводе</h3></a>

<p class="MsoNormalCxSpFirst">В том случае, если поле ввода формы связано с данными
ссылочного типа (справочники, документы, перечисления, бизнес-процессы, задачи,
планы видов характеристик, планы видов расчета, планы счетов и планы обмена),
для него доступно управление отображением и формированием истории выбора при
вводе. Управление основано на значении свойства <span class="Term">ИсторияВыбораПриВводе</span>,
которое присутствует в свойствах объекта конфигурации, реквизита объекта
конфигурации и поля ввода управляемой формы.</p>

<p class="MsoNormalCxSpLast">Управление историей выбора реализовано с помощью
трехуровневой схемы управления:</p>

<p class="MsoListNumberCxSpFirst">1. 
Вначале платформа анализирует свойство ИсторияВыбораПриВводе для
поля ввода формы.</p>

<p class="MsoListNumberCxSpMiddle">2. 
Если значение свойства равно <span class="Interface">Авто</span>, то выполняется анализ свойства <span class="Term">ИсторияВыбораПриВводе</span>
у реквизита, отображаемого полем ввода.</p>

<p class="MsoListNumberCxSpLast">3.  Если
значение свойства равно <span class="Interface">Авто</span>, выполняется анализ свойства <span class="Term">ИсторияВыбораПриВводе</span>
у объекта конфигурации, соответствующего типу реквизита.</p>

<p class="MsoNormal">Значение свойства <span class="Term">ИсторияВыбораПриВводе</span>
может принимать значение <span class="Interface">Авто</span> и <span class="Interface">Не использовать</span>. В том случае, если свойство имеет
значение <span class="Interface">Авто</span> на всех «уровнях» принятия решения, то история
выбора будет отображаться и сохраняться при условии выполнения всех следующих
условий:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Поле ввода отображает значение ссылочного типа;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Не установлен режим выбора из списка;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Не используется быстрый выбор
(см. <a href="#_ref215985342">здесь</a>).</p>

<p class="MsoNormalCxSpFirst">Во всех остальных случаях история выбора не
будет сохраняться и отображаться.</p>

<p class="MsoNormalCxSpLast">История выбора состоит из 7 значений:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Не более 5 наиболее часто используемых значений;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Последние выбранные значения в таком количестве,
чтобы общий список не превышал 7 элементов.</p>

<p class="MsoNormal">Если значение из последних выбранных
присутствует в списке часто используемых значений, то отображается предыдущее выбранное
значение. Если в поле ввода все выбранные значения примерно равновероятны, то в
истории выбора отображаются только не более 7 последних выбранных значений. При
определении частоты использования учитывается как частота выбора значения, так
и время, прошедшее с момента выбора.</p>

<a name="_ref397525967"></a><a id="TI000001480" class="bookmark" name="issogl2_5.6.16_создание_нового_элемента_при_вводе"><h3>5.6.16. Создание нового элемента при вводе</h3></a>

<p class="MsoNormalCxSpFirst">В том случае, если поле ввода формы связано
с данными ссылочного типа (справочники, документы, перечисления, бизнес-процессы,
задачи, планы видов характеристик, планы видов расчета, планы счетов и планы
обмена), для него доступно управление созданием нового элемента из поля ввода.
Управление основано на значении свойства СозданиеПриВводе,
которое присутствует в свойствах объекта конфигурации, реквизита объекта
конфигурации и поля ввода управляемой формы.</p>

<p class="MsoNormalCxSpLast">Управление возможностью создания элемента из
выпадающего списка реализовано с помощью трехуровневой схемы управления:</p>

<p class="MsoListNumberCxSpFirst">1. 
Вначале платформа анализирует свойство <span class="Term">КнопкаСоздания</span>
для поля ввода формы.</p>

<p class="MsoListNumberCxSpMiddle">2.  Если
значение свойства равно <span class="Interface">Авто</span>, то выполняется анализ свойства СозданиеПриВводе у
реквизита, отображаемого полем ввода.</p>

<p class="MsoListNumberCxSpLast">3.  Если
значение свойства равно <span class="Interface">Авто</span>, выполняется анализ свойства СозданиеПриВводе у
объекта конфигурации, соответствующего типу реквизита.</p>

<p class="MsoNormalCxSpFirst">Анализ прекращается после того, как на
каком-то из уровней обнаружено значение свойство, отличное от значения <span class="Interface">Авто</span>.</p>

<p class="MsoNormalCxSpMiddle">В том случае, если создание элемента из поля
ввода необходимо выполнить особым образом, разработчик должен обработать
событие <span class="Term">Создание</span>.
Событие возникает при нажатии кнопки создания в выпадающем списке.</p>

<p class="MsoNormalCxSpLast">Если в обработчике данного события параметр <span class="Term">СтандартнаяОбработка</span>
установлен в значение <span class="Term">Ложь</span>,
то система не будет выполнять никаких действий, и ожидается, что открытие формы
нового элемента разработчик выполнит самостоятельно. Если параметр <span class="Term">СтандартнаяОбработка</span>
установлен в значение <span class="Term">Истина</span>,
то система выполнит открытие основной формы объекта, при этом в форму будут
переданы следующие параметры:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Term">РежимВыбора</span>, тип <span class="Term">Булево</span>,
значение – <span class="Term">Истина</span>.
Признак того, что форма находится в режиме выбора.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">ТекстЗаполнения</span>, тип <span class="Term">Строка</span>.
Параметр содержит текст, введенный в поле ввода перед нажатием кнопки создания
нового элемента.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">ЗначенияЗаполнения</span>, тип <span class="Term">Структура</span>.
Параметры заполнения для создаваемого объекта.
Структура заполняется из параметров выбора и связей параметров выбора. В
структуру попадают только те значения, имена которых начинаются с текста <span class="Term">Отбор.</span>.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Term">ПараметрыВыбора</span>, тип <span class="Term">Структура</span>.
Значение параметра является полной копией параметра <span class="Term">ЗначенияЗаполнения</span>.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Term">ДополнительныеПараметры</span>, тип <span class="Term">Структура</span>.
Дополнительные параметры, которые прикладной разработчик считает нужным
передать в форму объекта. Структура заполняется из параметров выбора и связей
параметров выбора. В структуру попадают только те значения, имена которых
начинаются с текста <span class="Term">Дополнительно.</span>.</p>

<p class="MsoNormalCxSpFirst">Владельцем открываемой формы нового объекта
будет выступать поле ввода, откуда вызвано создание объекта.</p>

<p class="MsoNormalCxSpLast">Параметры выбора (см. <a href="#_ref397525393">здесь</a>) и связи параметров выбора (см. <a href="#_ref397525399">здесь</a>) ограничивают список существующих элементов, которые
могут быть выбраны в поле ввода. Для того чтобы создаваемый из поля ввода
элемент также соответствовал наложенным ограничениям, существует специальный
механизм:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
При открытии формы нового объекта, которая
инициирована из поля ввода, значение параметра формы <span class="Term">ПараметрыВыбора</span>
копируются в одноименное свойство управлемой формы.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Если создание элемента выполняется в режиме
выбора (свойство управлемой формы <span class="Term">РежимВыбора</span>
установлено в значение <span class="Term">Истина</span>),
то перед вызовом обработчика события управляемой формы <span class="Term">ПослеЗаписиНаСервере</span>
выполняется проверка соответствия реквизитов созданного объекта требуемым
параметрам (свойство формы <span class="Term">ПараметрыВыбора</span>).
По результатам проверки устанавливается свойство управляемой формы <span class="Term">ВыборДоступен</span>.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Перед закрытием формы (перед вызовом обработчика
события <span class="Term">ПриЗакрытии</span>)
вызывается обработчик события <span class="Term">ВыборЗначения</span>.
По результатам вызова обработчика (значение параметра <span class="Term">СтандартнаяОбработка</span>)
и свойства <span class="Term">ВыборДоступен</span>,
принимается решение о дальнейших действиях:</p>

<p class="MsoListBullet2">&#9679; 
Обработчик события <span class="Term">ВыборЗначения</span> не задан, или обработчик задан,
а параметр <span class="Term">СтандартнаяОбработка</span> после работы обработчика
установлен в значение <span class="Term">Истина</span>:</p>

<p class="MsoListBullet3CxSpFirst">&#9679; 
Значение свойства <span class="Term">ВыборДоступен</span> установлено в значение <span class="Term">Истина</span> – выполняется выбор созданного
элемента;</p>

<p class="MsoListBullet3CxSpLast">&#9679; 
Значение свойства <span class="Term">ВыборДоступен</span> установлено в значение <span class="Term">Ложь</span> – формируется сообщение о том, что созданный
элемент не соответствует параметрам выбора, и выбор созданного элемента не
выполняется.</p>

<p class="MsoListBullet2">&#9679; 
Обработчик события <span class="Term">ВыборЗначения</span> задан и после работы обработчика
параметр <span class="Term">СтандартнаяОбработка</span> установлен в значение <span class="Term">Ложь</span> – выбор созданного элемента не
выполняется, сообщение не формируется. Разработчик должен самостоятельно выполнить
необходимые действия: выдать диагностическое сообщение, установить в поле ввода
значение по умолчанию и т. д.</p>

<p class="Indentlist">Если выполняется
выбор созданного элемента, то:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
Форма элемента закрывается;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
Для поля ввода, из выпадающего списка которого
вызвано создание элемента, вызывается событие <span class="Term">ОбработкаВыбора</span>.</p>

<p class="Indentlist">Если выбор созданного элемента не
выполняется, то форма элемента закрывается, более никаких действий не
выполняется.</p>

<a name="_ref397525399"></a><a id="TI000000299" class="bookmark" name="issogl2_5.6.17_связи_параметров_выбора"><h3>5.6.17. Связи параметров выбора</h3></a>

<p class="MsoNormalCxSpFirst"><span class="Interface">Связи параметров выбора</span> – данное свойство позволяет
указать список реквизитов, которые будут поставлять значения, используемые при
выборе значения реквизита, при открытии формы выбора, при отображении списка
быстрого выбора и при выполнении ввода по строке.</p>

<p class="MsoNormalCxSpLast">В
качестве примера можно привести выбор договора с контрагентом. Вначале осуществляется
выбор контрагента, а затем выполняется выбор договора только из списка
договоров выбранного контрагента. Причем отбор автоматически изменяется при
смене контрагента.</p>

<p class="Regularbeforepicture">Для
того чтобы ограничить выбор, реквизиту в свойстве <span class="Interface">Связи параметров
выбора</span> устанавливается соответствие имени реквизита, по которому будет
выполняться фильтрация выбираемых значений, и реквизита, из которого будет
браться значение фильтрации.</p>

<p class="Picture"><IMG src="_img/img00148.gif?_=1496848987" WIDTH="626" ALT HEIGHT="431"></p>

<p class="MsoCaption">Рис.
149. Связи параметров выбора</p>

<p class="MsoNormalCxSpFirst">Значения,
указанные в данном свойстве, будут переданы в открываемую форму через структуру
<span class="Term">Параметры</span> (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 7. формы.htm?_=1496848987#_ref425411623">здесь</a>). При этом значение колонки <span class="Interface">Имя</span> будет
соответствовать ключу элемента структуры, а значение реквизита, указанное в
колонке <span class="Interface">Реквизит</span>, –
значению элемента структуры. Если в колонке <span class="Interface">Имя</span> указано
значение вида <span class="Interface">Отбор.Владелец</span>,
то будет создан параметр формы <span class="Term">Отбор</span> (типа <span class="Term">Структура</span>). В этой структуре будет создан
элемент с ключом <span class="Interface">Код</span> и
значением, полученным из реквизита, указанного в колонке <span class="Interface">Реквизит</span> (в
нашем примере – <span class="Interface">Поставщик</span>).</p>

<p class="MsoNormalCxSpMiddle">Если
имя у какого-либо элемента свойства <span class="Interface">Связи параметров
выбора</span> совпадает с именем какого-либо элемента свойства <span class="Interface">Параметры выбора</span>
(см. <a href="#_ref271716125">здесь</a>), то приоритет отдается элементу из свойства <span class="Interface">Связи параметров
выбора</span> в том случае, если значение поля, указанного в элементе <span class="Interface">Связи параметров
выбора</span>, переданное в функцию <span class="Term">ЗначениеЗаполнено()</span>, возвращает <span class="Term">Истина</span>. При этом элемент из свойства <span class="Interface">Параметры выбора</span>
игнорируется.</p>

<p class="MsoNormalCxSpMiddle">Также
в окне редактирования связей параметров выбора можно задать режим очистки поля
при изменении полей связи. Если значение свойства <span class="Interface">Режим изменения
связанного значения</span> равно <span class="Interface">Очищать</span>, то
поле будет очищено при интерактивном изменении значения связи (изменением считается
также повторный выбор значения, ранее находившегося в поле) до наступления
события <span class="Term">ПриИзменении</span>. В противном случае (значение
свойства равно <span class="Interface">Не изменять</span>)
поле не будет очищено. Очистка происходит вне зависимости от реального
изменения значения в элементе связи и выполняется до вызова обработчика события
<span class="Term">ПриИзменении</span>.</p>

<p class="MsoNormalCxSpMiddle">Если
поле отображает данные таблицы (колонка таблицы или отдельное поле, связанное с
текущими данными), то очистка такого поля производится, если источником данных
для таблицы формы является <span class="Term">ДанныеФормаКоллекция</span> или <span class="Term">ДанныеФормыСтруктураСКоллекцией</span>. Если
реквизит, который нужно очистить, связан с табличными данными, а реквизит связи
не является табличными данными, то очищаются значения во всех строках таблицы, где
расположен реквизит, для которого выполнена настройка связей параметров выбора.
Реквизит не может быть очищен, если он связан с колонкой реквизита типа <span class="Term">ДинамическийСписок</span>.</p>

<p class="MsoNormalCxSpLast">Для
стандартного реквизита <span class="Term">Родитель</span> подчиненного справочника возможна
ситуация, когда свойство <span class="Interface">Связи параметров выбора</span>
будет изменено системой автоматически. Это изменение происходит в следующих
случаях:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
когда у справочника изменяется состояние
подчиненности;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
когда у справочника изменяется значение свойства
<span class="Interface">Иерархический
справочник</span>.</p>

<p class="MsoNormal">Это
изменение происходит следующим образом:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
если справочник является подчиненным и
иерархическим, то для реквизита <span class="Term">Родитель</span> в свойство <span class="Interface">Связи параметров выбора</span>
добавляется параметр <span class="Interface">Имя: Отбор.Владелец</span> –
<span class="Interface">Реквизит: Владелец</span>;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
в противном случае параметр <span class="Interface">Имя: Отбор.Владелец –
Реквизит: Владелец</span> удаляется из списка параметров свойства <span class="Interface">Связи параметров
выбора</span> стандартного реквизита <span class="Term">Родитель</span>.</p>

<p class="Regularbeforepicture">Рассмотрим
пример: на форме есть поле <span class="Term">Поставщик</span> и поле <span class="Term">РасчетныйСчетПоставщика</span>. Для поля <span class="Term">РасчетныйСчетПоставщика</span> свойство <span class="Term">СвязиПараметровВыбора</span> установлено в значение <span class="Term">Объект.Поставщик</span>, которое будет устанавливаться
в поле отбора <span class="Term">Владелец</span>.</p>

<p class="Picture"><IMG src="_img/img00149.gif?_=1496848987" WIDTH="561" ALT HEIGHT="451"></p>

<p class="MsoCaption">Рис.
150. Очистка связанных элементов формы</p>

<p class="MsoNormal">Тогда
при интерактивном изменении значения поля <span class="Term">Поставщик</span> будет происходить автоматическая
очистка значения поля <span class="Term">РасчетныйСчетПоcтавщика</span>.</p>

<a name="_ref271716125"></a><a name="_ref397525393"></a><a id="TI000000300" class="bookmark" name="issogl2_5.6.18_параметры_выбора"><h3>5.6.18. Параметры выбора</h3></a>

<p class="Regularbeforepicture"><span class="Interface">Параметры выбора</span> – данное свойство позволяет
указать значения параметров, которые будут применяться при выборе значения
реквизита. Параметры выбора будут выполняться при открытии формы выбора, при
отображении списка быстрого выбора и при выполнении ввода по строке. Например,
необходимо ограничить выбор только теми товарами, у которых реквизит <span class="Term">Вид</span> равен значению <span class="Term">Перечисление.ВидыТоваров.Услуга</span>. Для
конкретного значения отбора можно указать список значений. Для этого при
редактировании колонки <span class="Interface">Значение</span>
следует выбрать тип <span class="Interface">Фиксированный массив</span>.</p>

<p class="Picture"><IMG src="_img/img00150.gif?_=1496848987" WIDTH="630" ALT HEIGHT="473"></p>

<p class="MsoCaption">Рис.
151. Параметры выбора</p>

<p class="MsoNormalCxSpFirst">Значения,
указанные в данном свойстве, будут переданы в открываемую форму через структуру
<span class="Term">Параметры</span>. При этом значение колонки <span class="Interface">Имя</span> будет
соответствовать ключу элемента структуры, а колонка <span class="Interface">Значение</span> –
значению элемента структуры. Если в колонке <span class="Interface">Имя</span> указано
значение вида <span class="Interface">Отбор.Код</span>, то
будет создан параметр формы <span class="Term">Отбор</span> (типа <span class="Term">Структура</span>). В этой структуре будет создан
элемент с ключом <span class="Interface">Код</span> и значением
<span class="Interface">Значение</span>.</p>

<p class="MsoNormalCxSpLast">Если
имя у какого-либо параметра свойства <span class="Interface">Связи параметров
выбора</span> (см. <a href="#_ref271726534">здесь</a>) совпадает с именем какого-либо параметра свойства <span class="Interface">Параметры выбора</span>,
то приоритет отдается элементу из свойства <span class="Interface">Связи параметров
выбора</span> (параметр из свойства <span class="Interface">Параметры выбора</span>
игнорируется). Приоритет будет отдан в том случае, если значение поля, указанного
в параметре <span class="Term">Реквизит</span> свойства <span class="Interface">Связи параметров
выбора</span>, является заполненным (функция <span class="Term">ЗначениеЗаполнено()</span> для этого значения возвращает
значение <span class="Term">Истина</span>).</p>

<p class="Note"><span class="Note">Примечание.</span> Значения, указанные в свойстве реквизита <span class="Interface">Параметры выбора</span>,
также используются динамическим списком и системой компоновки данных.</p>

<p class="MsoNormal">При выборе значения субконто в ячейке
таблицы, связанной с набором записей регистра бухгалтерии, автоматически
устанавливается параметр выбора для поля <span class="Term">Владелец</span>,
только если данный вид субконто имеет тип справочника дополнительных значений
субконто. Значением параметра выбора является соответствующий вид субконто.</p>

<a id="TI000000301" class="bookmark" name="issogl2_5.6.19_прочее"><h3>5.6.19. Прочее</h3></a>

<p class="MsoNormalCxSpFirst">Свойство
<span class="Interface">Использовать
стандартные команды</span> определяет возможность включения стандартных команд
(например, команды открытия списка справочника) этого объекта в командный
интерфейс. Если свойство имеет значение <span class="Term">Ложь</span>, то стандартные команды не будут
отображаться системой, и включить объект в интерфейс можно только с помощью
команды, созданной в конфигураторе.</p>

<p class="MsoNormalCxSpMiddle">Свойство
<span class="Interface">Форма выбора</span> устанавливает
форму, которая будет применяться для выбора значения реквизита. Используется
для реквизитов, тип которых образован объектом метаданных, имеющим понятие
форма. Например, у справочника <span class="Term">Товары</span> есть
несколько форм выбора, при этом для стандартного реквизита <span class="Term">Родитель</span>
необходимо использовать особую форму. Для реализации такого поведения нужно
указать эту особую форму в свойстве <span class="Interface">Форма выбора</span>
стандартного реквизита <span class="Term">Родитель</span> (подробнее про стандартные реквизиты см. <a href="#_ref425411626">здесь</a>).</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Формат</span> – для типов <span class="Term">Число</span>, <span class="Term">Булево</span>, <span class="Term">Дата</span> позволяет задать формат, с помощью
которого при выводе будут отображаться данные реквизита.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Формат редактирования</span> – свойство позволяет задать
формат редактирования данных типов <span class="Term">Число</span>, <span class="Term">Булево</span>, <span class="Term">Дата</span>.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Связь по типу</span> –
устанавливает связь с реквизитом, ограничивая тип вводимых значений для поля
ввода. Настройка связи по типу имеет смысл для реквизитов с составным
типом
данных, логически связанных с другим реквизитом типа <span class="Term">ПланВидовХарактеристик.Ссылка</span>, в том числе для
связи реквизита, содержащего субконто с реквизитом, который содержит значение
типа <span class="Interface">Ссылка на план счетов</span>.
Элемент связи по типу содержит номер вида субконто для случая, если реквизит, с
которым выбрана связь по типу, имеет значение типа <span class="Interface">Ссылка на план счетов</span>.</p>

<p class="MsoNormalCxSpLast">Например, есть два реквизита – <span class="Term">ВидХарактеристики</span> и <span class="Term">Характеристика</span>. У
реквизита <span class="Term">ВидХарактеристики</span> –
тип <span class="Term">ПланВидовХарактеристикВидыХарактеристикТоваров.Ссылка</span>; у
реквизита <span class="Term">Характеристика</span> –
тип <span class="Term">Характеристика.ВидыХарактеристикТоваров</span>. В
свойствах реквизита <span class="Term">Характеристика</span>
можно установить свойство <span class="Interface">Связь по типу</span> –
<span class="Term">ВидХарактеристики</span>.
Тогда тип выбираемого значения будет определяться типом, который задан для выбранного
значения плана видов характеристик.<a name="_ref214868259"></a></p>

<a id="TI000000302" class="bookmark" name="issogl1_5.7_константы"><h2>5.7. Константы</h2></a>

<a id="TI000001705" class="bookmark" name="issogl2_5.7.1_общая_информация"><h3>5.7.1. Общая информация</h3></a>

<p class="MsoNormalCxSpFirst">В
системе «1С:Предприятие» константы предназначены для хранения постоянной или
условно-постоянной информации. Такая информация либо совсем не изменяется в
процессе деятельности предприятия, либо изменяется достаточно редко. Наиболее
простой пример подобной информации – название организации, которое, как правило,
не меняется.</p>

<p class="MsoNormalCxSpMiddle">Основная
причина использования констант заключается в том, что в них один раз заносится
какая-либо информация, которая затем может использоваться при формировании документов,
в расчетах, при построении отчетных форм. Значение константы время от времени
может редактироваться.</p>

<p class="MsoNormalCxSpLast">Рассмотрим
такой пример. Наиболее часто на документах предприятия встречается подпись
директора и главного бухгалтера. Естественно, что эти должностные лица должны самостоятельно
ставить подписи. Но помимо самой подписи в документах требуется ее расшифровка –
фамилия подписавшего документ. Конечно, можно ввести фамилии директора и
главного бухгалтера непосредственно в формы документов. Но если какая-либо из
фамилий изменится, то придется вновь редактировать все бланки документов и
исправлять фамилии. Поэтому гораздо удобнее создать в конфигурации две константы –
для хранения фамилий директора и главного бухгалтера, ввести эти фамилии в константы
один раз, а в многочисленных бланках документов использовать имена констант для
получения их значений. При смене директора или главного бухгалтера достаточно
внести изменения только в константы – ввести в них новые фамилии, и все
изменения автоматически будут отражены в тех местах, где эти константы
используются.</p>

<p class="Note"><span class="Note">ВНИМАНИЕ!</span> При изменении значения константы прежнее
значение теряется. Для получения прежних значений данных вместо константы нужно
использовать регистр сведений без измерений.</p>

<p class="MsoNormal">Конфигуратор
системы «1С:Предприятие» позволяет создавать практически неограниченное
количество констант для хранения любой нужной информации.</p>

<a id="TI000000303" class="bookmark" name="issogl2_5.7.2_свойства_константы"><h3>5.7.2. Свойства константы</h3></a>

<p class="MsoNormalCxSpFirst">Для
работы с константами предназначена ветвь <span class="Interface">Константы</span>
дерева конфигурации.</p>

<p class="MsoNormalCxSpMiddle">Свойства
константы редактируются в палитре свойств. Необходимо обратить внимание, что
константа является типизированным объектом конфигурации.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Тип</span> – указывается тип константы. Тип константы
может быть любым из стандартных типов конфигурации (<span class="Term">Дата</span>, <span class="Term">Число</span>, <span class="Term">СправочникСсылка</span>,
<span class="Term">ДокументСсылка</span> и т. д.)
или составным (состоящим из набора различных типов).</p>

<p class="MsoNormalCxSpMiddle">В
зависимости от выбранного типа палитра свойств может содержать дополнительные
свойства, уточняющие выбранный тип.</p>

<p class="MsoNormalCxSpMiddle">Если
форму редактирования константы необходимо показать в командном интерфейсе, то
следует установить свойство <span class="Interface">Использовать
стандартные команды</span>. В этом случае команда открытия редактора константы
будет отображена в тех подсистемах, к которым отнесена константа. Форма
редактирования константы задается с помощью свойства <span class="Interface">Основная форма</span>
(подробнее см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 27. инструменты разработки.htm?_=1496848987#_ref217280928">здесь</a>).</p>

<p class="MsoNormalCxSpLast">Формы
для ввода констант создаются в ветви <span class="Interface">Общие формы</span> (см. <a href="#_ref425411631">здесь</a>).</p>

<a name="_ref346707986"></a><a name="_ref9253677"></a><a name="_ref428962320"></a><a id="TI000000304" class="bookmark" name="issogl1_5.8_справочники"><h2>5.8. Справочники</h2></a>

<a id="TI000001575" class="bookmark" name="issogl2_5.8.1_общая_информация"><h3>5.8.1. Общая информация</h3></a>

<p class="MsoNormalCxSpFirst">При
заполнении бланка какого-либо документа часто требуется указывать информацию,
выбирая значение из заранее заданного списка.</p>

<p class="MsoNormalCxSpMiddle">Возьмем
в качестве примера анкету, которую требуется заполнять при поступлении на
работу.</p>

<p class="MsoNormalCxSpMiddle">При
заполнении графы <span class="Interface">Место рождения</span>
необходимо указать населенный пункт. Хотя общее количество населенных пунктов
достаточно большое, список всех населенных пунктов все-таки ограничен.
Фактически место рождения можно указать, выбрав из подобного списка нужный населенный
пункт. Такой список и представляет собой справочник.</p>

<p class="MsoNormalCxSpMiddle">Таким
образом, можно сказать, что справочник является списком возможных значений того
или иного реквизита документа (в широком смысле слова «документ»).</p>

<p class="MsoNormalCxSpMiddle">Справочники
используются в тех случаях, когда необходимо исключить неоднозначный ввод
информации.</p>

<p class="MsoNormalCxSpMiddle">Например,
для того, чтобы покупатель, продавец, кладовщик, директор понимали, о каком
товаре идет речь, каждый должен называть его одинаково. И в этом случае
необходим справочник. Обычно в торговом предприятии он имеет вид прайс-листа, а
если такой справочник хранится в компьютере, то в него заносят всю возможную
номенклатуру товаров, с которыми работает торговая фирма.</p>

<p class="MsoNormalCxSpMiddle">Система
«1С:Предприятие» позволяет вести практически неограниченное количество необходимых
справочников. Каждый справочник представляет собой список однородных экземпляров
объектов: сотрудников, организаций, товаров и т. д. Каждый такой
экземпляр объекта будем называть элементом справочника.</p>

<p class="MsoNormalCxSpMiddle">Следует
иметь в виду, что в конфигурации создается структура справочника, а собственно
его содержимое – элементы справочника – вводится пользователем при
работе с программой. В процессе конфигурирования описывается структура
информации, которая будет храниться в справочнике, разрабатывается экранное и, если
необходимо, печатное представление справочника, задаются различные особенности
его «поведения».</p>

<p class="MsoNormalCxSpMiddle">Как
правило, справочники имеют стандартные реквизиты код и наименование, при этом
код может иметь тип <span class="Term">Число</span> или <span class="Term">Строка</span>.</p>

<p class="MsoNormalCxSpMiddle">Система
«1С:Предприятие» предоставляет широкие возможности по работе с кодами элементов
справочника: автоматическое присвоение кодов, автоматический контроль уникальности
кода и другие.</p>

<p class="MsoNormalCxSpMiddle">Справочник
в системе «1С:Предприятие» может быть иерархическим. Существуют два вида
иерархии: <span class="Bold">иерархия групп и элементов</span> и <span class="Bold">иерархия элементов</span>. В первом случае все данные справочника
будут разделяться на два вида: «просто» элементы справочника и группы справочника.
<span class="Bold">Группы</span> – это логическое объединение элементов
справочника. Примером иерархического справочника может служить справочник товаров,
где группами являются виды товаров («Сантехника», «Бытовая химия» и т. д.),
а элементами – конкретные товары («Смеситель», «Зеркало», «Стиральный
порошок»).</p>

<p class="MsoNormalCxSpMiddle">Использование
иерархических справочников позволяет организовать ввод информации в справочник
с нужной степенью детализации. Элементы и группы элементов в иерархическом
справочнике можно переносить из одной группы в другую.</p>

<p class="MsoNormalCxSpMiddle">Для
справочников с видом иерархии <span class="Interface">Иерархия элементов</span>
группы как самостоятельный вид отсутствуют. Их роль выполняют сами элементы.
Отличительной особенностью таких справочников является функциональность всех
элементов. Примером справочника данного вида может служить справочник
подразделений. Каждое подразделение описывается одинаковым набором реквизитов и
при этом логически может содержать другое подразделение или входить в него.</p>

<p class="MsoNormalCxSpMiddle">Для
иерархических справочников конфигуратор позволяет установить ограничение числа
уровней справочников, или допускается неограниченное число уровней вложенности.</p>

<p class="MsoNormalCxSpMiddle">Помимо
кода и наименования для справочника можно создать набор реквизитов, позволяющих
хранить дополнительную информацию об элементе справочника.</p>

<p class="MsoNormalCxSpMiddle">Например,
справочник <span class="Term">Контрагенты</span> может
содержать такие сведения, как полное наименование контрагента, его ИНН, фамилии
директора и главного бухгалтера и другую информацию.</p>

<p class="MsoNormalCxSpMiddle">Если
объект предметной области, которой соответствует справочник, имеет не только
такие «простые» свойства, например, полное наименование или ИНН, но и составные
(списочные) свойства, справочнику может быть создан набор табличных частей.</p>

<p class="MsoNormalCxSpMiddle">Например,
в справочнике <span class="Term">Контрагенты</span> может
быть создана табличная часть для списка телефонных номеров контрагента.</p>

<p class="MsoNormalCxSpMiddle">Имена
реквизитов справочника не должны совпадать ни с одним именем реквизита из
какой-либо табличной части.</p>

<p class="MsoNormalCxSpMiddle">Для
работы с информацией, хранящейся в справочнике, можно создать экранные формы.
Могут быть созданы отдельные формы для просмотра списка элементов справочника,
для редактирования элемента справочника, формы для выбора из справочника
нужного элемента.</p>

<p class="MsoNormalCxSpMiddle">Конфигуратор
позволяет создать несколько форм одного типа, например, формы для выбора из
справочника нужного элемента, и использовать разные формы в разных случаях.</p>

<p class="MsoNormalCxSpLast">Рекомендуется
создавать разные формы для отображения списка элементов и для выбора элементов
справочника.</p>

<a id="TI000000305" class="bookmark" name="issogl2_5.8.2_свойства_справочника"><h3>5.8.2. Свойства справочника</h3></a>

<p class="MsoNormalCxSpFirst">Для
работы со справочниками предназначена ветвь <span class="Interface">Справочники</span>
дерева конфигурации.</p>

<p class="MsoNormalCxSpMiddle">При
создании нового справочника открывается окно редактирования объекта (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 2. работа с конфигурацией.htm?_=1496848987#_ref414277435">здесь</a>).</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Иерархический справочник</span> – если свойство установлено,
то справочник имеет иерархическую структуру и становится доступным свойство <span class="Interface">Вид иерархии</span> и <span class="Interface">Ограничение количества
уровней иерархии</span>.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Вид иерархии</span> – определяется, какой вид иерархии используется
в данном справочнике. При выборе вида <span class="Interface">Иерархия групп и элементов</span>
для справочника определяются два вида элементов: группы и элементы. Группы
предназначены только для объединения других групп и элементов справочника.
Обычно для описания группы достаточно кода, наименования и родителя (ссылка на
верхний уровень). Элемент справочника помимо этих реквизитов может содержать
другие реквизиты, указанные на закладке <span class="Interface">Данные</span>. Для
справочников с этим видом иерархии можно создать формы группы и формы элемента.
При выборе вида <span class="Interface">Иерархия элементов</span>
все элементы справочника равнозначны. Примером справочников такого вида могут
служить справочники подразделений и статьи затрат.</p>

<p class="MsoNormalCxSpMiddle">Если
у справочника установлен вид иерархии <span class="Interface">Иерархия групп и
элементов</span>, то при создании формы элемента или группы на форме можно
размещать элементы формы, связанные с реквизитами, которые принадлежат и элементу
и группе (без ограничений). Форма позволит редактировать данные «без оглядки»
на то, какой вариант использования установлен для реквизита. При записи объекта
будут записаны только данные «своего» варианта использования: для формы
элемента будут записаны реквизиты элементы и «общие» реквизиты, для группы –
реквизиты группы и общие реквизиты. При этом никаких сообщений об ошибке
формироваться не будет. При повторном открытии формы, элементы формы, связанные
с «чужими» реквизитами, будут заполнены значениями по умолчанию.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Размещать группы сверху</span> – свойство становится доступным,
если выбрано значение <span class="Interface">Иерархия групп и
элементов</span>. Если свойство <span class="Interface">Размещать группы
сверху</span> установлено, то при отображении справочника в виде иерархического
списка группы окажутся в верхних строчках списка, а элементы справочника будут
располагаться ниже. Если это свойство не установлено, расположение групп и
элементов будет подчиняться установленным правилам сортировки (по коду, наименованию
и пр.). Например, при создании новой группы с кодом большим, чем у всех
имеющихся групп и элементов (при сортировке по коду), в первом варианте эта
подгруппа окажется нижней среди групп, но выше остальных элементов справочника;
во втором варианте она займет самую нижнюю строчку.</p>

<p class="MsoNormalCxSpMiddle">Следует
отметить, что установка или снятие свойства <span class="Interface">Размещать группы
сверху</span> не влияет на показ справочника в виде неиерархического списка.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Количество уровней иерархии</span> – свойство становится
доступным, если установлено свойство <span class="Interface">Ограничение количества
уровней иерархии</span>. Справочники в системе «1С:Предприятие» могут иметь
более одного уровня вложенности. Если свойство <span class="Interface">Ограничение количества
уровней иерархии</span> не установлено, то максимальное количество уровней
вложенности справочника неограниченно.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Владельцы</span> – это свойство требует подробного объяснения.</p>

<p class="MsoNormalCxSpMiddle">Любой
справочник может использоваться как сам по себе, так и быть подчиненным
какому-либо другому справочнику или справочникам. Например, справочник договоров
может использоваться отдельно, а может быть связан со справочником организаций.</p>

<p class="MsoNormalCxSpMiddle">Чтобы
подчинить справочник другому, уже существующему в системе, в поле <span class="Interface">Список владельцев</span>
справочника следует нажать кнопку редактирования и в открывшемся окне выбора объекта
отметить те справочники, которые являются владельцами данного справочника.
Каждый такой справочник в системе «1С:Предприятие» называется владельцем, а сам
справочник – подчиненным.</p>

<p class="MsoNormalCxSpMiddle">В
отличие от многоуровневого справочника, в котором все элементы имеют одинаковую
структуру, использование механизма подчиненных справочников позволяет связать
элементы разной структуры. В этом случае каждый элемент подчиненного справочника
будет логически связан с одним из элементов справочника-владельца.</p>

<p class="MsoNormalCxSpMiddle">Для
справочников, которые имеют нескольких владельцев, у разных элементов могут
быть владельцы разного типа, но у одного элемента может быть только один владелец.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Использование подчинения</span> – позволяет управлять ограничением,
накладываемым на владельцев. Могут использоваться только элементы, только
группы или и группы, и элементы. Если у справочника несколько владельцев, то
ограничение применяется ко всем владельцам.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Длина кода</span> – свойство устанавливает максимальную
длину кода элемента справочника.</p>

<p class="MsoNormalCxSpMiddle">Конфигуратор
позволяет установить длину кода равной 0. Это может понадобиться в тех
случаях, когда код элемента справочника не используется.</p>

<p class="MsoNormalCxSpLast">При
назначении этого свойства желательно реально определить возможную длину кода.
Однако следует иметь в виду, что в процессе эксплуатации конфигурации, если
потребуется, длину кода можно увеличить.</p>

<p class="Note"><span class="Note">Примечание.</span> Максимальная длина кода равна 50.</p>

<p class="MsoNormalCxSpFirst"><span class="Interface">Длина наименования</span> – в свойстве устанавливается максимально
возможная длина наименования элемента справочника.</p>

<p class="MsoNormalCxSpLast">Конфигуратор
позволяет установить длину наименования равной 0. Это означает, что у
справочника не будет наименования.</p>

<p class="Note"><span class="Note">Примечание</span>. Максимальная длина наименования равна 150.</p>

<p class="MsoNormalCxSpFirst"><span class="Interface">Серии кодов</span> – свойство позволяет установить
диапазон проверки кода на уникальность и автоматическое присвоение кодов.</p>

<p class="MsoNormalCxSpMiddle">Если
выбрана установка <span class="Interface">Во всем справочнике</span>,
то при автоматическом присвоении кода или при вводе кода пользователем вручную
его уникальность будет проверяться среди всех элементов справочника.</p>

<p class="MsoNormalCxSpMiddle">Установка
<span class="Interface">В пределах подчинения</span>
справедлива только для иерархических и подчиненных справочников. В этом случае
уникальность кода будет проверяться системой только в пределах той группы и
того элемента справочника-владельца, в которую вводится новый элемент
справочника или редактируется уже существующий элемент.</p>

<p class="MsoNormalCxSpMiddle">При
установке серии кодов <span class="Interface">В пределах подчинения</span>
нормальной является ситуация, когда находящиеся в разных группах элементы
справочника имеют одинаковые коды. Это следует учитывать, если требуется
переносить элементы многоуровневого справочника из одной группы в другую. При
совпадении кода переносимого элемента с кодом уже существующего элемента в
группе будет выдано предупреждение, и элемент не будет перенесен.</p>

<p class="MsoNormalCxSpMiddle">При
установке серии кодов <span class="Interface">В пределах подчинения</span>
владельцу в иерархических подчиненных справочниках обеспечивается автоматическая
нумерация и контроль уникальности кодов среди элементов с одинаковым владельцем,
но различными родителями.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Тип кода</span> – свойство позволяет выбрать тип значения
для кода элемента справочника: <span class="Term">Число</span> или <span class="Term">Строка</span>. Выбор строкового
типа кода бывает полезным, когда используется сложная система кодирования, и
код может включать помимо цифр также буквы и символы-разделители. Наиболее характерный
пример – использование в качестве кодов артикулов для швейных изделий.</p>

<p class="MsoNormalCxSpMiddle">Следует
обратить внимание, что выбор строкового типа кода не исключает возможности
автоматического присвоения таких кодов.</p>

<p class="MsoNormalCxSpMiddle">Для
самого первого элемента система формирует код вида <span class="Interface">001</span> (количество
нулей зависит от установленной длины кода), то есть код представляет собой
строку символов, но все символы в этой строке являются цифрами. При вводе
других элементов в справочник система будет продолжать присваивать коды
аналогичным образом – <span class="Interface">002</span>, <span class="Interface">003</span> и т. д.</p>

<p class="MsoNormalCxSpMiddle">Если
требования к ведению справочника предполагают непременное использование
смешанных буквенно-цифровых кодов, то для целей автоматической нумерации можно
использовать коды вида <span class="Interface">AA001</span>. Здесь
первая часть кода – символы <span class="Interface">АА</span> – является
текстовым префиксом, а вторая часть – символы <span class="Interface">001</span> – будет
интерпретироваться системой как число и использоваться при автоматическом
присвоении очередного кода.</p>

<p class="MsoNormalCxSpMiddle">Например,
если самым первым кодом в справочник введен <span class="Interface">АА001</span>, то
следующим автоматически присвоенным кодом будет <span class="Interface">АА002</span>,
затем – <span class="Interface">АА003</span>, и так
далее по возрастанию.</p>

<p class="MsoNormalCxSpMiddle">Текстовый
префикс можно задать вручную (при вводе в справочник нового элемента ввести
такой «составной» код) или использовать возможности установки префикса из встроенного
языка системы «1С:Предприятие» (метод <span class="Term">УстановитьНовыйКод()</span>).</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Допустимая длина кода</span> – доступно в том случае, если
свойство <span class="Interface">Тип кода</span> установлено
в значение <span class="Term">Строка</span>. С помощью свойства можно регулировать,
строка какой длины будет хранить код. Если значение свойства равно <span class="Interface">Фиксированная</span>,
то длина строки, содержащая код элемента справочника, всегда будет равна
значению, указанному в свойстве <span class="Interface">Длина кода</span>. В
противном случае длина строки будет равна реальному количеству символов,
формирующих код элемента.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Реквизиты</span>. Любой новый справочник можно представить в
виде таблицы, которая имеет две колонки: код элемента справочника и его
наименование. Система «1С:Предприятие» помимо кода и наименования позволяет
хранить дополнительную информацию об элементе справочника. При редактировании
справочника можно описать набор дополнительных реквизитов, предназначенных для
хранения таких дополнительных сведений.</p>

<p class="MsoNormalCxSpMiddle">При
показе справочника на экране эти реквизиты могут представляться в виде колонок
табличного поля формы списка справочника. Кроме этого, сведения, хранящиеся в
реквизитах, можно использовать при формировании в различных расчетах, при формировании
отчетов и так далее.</p>

<p class="MsoNormalCxSpMiddle">Используя
механизм реквизитов справочника, легко организовать, например, картотеку
сотрудников. Для этого достаточно для справочника <span class="Term">Сотрудники</span> создать реквизиты для хранения
сведений об образовании, паспортных данных и прочей кадровой информации. С
помощью встроенных средств поиска в справочнике при использовании конфигурации
нужная информация о сотруднике может быть легко найдена.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Табличные части</span>. Для описания некоторых данных, относящихся
к справочнику и не используемых самостоятельно, используют табличные части.
Примером табличной части может служить состав семьи сотрудника (данные по каждому
члену семьи описываются в реквизитах табличной части, а число членов семьи
может быть произвольным), послужной список сотрудника и т. д.</p>

<p class="MsoNormalCxSpMiddle">Если
бы в приведенном примере сведения по составу семей сотрудников могли
использоваться самостоятельно, то их можно было бы выделить в отдельный
справочник, подчиненный справочнику <span class="Term">Сотрудники</span>.</p>

<p class="MsoNormalCxSpMiddle">Основное
отличие табличной части от подчиненного справочника в том, что на элементы
справочника можно ссылаться, а на строки табличной части – нет. При обращении
к элементу справочника он весь, вместе со всеми табличными частями, считывается
из базы данных в память. Если табличная часть содержит достаточно большое
количество строк, это может ухудшить производительность системы. Поэтому табличную
часть стоит использовать, если не нужно хранить ссылки на элементы и количество
элементов ограничено. Каждый справочник может иметь неограниченное число табличных
частей.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Автонумерация</span>. Установка свойства приводит к тому, что
вновь введенному элементу в справочнике код будет присваиваться при записи.
Автоматически присвоенный код можно исправить.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Контроль уникальности</span>. Если код используется для однозначной
идентификации конкретного элемента в справочнике, он должен быть уникальным (не
должен повторяться). Если свойство <span class="Interface">Контроль уникальности</span>
установлено, проверка кода на уникальность будет проводиться автоматически при
вводе в справочник нового элемента.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Основное представление</span> – в свойстве задается представление
элементов справочника. Например, значения типа <span class="Term">СправочникСсылка</span>,
введенные в реквизит документа, справочника или константу, будут представляться
в виде кода или наименования элемента справочника в зависимости от данного
свойства. Для форм списков данная колонка становится колонкой по умолчанию. При
открытии списка эта колонка становится активной.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Ввод на основании</span>. На закладке <span class="Interface">Ввод на основании</span>
указывается, какие объекты конфигурации могут являться основанием для объектов
данного типа и для каких объектов объекты данного типа могут являться
основанием. По кнопке <span class="Interface">Конструктор ввода на
основании</span> запускается конструктор создания процедуры ввода на основании.
Подробнее о работе с конструктором см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 27. инструменты разработки.htm?_=1496848987#_ref141014641">здесь</a>.</p>

<p class="MsoNormalCxSpLast">Примером
ввода на основании может служить ввод документа <span class="Interface">Передача на реализацию</span>
на основании элемента справочника <span class="Interface">Товары</span>.</p>

<a id="TI000000306" class="bookmark" name="issogl2_5.8.3_свойства_реквизитов_справочника"><h3>5.8.3. Свойства реквизитов справочника</h3></a>

<p class="MsoNormal">Помимо
основных свойств реквизиты справочника имеют следующие свойства:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">Тип</span> – указывается
тип данных реквизита.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Interface">Использование</span> –
для иерархических справочников определяет использование реквизита для групп и
элементов.</p>

<a id="TI000000307" class="bookmark" name="issogl2_5.8.4_предопределенные_элементы_справочника"><h3>5.8.4. Предопределенные элементы справочника</h3></a>

<p class="MsoNormal">Разработчик
конфигурации может создать для справочников набор предопределенных элементов и
групп элементов (для иерархических справочников). Подробное описание
предопределенных элементов см. <a href="#_ref416868913">здесь</a>.<a name="_ref7420402"></a><a name="_ref7420383"></a><a name="_ref39030330"></a><a name="_ref38713120"></a></p>

<p class="Note">ВНИМАНИЕ! Для справочника, имеющего владельца, нельзя
создать предопределенные элементы. И наоборот, справочнику, имеющему
предопределенные элементы, нельзя назначить владельца.</p>

<a id="TI000000308" class="bookmark" name="issogl1_5.9_документы"><h2>5.9. Документы</h2></a>

<a id="TI000001576" class="bookmark" name="issogl2_5.9.1_общая_информация"><h3>5.9.1. Общая информация</h3></a>

<p class="MsoNormalCxSpFirst">Документ –
одно из основных понятий системы «1С:Предприятие». При помощи документов
организуется ввод в систему информации о совершаемых хозяйственных операциях.</p>

<p class="MsoNormalCxSpMiddle">В
большинстве своем документы, которые создаются в процессе настройки
конфигурации задачи, являются электронными аналогами стандартных бумажных документов,
однако использование этого типа данных может выходить далеко за рамки простой
фиксации информации о хозяйственных операциях.</p>

<p class="MsoNormalCxSpMiddle">Каждый
документ содержит информацию о конкретной хозяйственной операции и
характеризуется своим номером, датой и временем. Дата и время – наиболее
важные характеристики документов, так как позволяют устанавливать строгую
временн<span class="Bold">у</span>ю последовательность совершения операций.</p>

<p class="MsoNormalCxSpMiddle">В
конфигурации описывается только структура документа, конкретные экземпляры
документов вводятся при работе с программой пользователем. Например, созданный
в конфигурации документ <span class="Interface">Накладная</span> при
работе с системой «1С:Предприятие» позволит формировать накладные, которые
будут иметь разное содержание, но одинаковый набор реквизитов, одинаковую
логику поведения и так далее.</p>

<p class="MsoNormalCxSpMiddle">Далее
для простоты вместо термина «структура документа» будет использоваться термин «документ»,
подразумевая под этим средства для ввода и визуализации документа.</p>

<p class="MsoNormalCxSpMiddle">Конфигуратор
позволяет описать структуру документа, организовать формы для ввода информации
в документ и описать алгоритм построения печатных форм документа.</p>

<p class="MsoNormalCxSpMiddle">Помимо
даты, времени и номера документа можно создать набор реквизитов, позволяющих
хранить дополнительную информацию.</p>

<p class="MsoNormalCxSpMiddle">Если
объект предметной области, которой соответствует документ, имеет не только
такие «простые» свойства, как, например, дату, номер и итоговую сумму, но и составные
(списочные) свойства, документу может быть создан набор табличных частей. Например,
в документе <span class="Interface">Расходная накладная</span>
может быть создана табличная часть для списка продаваемой номенклатуры.</p>

<p class="MsoNormalCxSpMiddle">Для
работы с документами в конфигурации может быть создано необходимое количество
списков документов одного вида и журналов документов разного вида. Форма списка
отличается от формы журнала в первую очередь тем, что в списке отсутствует
колонка <span class="Interface">Вид документа</span> (т. к.
список содержит документы одного вида), а журнал обычно содержит эту колонку.</p>

<p class="MsoNormalCxSpMiddle">При
создании документа можно указать перечень журналов, в которых будет
осуществляться работа с документами этого вида. Для документов разных видов можно
указывать один журнал, что позволяет произвольным образом группировать
документы в журналах. Назначенные документу журналы можно менять.</p>

<p class="MsoNormalCxSpLast">Документы
могут изменять состояние регистров учета (проводиться). Если документ проведен,
то данные, которые указал пользователь при вводе документа, отразились в
учетных регистрах системы – изменились остатки товаров на складах,
изменилась задолженность перед контрагентом и т. д. Документы могут
проводиться в реальном времени (оперативное проведение) и прошлой датой
(неоперативной проведение).<a name="_ref389036627"></a></p>

<a id="TI000000309" class="bookmark" name="issogl2_5.9.2_свойства_документа"><h3>5.9.2. Свойства документа</h3></a>

<p class="MsoNormalCxSpFirst">Для
работы с документами предназначена ветвь <span class="Interface">Документы</span>
дерева конфигурации. На этой же ветви располагаются служебные объекты
конфигурации – нумераторы и последовательности.</p>

<p class="MsoNormalCxSpMiddle">В
этом разделе будут описаны специфические свойства документа в дополнение к
общим свойствам объектов конфигурации, описание которых см. <a href="#_ref141003322">здесь</a>.</p>

<p class="MsoNormalCxSpMiddle">Свойства
документа редактируются в палитре свойств или окне редактирования (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 2. работа с конфигурацией.htm?_=1496848987#_ref414277435">здесь</a>). Данные по документу в окне редактора распределены
по закладкам.</p>

<p class="MsoNormalCxSpMiddle">На
закладке <span class="Interface">Основное</span>
размещены основные данные по документу.</p>

<p class="MsoNormalCxSpMiddle">На
закладке <span class="Interface">Данные</span> вводятся
реквизиты и табличные части.</p>

<p class="MsoNormalCxSpMiddle">В
палитре свойств каждому реквизиту помимо основных свойств указывают тип. Если требуется
обеспечить быстрый поиск или отбор нужной информации по реквизитам документа,
для реквизитов нужно установить свойство <span class="Interface">Индексировать</span>
(подробнее см. <a href="#_ref425413740">здесь</a>).</p>

<p class="MsoNormalCxSpMiddle">На
закладке <span class="Interface">Нумерация</span>
объединены данные, которые используются для назначения правил нумерации документов.</p>

<p class="MsoNormalCxSpMiddle">У
любого документа существуют обязательные реквизиты, которые создаются
автоматически и которые удалить нельзя, – это дата, время и номер
документа. В отличие от даты и времени, для номера документа можно задать
несколько параметров, которые будут управлять поведением этого реквизита при
работе с документами создаваемого вида. Совокупность этих параметров будет определять
правила нумерации документов при работе системы «1С:Предприятие».</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Автонумерация</span> – установка свойства приводит к тому,
что вновь введенному документу номер будет присваиваться автоматически.
Автоматически присвоенный номер можно исправить.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Нумератор</span> – документу может быть назначен
нумератор. Для назначения нумератора документу, его следует выбрать в свойстве <span class="Interface">Нумератор</span>. В
этом случае прочие элементы, служащие для описания правила нумерации, за
исключением свойства <span class="Interface">Автонумерация</span>,
становятся недоступными, то есть правила нумерации документов данного вида
будут полностью определяться назначенным нумератором. О создании и свойствах
нумераторов см. <a href="#_ref405465401">здесь</a>.</p>

<p class="MsoNormalCxSpMiddle">Использование
нумераторов позволяет организовать сквозную нумерацию документов разных видов.
Для этого всем документам, для которых требуется иметь сквозную нумерацию,
должен быть назначен один нумератор. Контроль уникальности и присвоение
очередного номера будут выполняться с учетом всех документов, для которых
назначен этот нумератор.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Длина номера</span> – устанавливает максимальную длину номера
документа.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Тип номера</span> – свойство аналогично свойству <span class="Interface">Тип кода</span> справочника
(см. <a href="#_ref9253677">здесь</a>).</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Допустимая длина номера</span> – доступно в том случае,
если свойство <span class="Interface">Тип номера</span> установлено
в значение <span class="Term">Строка</span>. С помощью свойства можно регулировать,
строка какой длины будет хранить номер. Если значение свойства равно <span class="Interface">Фиксированная</span>,
то длина строки, содержащая номер документа, всегда будет равна значению, указанному
в свойстве <span class="Interface">Длина номера</span>. В
противном случае длина строки будет равна реальному количеству символов,
формирующих номер документа.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Контроль уникальности</span> – если это свойство установлено,
то при вводе нового документа его номер проверяется на уникальность в пределах,
установленных в свойстве <span class="Term">Периодичность</span>.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Периодичность</span> – свойство устанавливает пределы контроля
уникальности номеров документов и период повторяемости номеров. Если свойство <span class="Interface">Контроль уникальности</span>
номеров документов установлено, то в свойстве <span class="Interface">Периодичность</span>
указывается, в каких пределах будет осуществляться этот контроль.</p>

<p class="MsoNormalCxSpMiddle">При
установленном свойстве <span class="Interface">Автонумерация</span>
система «1С:Предприятие» будет присваивать очередной порядковый номер каждому
новому документу. После завершения периода, установленного в свойстве <span class="Interface">Периодичность</span>,
нумерация документов начнется с 1.</p>

<p class="MsoNormalCxSpMiddle">На
закладке <span class="Interface">Движения</span>
производится настройка поведения при проведении и отмене проведения документа.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Проведение</span> – свойство устанавливает, разрешено ли
проведение документа при записи. Если выбрано <span class="Interface">Разрешить</span>, то
документ осуществляет движения регистров (изменяет их состояние). Другим
следствием такого выбора будет автоматический вызов обработчика события <span class="Term">ОбработкаПроведения</span>
проведения документа в режиме 1С:Предприятие, возникающего при нажатии кнопки
формы документа, для которой при конфигурировании выбрано предопределенное
действие <span class="Interface">Записать и закрыть</span>
(обычно кнопка <span class="Interface">ОК</span>). Для
формирования обработчика события <span class="Term">ОбработкаПроведения</span> можно воспользоваться
конструктором движения регистров (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 27. инструменты разработки.htm?_=1496848987#_ref141014676">здесь</a>), кнопка вызова которого расположена на закладке <span class="Interface">Движения</span> окна
редактирования объекта <span class="Interface">Документ</span>.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Оперативное проведение</span> – свойство устанавливает, разрешено
ли оперативное проведение документа. Для документов с разрешенным оперативным
проведением при выборе не текущей даты проведение осуществляется в
неоперативном режиме, т. к. учитывается уже свершившийся факт,
который не требует контроля, осуществляемого в оперативном режиме (например,
проверка остатка, указанного в расходной накладной товара).</p>

<p class="MsoNormalCxSpMiddle">Если
для документа разрешено <span class="Interface">Оперативное проведение</span>,
то при создании нового документа время документа «нулевое». При проведении
система получает оперативную отметку времени, которая может совпадать с текущей
датой и текущим временем, а может быть и больше, чем текущее время, и
присваивает ее документу, после чего осуществляется оперативное проведение. Более
подробно об оперативной отметке времени см. <a href="#_ref227240704">здесь</a>.</p>

<p class="MsoNormalCxSpMiddle">В
случае редактирования документа с установленным свойством <span class="Interface">Оперативное проведение</span>
время уже отличается от текущего, поэтому при проведении (указана текущая дата)
документа на экран выводится запрос о виде проведения. Если на вопрос о виде
проведения выбрать <span class="Interface">Оперативное проведение</span>,
то для документа устанавливается текущее время. Если при редактировании изменить
время (например, указать будущее время текущего дня), то система также
установит текущее время. Если на вопрос о виде проведения выбрать <span class="Interface">Неоперативное
проведение</span>, то, когда формат даты не предусматривает ввода времени, в
документе указывается время начала дня.</p>

<p class="MsoNormalCxSpLast"><span class="Interface">Удаление движений</span> – свойство доступно, если в свойстве
<span class="Interface">Проведение</span>
выбрано <span class="Interface">Разрешить</span>. Оно
задает режим удаления всех записей при перепроведении или отмене проведения
документа, которые документ записал в процессе проведения:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Режим <span class="Interface">Удалять автоматически</span>
означает, что удаление производится системой при выполнении повторного
проведения уже проведенного документа (перед записью новых движений) и при
отмене проведения документа.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Режим <span class="Interface">Не удалять
автоматически</span> означает, что удаление движений выполняется программно в
специальных случаях. Этот режим используется, если нужно управлять удалением и
при проведении, и при отмене проведения.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Режим <span class="Interface">Удалять автоматически
при отмене проведения</span> означает, что система будет автоматически удалять
движения только при отмене проведения. При перепроведении движения не будут
удаляться автоматически. Этот режим устанавливается по умолчанию.</p>

<p class="MsoNormalCxSpFirst">Если
свойство <span class="Interface">Удаление движений</span>
у документа установлено в значение <span class="Interface">Не удалять
автоматически</span> или <span class="Interface">Не удалять автоматически
при отмене проведения</span>, то для избежание дублирования информации, следует
выполнять очистку наборов записей коллекции <span class="Term">Движения</span> вначале операции проведение.</p>

<p class="MsoNormalCxSpLast"><span class="Interface">Запись движений при проведении</span> – свойство
определяет поведение системы при создании движений во время проведения документа:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Режим <span class="Interface">Записывать выбранные</span>
(режим по умолчанию) означает, что набор записей коллекции движения будет
записан только в том случае, если свойство набора <span class="Term">Записывать</span> установлено в значение <span class="Term">Истина</span> (вне зависимости от того, были
модифицированы записи набора или нет).</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Режим <span class="Interface">Записывать
модифицированные</span> (устанавливается при конвертации из версий «1С:Предприятие 8.1»
и более ранних) означает, что записаны будут те наборы записей, которые были
модифицированы (для них система автоматически установит свойство <span class="Term">Записывать</span> в значение <span class="Term">Истина</span>).</p>

<p class="MsoNormalCxSpFirst">По
окончании записи документа система ставит всем наборам записей, регистрирующим
движения документа, свойство <span class="Term">Записывать</span> в
исходное состояние, даже если запись завершилась неудачно.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Заполнение последовательности</span> – выбирается режим автоматического
заполнения последовательностей. В окне редактирования на закладке <span class="Interface">Последовательности</span>
определяется вхождение документа в последовательности.</p>

<p class="MsoNormalCxSpMiddle">В
окне редактирования документа на закладке <span class="Interface">Журналы</span> можно
отметить те журналы документов, в которых при работе пользователя с системой «1С:Предприятие»
будут отражаться документы данного вида. Необходимые формы журналов документов
могут быть созданы потом.</p>

<p class="MsoNormalCxSpLast">На
закладке <span class="Interface">Ввод на основании</span>
размещено два списка объектов конфигурации. В верхнем списке необходимо указать
объекты, на основании которых может вводиться документ, а в нижнем – для
которых данный документ является основанием при вводе нового объекта.</p>

<p class="Note"><span class="Note">ВНИМАНИЕ!</span> Документ может вводиться как на основании
другого документа, так и на основании объектов другого вида (элементов
справочника, плана видов характеристик, плана счетов и плана видов расчета). И
наоборот, документ может являться основанием для ввода не только другого документа,
но и объектов другого вида.</p>

<p class="MsoNormalCxSpFirst">Для
создания процедуры, осуществляющей подготовку данных создаваемого объекта на
основании образца, следует воспользоваться специальным конструктором, описание
которого см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 27. инструменты разработки.htm?_=1496848987#_ref141014711">здесь</a>.</p>

<p class="MsoNormalCxSpLast">На
закладке <span class="Interface">Права</span> имеется
возможность установки привилегированного режима при проведении (свойство <span class="Interface">Привилегированный
режим при проведении</span>) и/или при отмене проведения документа (свойство <span class="Interface">Привилегированный
режим при отмене проведения</span>):</p>

<p class="MsoListBullet">&#9679; 
Если свойство установлено, то соответствующее действие
(проведение или отмена проведения) система будет выполнять всегда в
привилегированном режиме (при вызове проведения или отмены проведения на
стороне сервера и в файловом варианте). Однако привилегированный режим не будет
установлен, если проведение (или отмена проведения) документа выполняется в
клиент-серверном варианте на стороне толстого клиента. В привилегированном
режиме выполняется:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
Автоматическое удаление движений.</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
Автоматическая запись движений.</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
Соответствующий обработчик (<span class="Term">ОбработкаПроведения</span> или <span class="Term">ОбработкаУдаленияПроведения</span>). Однако запись
объекта выполняется в обычном (непривилегированном) режиме.</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Привилегированный режим включается системой после
выполнения записи объекта перед началом проведения (перед удалением движений,
если они удаляются автоматически). Аналогично и при отмене проведения.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
При создании новых документов свойства имеют значение
<span class="Term">Истина</span>, если в свойствах конфигурации указан основной
режим запуска – управляемое приложение, и <span class="Term">Ложь</span>, если основным режимом запуска указан обычный.</p>

<a name="_ref26701284"></a><a name="_ref7840149"></a><a name="_ref7840130"></a><a id="TI000000310" class="bookmark" name="issogl2_5.9.3_механизм_проведения_документов"><h3>5.9.3. Механизм проведения документов</h3></a>

<p class="MsoNormal">Информация,
отражающая хозяйственную деятельность предприятия, хранится в регистрах (см. <a href="#_ref223761989">здесь</a>). Документы могут изменять состояние регистров. Этот
процесс называется <span class="Bold">проведением</span>. Данный механизм
является рекомендуемым механизмом изменения состояния регистров. Проведение
может выполняться в <span class="Bold">оперативном</span> или <span class="Bold">неоперативном</span>
режиме (свойство <span class="Interface">Оперативное проведение</span>).</p>

<p class="Note"><span class="Note">Примечание.</span> Как правило, механизм оперативного
проведения используется для решения задач оперативного учета.</p>

<a id="TI000000311" class="bookmark" name="issogl3_5.9.3.1_оперативное_и_неоперативное_проведение"><h4>5.9.3.1. Оперативное и неоперативное проведение</h4></a>

<p class="MsoNormalCxSpFirst">Механизм
оперативного проведения предназначен для того, чтобы разделить случаи, когда
документ проводится в реальном времени, и случаи, когда проведение документа
отражает уже свершившийся факт.</p>

<p class="MsoNormalCxSpMiddle">Проведение
в реальном времени необходимо тогда, когда ввод и проведение документа не
просто фиксируют в системе произошедшее событие, а участвуют в его
формировании, помогая оператору правильно ввести информацию. Разумеется, это
имеет смысл только в тот момент, когда данное событие происходит в реальной
жизни.</p>

<p class="MsoNormalCxSpMiddle">Классическим
примером является ввод и проведение документа, отражающего продажу товаров со
склада. При вводе такого документа в задачу оператора входит не только
правильный ввод списка товаров, которые приобретает покупатель, но и выполнение
различных проверок. Прежде всего, необходимо проверить, что запрашиваемый товар
имеется на указанном складе. При этом очень важно, чтобы проверка учитывала тот
факт, что одновременно с этим оператором работают и другие операторы, которые
могут одновременно выписывать те же самые товары. Соответственно, задачей
системы является не допустить продажу одного и того же товара двум покупателям.
Кроме того, может потребоваться и проверка доступного покупателю размера кредита
или наличие факта оплаты счета, а также другие самые разнообразные проверки.</p>

<p class="MsoNormalCxSpMiddle">В
то же время если документ вводится задним числом, то есть в момент его ввода
известно, что такое событие уже произошло в жизни предприятия, например,
конкретный товар уже отгружен клиенту, необходимость в таких проверках отпадает,
и нужно просто отразить в учете произошедшее событие. В этом случае проведение
документа только фиксирует событие, а не участвует в его формировании.</p>

<p class="MsoNormalCxSpMiddle">Таким
образом, задача механизма оперативного проведения заключается в разделении этих
двух вариантов проведения и с точки зрения пользователя, чтобы он понимал,
какой вид проведения выполняется, и с точки зрения алгоритма проведения документа,
чтобы тот отработал действия, соответствующие текущему варианту проведения.</p>

<p class="MsoNormalCxSpLast">Следовательно,
оперативность или неоперативность проведения документа определяется по его
дате. Если дата проводимого документа совпадает с текущей датой, то система
будет проводить такой документ в оперативном режиме, не задавая вопросов, и в
обработке проведения об этом можно узнать, чтобы выстроить определенный алгоритм
проведения документа.</p>

<a name="_ref469926810"></a><a id="TI000000312" class="bookmark" name="issogl3_5.9.3.2_расширение_формы_и_проведение"><h4>5.9.3.2. Расширение формы и проведение</h4></a>

<p class="MsoNormal">Кроме
свойства документа <span class="Interface">Оперативное проведение</span>
существует возможность задания режима проведения у расширения формы документа.
Свойство <span class="Interface">Использовать режим
проведения</span> может принимать следующие значения:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">Неоперативный</span> –
документ всегда будет проводиться в неоперативном режиме. Если отсутствуют
права на неоперативное проведение, будет выдано исключение.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Оперативный</span> – документ
всегда будет проводиться в оперативном режиме. Если отсутствуют права на
неоперативное проведение, то будет выдано исключение при попытке провести
документ прошлого периода.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Interface">Автоматически</span> –
в этом случае система работает по следующему алгоритму:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
если дата документа меньше текущей даты, выполняется
неоперативное проведение;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
если дата документа равна текущей даты, выполняется
оперативное проведение;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
если дата документа больше текущей даты, выдается
исключение;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
если невозможно провести документ в выбранном
режиме (не хватает прав доступа и т. д.), также будет выдано исключение;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
если на стороне клиента режим проведения
неизвестен, то в параметр <span class="Term">РежимПроведения</span> обработчика события <span class="Term">ПередЗаписью</span> будет передано значение <span class="Term">Неопределено</span>.</p>

<p class="MsoNormalCxSpFirst">Одной
из задач оперативного проведения документов является размещение документов в
хронологическом порядке на шкале времени. Такое размещение необходимо, в
частности, для того, чтобы корректно списывались остатки по регистрам остатков
(см. <a href="#_ref14259165">здесь</a>) оперативного учета. Для размещения документов
используются такие понятия, как <span class="Bold">момент времени</span> и <span class="Bold">оперативная отметка времени</span>. Рассмотрим эти понятия более
подробно.</p>

<p class="MsoNormalCxSpLast">Для
определения положения документа на оси времени используется реквизит документа <span class="Term">Дата</span>, который содержит время с точностью до
секунды. Это позволяет контролировать последовательность записи документов.
Однако при большом объеме создаваемых документов вероятна ситуация, когда
несколько документов будут иметь одинаковое значение даты (т. е. будут
созданы в течение одной секунды). Как в этом случае определить последовательность
созданных документов?</p>

<a id="TI000000313" class="bookmark" name="issogl3_5.9.3.3_момент_времени"><h4>5.9.3.3. Момент времени</h4></a>

<p class="MsoNormalCxSpFirst">Для
обработки подобных ситуаций существует понятие <span class="Bold">момент времени</span>.
Момент времени представляет собой совокупность даты, времени и ссылки на объект
базы данных. Он позволяет однозначно идентифицировать любой объект ссылочного
типа базы данных на оси событий, но имеет смысл в основном только для
документов. Кроме того, момент времени позволяет идентифицировать и необъектные
данные, например, записи регистров, подчиненных регистратору.</p>

<p class="MsoNormalCxSpMiddle">Понятие
момента времени реализовано во встроенном языке при помощи универсального
объекта <span class="Term">МоментВремени</span>.</p>

<p class="MsoNormalCxSpLast">Для
нескольких документов, имеющих одинаковую дату и время, последовательность их
на оси событий определяется системой исходя из ссылок на эти документы. Она
может не совпадать с последовательностью создания документов, и она недоступна
для изменения пользователем, то есть нельзя каким-либо образом повлиять на
последовательность документов внутри одной секунды или «вычислить», что один
документ создан раньше, а другой – позже.</p>

<a name="_ref227240704"></a><a id="TI000000314" class="bookmark" name="issogl3_5.9.3.4_оперативная_отметка_времени"><h4>5.9.3.4. Оперативная отметка времени</h4></a>

<p class="MsoNormal"><span class="Bold">Оперативная отметка времени</span> – это значение типа <span class="Term">Дата</span>. Оперативная отметка времени – это
«основа», которая собственно и позволяет выполнять оперативное проведение
документов. Оперативная отметка времени создается системой каждый раз при
оперативном проведении документа. Ее значение формируется исходя из текущей
даты сеанса и последней созданной оперативной отметки.<a name="_ref224451032"></a></p>

<a id="TI000000315" class="bookmark" name="issogl3_5.9.3.5_поясное_время"><h4>5.9.3.5. Поясное время</h4></a>

<p class="MsoNormalCxSpFirst">При
работе системы в различных часовых поясах необходимо учитывать эту особенность
при получении оперативной отметки времени. Например, когда в единой
информационной базе, физически расположенной в одном городе (часовом поясе),
ведется учет нескольких удаленных предприятий (например, филиалы холдинга),
которые расположены в других городах (и других часовых поясах). В этом случае
необходимо, чтобы для каждого филиала выдавалась своя отметка времени.</p>

<p class="MsoNormalCxSpMiddle">Для
учета часовых поясов существует понятие часового пояса информационной базы и
часового пояса сеанса.</p>

<p class="MsoNormalCxSpMiddle"><span class="Bold">Часовой пояс информационной базы</span> определяет часовой пояс,
который по умолчанию будет установлен для нового сеанса. При создании
информационной базы часовой пояс информационной базы не определен. Однако может
быть установлен с помощью метода глобального контекста <span class="Term">УстановитьЧасовойПоясИнформационнойБазы()</span>.
Информация о часовом поясе информационной базы сохраняется в базе данных и не
меняется при операциях загрузки/выгрузки информационной базы. При создании
начального образа информационной базы (с помощью механизмов распределенной
информационной базы, см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 15. механизмы обмена данными.htm?_=1496848987#_ref224446082">здесь</a>) в создаваемый образ переносится часовой пояс
информационной базы, из которой создается образ.</p>

<p class="MsoNormalCxSpMiddle">Если
часовой пояс информационной базы не задан, то используется часовой пояс
компьютера, на котором установлен сервер «1С:Предприятия» (в клиент-серверном
варианте), или часовой пояс локального компьютера (в файловом варианте).</p>

<p class="MsoNormalCxSpMiddle"><span class="Bold">Часовой пояс сеанса</span> описывает тот часовой пояс, в котором
работает конкретный сеанс. По умолчанию часовой пояс сеанса равен часовому
поясу информационной базы.</p>

<p class="MsoNormalCxSpLast">Часовой
пояс сеанса может быть установлен с помощью метода глобального контекста <span class="Term">УстановитьЧасовойПоясСеанса()</span>. Часовой пояс
сеанса сохраняется до конца сеанса. Используется для определения текущей даты
сеанса и получения <span class="Bold">оперативной отметки времени</span>.</p>

<a id="TI000000316" class="bookmark" name="issogl3_5.9.3.6_получение_оперативной_отметки_времени"><h4>5.9.3.6. Получение оперативной отметки времени</h4></a>

<p class="MsoNormalCxSpFirst">В
ходе оперативного проведения система изменяет время документа таким образом,
чтобы очередной документ, проводимый в оперативном режиме, имел бы момент
времени более поздний, чем у предыдущего оперативно проведенного документа. Для
этого используется понятие <span class="Bold">оперативной отметки времени</span>.
Оперативная отметка получается системой автоматически при оперативном
проведении, но может быть получена во встроенном языке в явном виде с помощью
метода <span class="Term">ПолучитьОперативнуюОтметкуВремени()</span> на
основании текущей даты сеанса.</p>

<p class="MsoNormalCxSpMiddle"><span class="Bold">Текущая дата сеанса</span> равна дате компьютера, приведенной к
часовому поясу сеанса. Под приведением понимается пересчет местного времени компьютера
в поясное время, заданное часовым поясом сеанса. Пересчет выполняется через
универсальное координированное время (UTC).</p>

<p class="MsoNormalCxSpMiddle">Все
пользователи обращаются к единому механизму оперативной отметки времени, а
механизм выдает каждому пользователю очередную отметку. Механизм получения
оперативной отметки времени обеспечивает получение даты, большей, чем предыдущая
отметка, полученная этим или другим пользователем в данном часовом поясе. В
качестве оперативной отметки система, как правило, возвращает текущее время сеанса.
Однако если текущее время больше или равно последней выданной какому-либо
пользователю отметке, то возвращается значение на секунду большее, чем значение
последней выданной отметки. Таким образом, обеспечивается получение при каждом
обращении значения, по возможности соответствующего текущему времени, но в обязательном
порядке большего, чем предыдущее полученное значение.</p>

<p class="MsoNormalCxSpLast">Следует
помнить, что различные сеансы с одинаковым часовым поясом будут использовать
одно и то же время для получения оперативной отметки времени. Таким образом,
будет существовать столько несвязанных оперативных отметок времени, сколько
уникальных часовых поясов будет установлено в качестве часовых поясов сеансов.</p>

<a name="_ref405465401"></a><a id="TI000000317" class="bookmark" name="issogl2_5.9.4_нумераторы"><h3>5.9.4. Нумераторы</h3></a>

<a id="TI000001706" class="bookmark" name="issogl3_5.9.4.1_общая_информация"><h4>5.9.4.1. Общая информация</h4></a>

<p class="MsoNormalCxSpFirst"><span class="Bold">Нумератор</span> представляет собой объект конфигурации, описывающий
правила нумерации документов: тип и длину номера документа, его периодичность,
необходимость контроля уникальности.</p>

<p class="MsoNormalCxSpLast">Основное
назначение нумератора – обеспечить возможность сквозной нумерации
документов разного вида. Для этого таким документам назначается одинаковый нумератор.</p>

<a id="TI000000318" class="bookmark" name="issogl3_5.9.4.2_управление_списком_нумераторов"><h4>5.9.4.2. Управление списком нумераторов</h4></a>

<p class="MsoNormal">Для
работы с объектами конфигурации типа <span class="Interface">Нумератор</span>
предназначена ветвь дерева конфигурации, которая расположена «внутри» ветви <span class="Interface">Документы</span> и
начинается у ключевого слова <span class="Interface">Нумераторы</span>.</p>

<a name="_ref388687829"></a><a id="TI000000319" class="bookmark" name="issogl3_5.9.4.3_свойства_нумератора"><h4>5.9.4.3. Свойства нумератора</h4></a>

<p class="Regularbeforepicture">В
этом разделе будут описаны специфические свойства нумераторов в дополнение к
общим свойствам объектов конфигурации, описание которых см. <a href="#_ref141014745">здесь</a>.</p>

<p class="Picture"><IMG src="_img/img00151.gif?_=1496848987" WIDTH="341" ALT HEIGHT="303"></p>

<p class="MsoCaption">Рис.
152. Свойства нумератора</p>

<p class="MsoNormalCxSpFirst"><span class="Interface">Тип номера</span> – выбирается тип значения для номера документа –
числовой или текстовый. Выбор текстового типа номера бывает полезным, когда
используется сложная система нумерации документов, и номер документа может включать,
помимо цифр, также буквы и символы-разделители.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Длина номера</span> – устанавливает максимальную длину номера
документа.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Периодичность</span> – свойство устанавливает две важные характеристики
нумератора: пределы контроля уникальности номеров документов и период
повторяемости номеров.</p>

<p class="MsoNormalCxSpMiddle">Если
свойство <span class="Interface">Контроль уникальности</span>
номеров документов установлено, свойство <span class="Interface">Периодичность</span>
устанавливает, в каких пределах осуществлять этот контроль.</p>

<p class="MsoNormalCxSpMiddle">Например,
если установлена периодичность <span class="Interface">В пределах дня</span>,
то уникальность номеров документов будет контролироваться в пределах суток: на
следующие сутки номера документов могут повторяться, но в пределах суток они
будут уникальны.</p>

<p class="MsoNormalCxSpMiddle">При
установленном свойстве <span class="Interface">Автонумерация</span> (см. <a href="#_ref389036627">здесь</a>) система «1С:Предприятие» будет присваивать очередной
порядковый номер каждому новому документу. После завершения периода,
установленного в свойстве <span class="Interface">Периодичность</span>,
нумерация документов начнется с 1.</p>

<p class="MsoNormalCxSpLast"><span class="Interface">Контроль уникальности</span> – если это свойство установлено,
то при вводе нового документа его номер проверяется на уникальность в пределах,
установленных в свойстве <span class="Interface">Периодичность</span>.</p>

<a id="TI000000320" class="bookmark" name="issogl2_5.9.5_последовательности_документов"><h3>5.9.5. Последовательности документов</h3></a>

<p class="MsoNormalCxSpFirst">Последовательности
документов являются вспомогательными объектами конфигурации. Они предназначены
для обеспечения проведения определенных документов в строгой хронологической
последовательности.</p>

<p class="MsoNormalCxSpMiddle">Все
документы в системе «1С:Предприятие» образуют единую хронологическую
последовательность. Для этого каждый документ имеет дату и время. Даже если два
документа имеют одинаковую дату и одинаковое время, они все равно располагаются
в определенной последовательности, определяемой моментом их ввода в систему. Дата
и время документа могут быть изменены. Таким образом, независимо от порядка
ввода документов они могут быть расположены в последовательности, отражающей реальную
последовательность происходивших в хозяйственной жизни предприятия событий,
которые данные документы отражают.</p>

<p class="MsoNormalCxSpMiddle">В
системе «1С:Предприятие» в процессе проведения документ выполняет некоторые
действия, которые отражаются данным документом в различных механизмах учета,
поддерживаемых «1С:Предприятием».</p>

<p class="MsoNormalCxSpMiddle">Алгоритм
проведения документа, как правило, отражает в учете данные, записанные в самом
документе (в его реквизитах и табличных частях). Однако в некоторых случаях алгоритм
проведения документа анализирует также и текущие итоги, используя их при
проведении. Например, если документ списывает товары или материалы по средней
себестоимости, то для определения суммы списания алгоритм проведения будет
анализировать остатки товаров (материалов) на момент документа. Если списание выполняется
по методам LIFO или FIFO, то алгоритм проведения будет анализировать
существующие остатки товаров (материалов) в разрезе партий на момент позиции
документа, определяемой датой и временем проведения документа.</p>

<p class="MsoNormalCxSpMiddle">Очевидно,
что документы, основывающиеся при проведении на данные итогов, должны
проводиться строго последовательно. Однако на практике из-за ошибок при вводе
информации и несвоевременного поступления документов часто приходится вводить
или исправлять документы задним числом. Разумеется, в этом случае движения
регистров, сформированные всеми последующими документами (расположенными после
того, который был исправлен), становятся некорректными. Например, если
выяснилось, что в одной из приходных накладных, введенных в начале месяца, было
неверно указано количество товара, то во всех последующих расходных накладных,
списывающих имеющиеся в наличии партии, необходимо заново проанализировать
остатки с учетом внесенных изменений и заново записать движения регистров. То
есть все документы, анализирующие остатки и расположенные после измененного
документа, должны быть перепроведены.</p>

<p class="MsoNormalCxSpLast">Для
автоматического контроля необходимости перепроведения документов используются
объекты ветви <span class="Interface">Последовательности</span>.
Каждый введенный в конфигурации объект <span class="Interface">Последовательность</span>
обеспечивает контроль за порядком проведения документов указанных видов. Таким
образом, в системе может существовать несколько независимых последовательностей.</p>

<a id="TI000000321" class="bookmark" name="issogl3_5.9.5.1_управление_списком_последовательностей"><h4>5.9.5.1. Управление списком последовательностей</h4></a>

<p class="MsoNormal">Работа
по созданию объектов конфигурации типа <span class="Interface">Последовательность</span>
ведется в окне <span class="Interface">Конфигурация</span>.
Для последовательности отведена отдельная ветвь дерева конфигурации, которая
расположена «внутри» ветви <span class="Interface">Документы</span> и
начинается у ключевого слова <span class="Interface">Последовательности</span>.</p>

<a id="TI000000322" class="bookmark" name="issogl3_5.9.5.2_свойства_последовательности_документов"><h4>5.9.5.2. Свойства последовательности документов</h4></a>

<p class="MsoNormalCxSpFirst">В
этом разделе будут описаны специфические свойства последовательностей
документов в дополнение к общим свойствам объектов конфигурации, описание
которых см. <a href="#_ref141014814">здесь</a>.</p>

<p class="MsoNormalCxSpLast">Свойства
последовательности редактируются в окне редактирования <span class="Interface">Последовательность</span>.</p>

<p class="Regularbeforepicture">На
закладке <span class="Interface">Использование</span>
выбираются документы, которые относятся к данной последовательности, и движения,
влияющие на последовательность.</p>

<p class="Picture"><IMG src="_img/img00152.gif?_=1496848987" WIDTH="455" ALT HEIGHT="439"></p>

<p class="MsoCaption">Рис.
153. Свойства последовательности</p>

<p class="MsoNormalCxSpFirst"><span class="Interface">Перемещение границы при проведении</span>. Если для свойства
указано значение <span class="Interface">Перемещать</span>, то
документ, зарегистрированный в этой последовательности, при своем проведении
будет пытаться переместить границу этой последовательности документов. Если для
свойства указано значение <span class="Interface">Не перемещать</span>,
то документ не будет перемещать границу этой последовательности документов при
своем проведении.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Входящие документы</span> – в верхнем списке окна <span class="Interface">Последовательность</span>
указываются виды документов, которые относятся к данной последовательности.</p>

<p class="MsoNormalCxSpMiddle">В
качестве документов, на проведение которых будет влиять данная
последовательность, следует выбрать те виды документов, которые при проведении
будут анализировать состояние различных регистров. Например, такими документами
могут быть расходные накладные, накладные на передачу, на реализацию и т. д.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Движения, влияющие на последовательность</span> – одно из
основных свойств последовательности. Оно определяет, какие из движений будут
влиять на необходимость перепроведения документов данной последовательности, то
есть движения или итоги каких механизмов учета используются документами данной
последовательности при проведении. Например, в качестве таких движений могут
выступать движения регистров.</p>

<p class="MsoNormalCxSpMiddle">Для
настройки данного параметра следует добавить в список те виды регистров,
движения которых будут нарушать данную последовательность.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Измерения</span>. Последовательности могут иметь подчиненные
объекты, называемые измерениями, которые создаются на закладке <span class="Interface">Данные</span> окна
редактирования.</p>

<p class="MsoNormalCxSpMiddle">Если
для последовательности не создано ни одного измерения, то при восстановлении
данной последовательности будут перепроводиться все входящие документы. Если
требуется, чтобы данная последовательность учитывала не все, а вполне определенные
ситуации, то в последовательность включают измерение. В этом случае
перепроводить нужно будет только те документы, которые изменяют состояние регистра
с учетом свойств измерения.</p>

<p class="MsoNormalCxSpLast">Если
изменяется состояние регистров, участвующих в последовательности, то
неактуальными становятся более поздние документы с теми же значениями в
реквизитах (перечислены в свойстве измерения <span class="Interface">Соответствие
реквизитам документов</span>), которые содержатся в реквизитах удаленных
(добавленных) записей регистров (перечислены в свойстве измерения <span class="Interface">Соответствие реквизитам
движений</span>).</p>

<p class="Regularbeforepicture">Например,
последовательность учитывает изменение состояния регистров по документам <span class="Interface">Приходная накладная</span>
и <span class="Interface">Расходная накладная</span>.
Если требуется учитывать дополнительные критерии необходимости перепроведения
указанных документов (например, нужно перепроводить документы по определенному
значению номенклатуры), то в последовательность следует добавить измерение. В
палитре свойств измерения указать его тип (<span class="Term">СправочникСсылка.Номенклатура</span>) и установить
связь с реквизитами регистров.</p>

<p class="Picture"><IMG src="_img/img00153.gif?_=1496848987" WIDTH="335" ALT HEIGHT="309"></p>

<p class="MsoCaption">Рис.
154. Свойства измерения последовательности</p>

<p class="MsoNormalCxSpFirst">В
соответствии с выбранным типом измерения в списки документов и регистров
измерения для выбора включаются только те объекты, в состав которых входят
указанные типы измерения.</p>

<p class="MsoNormalCxSpLast">Введение измерения
позволяет сократить время перепроведения документов, что особенно важно при
значительном числе документов, т. к. будут перепроводиться только те
документы, которые содержат данные по указанному значению измерения.</p>

<a id="TI000000323" class="bookmark" name="issogl3_5.9.5.3_работа_с_последовательностями_документов"><h4>5.9.5.3. Работа с последовательностями документов</h4></a>

<p class="MsoNormalCxSpFirst">При
работе в режиме 1С:Предприятие для каждой введенной в конфигурации
последовательности документов система будет автоматически поддерживать границу
последовательности. В качестве границы последовательности будет выступать
позиция документа. При последовательном проведении документов, входящих в
данную последовательность, граница последовательности будет устанавливаться на
каждый вновь проведенный документ. Однако если будет проводиться документ,
относящийся к данной последовательности, но расположенный позже другого
проведенного документа, относящегося к той же последовательности и находящегося
после текущей границы последовательности, то граница последовательности
сдвигаться не будет, так как нарушается последовательность проведения
документов. Эта ситуация может быть проанализирована алгоритмом проведения документа.</p>

<p class="MsoNormalCxSpMiddle">При
проведении документов задним числом, отмене проведения или удалении документов,
если удаляются или записываются движения регистров, указанные как влияющие на
данную последовательность, граница последовательности отодвигается на момент
измененного документа. Перед перемещением границы назад производится проверка
на наличие границ, которые необходимо переместить назад. Эта проверка
производится без эксклюзивной блокировки границы.</p>

<p class="MsoNormalCxSpMiddle">Таким
образом, граница последовательности будет продвигаться вперед при
последовательном проведении документов, относящихся к данной последовательности,
и будет отодвигаться назад при изменении задним числом движений регистров, относящихся
к данной последовательности.</p>

<p class="MsoNormalCxSpMiddle">В
режиме перепроведения документов (вызывается выбором пункта <span class="Interface">Все функции – Стандартные –
Проведение документов</span>) существует специальная возможность восстановления
последовательности проведения документов. При ее использовании система
автоматически выполняет перепроведение всех документов, относящихся к данной
последовательности, от границы последовательности до указанного момента.</p>

<p class="MsoNormalCxSpMiddle">В
приведенном нами примере с учетом товаров проводимые расходные накладные будут
сдвигать границу последовательности вперед. Любое изменение в движениях по
регистру, на котором ведется стоимостный учет товаров, записанное раньше
границы последовательности, будет отодвигать границу последовательности назад,
на момент этого документа. После этого проводимые документы, находящиеся позже
границы последовательности, уже не будут двигать ее вперед, если между границей
последовательности и проводимым документом окажутся проведенные документы из
этой последовательности. Режим восстановления последовательности будет перепроводить
все расходные накладные. Заметим, что приходные накладные хотя и влияют своими
движениями на границу последовательности, перепроводиться не будут, так как они
не используют в алгоритме проведения остатков и не включены в список
документов, относящихся к данной последовательности. После выполнения восстановления
последовательности проводимые после границы последовательности документы снова
будут двигать границу вперед.</p>

<p class="MsoNormalCxSpLast">Режим
восстановления последовательности позволяет автоматически выполнить
перепроведение всех документов, относящихся к последовательности, от текущей позиции
границы последовательности до указанного момента. В верхней части диалога следует
выбрать позицию, до которой будет выполняться перепроведение документа.</p>

<a name="_ref443791403"></a><a id="TI000000324" class="bookmark" name="issogl2_5.9.6_ввод_документов_на_основании"><h3>5.9.6. Ввод документов на основании</h3></a>

<p class="MsoNormalCxSpFirst">Одним
из режимов ввода новых документов в процессе работы пользователя с системой «1С:Предприятие»
является режим ввода на основании. С точки зрения пользователя режим ввода на
основании позволяет вводить документы или элементы справочников, заполняя их реквизиты
путем копирования информации из другого объекта информационной базы – документа
или объекта другого вида.</p>

<p class="MsoNormalCxSpMiddle">На
закладке <span class="Interface">Ввод на основании</span>
можно выбрать объекты, которые могут являться основанием для выбранного вида
документа (поле <span class="Interface">Вводится на основании</span>),
и те объекты, которые могут быть введены на основании данного вида документов
(поле <span class="Interface">Является основанием
для</span>).</p>

<p class="MsoNormalCxSpMiddle">Для
реализации механизма ввода на основании необходимо реализовать в модуле
документа обработчик события <span class="Term">ОбработкаЗаполнения</span>. Описание работы механизма
заполнения см. <a href="#_ref214801190">здесь</a>.</p>

<p class="MsoNormalCxSpMiddle">Текст
обработчика может быть доработан специалистом, осуществляющим конфигурирование
системы. В тексте обработчика следует предусмотреть выполнение тех или иных
операций по переносу информации в зависимости от вида документа-образца, а
также любые другие необходимые действия.</p>

<p class="MsoNormalCxSpLast">Конструктор
ввода на основании (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 27. инструменты разработки.htm?_=1496848987#_ref141014854">здесь</a>) предназначен для облегчения создания этого
обработчика.</p>

<a name="_ref435868781"></a><a name="_ref435868735"></a><a name="_ref395247817"></a><a name="_ref395247789"></a><a name="_ref395247220"></a><a name="_ref395247195"></a><a id="TI000000325" class="bookmark" name="issogl1_5.10_журналы_документов"><h2>5.10. Журналы документов</h2></a>

<p class="MsoNormalCxSpFirst">В
системе «1С:Предприятие» журналы документов являются объектами, позволяющими
осуществлять работу с документами разных видов. Работая с формами журнала,
пользователь может вводить документы, просматривать их, редактировать и
удалять.</p>

<p class="MsoNormalCxSpMiddle">Пользователь
может искать любой документ в журнале по содержимому граф, выполнять поиск
документов по их номерам, осуществлять отбор документов по различным признакам.</p>

<p class="MsoNormalCxSpMiddle">Конфигуратор
позволяет создавать любое необходимое число журналов.</p>

<p class="MsoNormalCxSpMiddle">При
создании журнала для него может быть создано произвольное число экранных форм,
на которых располагаются табличные поля, содержащие колонки для отображения
вида документа, номера, даты и времени, а также дополнительные графы для отображения
значений любых других реквизитов документов из числа отображаемых в каждом
журнале.</p>

<p class="MsoNormalCxSpLast">Если
ни одной формы журнала не создано, в режиме 1С:Предприятие автоматически
создается форма журнала по умолчанию.</p>

<a id="TI000000326" class="bookmark" name="issogl2_5.10.1_создание_журнала"><h3>5.10.1. Создание журнала</h3></a>

<p class="MsoNormalCxSpFirst">Для
работы с журналами документов предназначена ветвь <span class="Interface">Журналы документов</span>
дерева конфигурации.</p>

<p class="MsoNormalCxSpMiddle">В
системе «1С:Предприятие» процессы создания журналов и размещения документов по
конкретным журналам тесно связаны между собой. Указание отображения информации
документа в определенном журнале синхронизировано с данными журнала о
документах, информация о которых представлена в журнале.</p>

<p class="MsoNormalCxSpLast">При
создании и журнала, и документов в список журналов и документов автоматически
будет добавлен созданный журнал или документ. Для отражения данных документа в
журнале необходимо или в журнале, или в документе указать эту принадлежность.
Указание принадлежности документа журналу можно производить как в журнале, так
и в документе, т. к. эта операция синхронизирована.</p>

<a id="TI000000327" class="bookmark" name="issogl2_5.10.2_редактирование_журнала"><h3>5.10.2. Редактирование журнала</h3></a>

<p class="MsoNormalCxSpFirst">В
этом разделе будут описаны уникальные свойства журналов в дополнение к общим
свойствам объектов конфигурации (см. <a href="#_ref141014885">здесь</a>), и приемы редактирования объектов конфигурации типа <span class="Term">Журнал</span>, отличные от общих приемов редактирования
объектов конфигурации.</p>

<p class="MsoNormalCxSpMiddle">Редактирование
свойств журнала (формирование списка дополнительных граф и определение их
состава, форм журнала и макетов печатных форм и др.) выполняется в окне редактирования
(см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 2. работа с конфигурацией.htm?_=1496848987#_ref414277435">здесь</a>).</p>

<p class="MsoNormalCxSpMiddle">На
закладке <span class="Interface">Данные</span>
формируется список документов, входящих в журнал, и список граф журнала.</p>

<p class="MsoNormalCxSpLast">В
каждом подчиненном объекте, расположенном в ветви <span class="Interface">Графы</span>,
указывается реквизит всех документов, включаемый в журнал (см. <a href="#_ref436018782">здесь</a>).</p>

<a name="_ref436018782"></a><a name="_ref474421727"></a><a name="_ref474421726"></a><a id="TI000000328" class="bookmark" name="issogl2_5.10.3_графы_журнала_документов"><h3>5.10.3. Графы журнала документов</h3></a>

<p class="MsoNormalCxSpFirst">Когда
в конфигурации создается новый журнал документов, для работы с ним может быть
создано неограниченное число форм журнала. Форма журнала создается с помощью
конструктора форм объектов конфигурации (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 27. инструменты разработки.htm?_=1496848987#_ref441854797">здесь</a>). Конструктор размещает в форме табличное поле,
содержащее набор граф для показа различных реквизитов документов. При создании
формы журнала конструктор формы создает графы: картинка (для показа состояния
документа), вид, дата и номер документа. Если требуется включить в журнал
дополнительную информацию, то необходимо сформировать список дополнительных
граф и разместить их в формах.</p>

<p class="MsoNormalCxSpLast">На
закладке <span class="Interface">Данные</span> окна
редактирования располагается список документов, данные которых отображаются в
журнале. Для создания дополнительной графы в нижнем списке нужно добавить
подчиненный объект <span class="Interface">Графа</span> и указать
реквизиты документов, данные которых будут показываться в графе.</p>

<p class="Regularbeforepicture">Для
выбора реквизитов документов, которые будут размещены в графе журнала, в
палитре свойств графы, в свойстве <span class="Interface">Ссылки</span>, нужно
нажать кнопку выбора. На экран выводится окно выбора реквизитов документов.</p>

<p class="Picture"><IMG src="_img/img00154.gif?_=1496848987" WIDTH="373" ALT HEIGHT="351"></p>

<p class="MsoCaption">Рис.
155. Выбор реквизитов для графы</p>

<p class="Note"><span class="Note">ВНИМАНИЕ!</span> Нельзя выбрать несколько реквизитов одного и
того же документа.</p>

<p class="MsoNormalCxSpFirst">Если
реквизит какого-либо документа не выбран, то в данной графе журнала документов
будет отсутствовать информация по всем документам этого вида. При выборе
следует руководствоваться исключительно здравым смыслом и не смешивать в одной
графе абсолютно разные понятия (например, наименование контрагента и сумму
документа).</p>

<p class="MsoNormalCxSpMiddle">Помимо обязательных граф документов (<span class="Interface">Дата</span>, <span class="Interface">Номер</span>, <span class="Interface">Вид документа</span>) и граф, указанных в подчиненной группе
объектов журнала <span class="Interface">Графы</span>, в журнал можно добавить любое количество
дополнительных граф.</p>

<p class="MsoNormalCxSpMiddle">Если все, входящие в состав журнала,
документы со строковым типом номера имеют фиксированную длину номера, то графа
журнала <span class="Interface">Номер</span> также будет иметь фиксированную длину. Если хотя
бы один документ, входящий в состав журнала, со строковым типом номера имеет
переменную длину номера – графа журнала <span class="Interface">Номер</span> создается с переменной длиной.</p>

<p class="MsoNormalCxSpMiddle">На отображение граф журнала оказывают
влияние права доступа пользователя. Если у пользователя нет права <span class="Term">Просмотр</span>
хотя-бы на один реквизит документа, входящий в состав графы журнала, то данному
пользователю такая графа в журнале будет недоступна.</p>

<p class="MsoNormalCxSpMiddle">Новая графа добавляется в список граф
выбранного объекта <span class="Interface">Журналы документов</span>. Наличие в журнале дополнительных
граф дает возможность пользователю получить наиболее важные сведения о документе
уже при просмотре журнала, не открывая сам документ.</p>

<p class="MsoNormalCxSpLast">Для элемента формы, отображающего графу
журнала, автоматически применяются следующие свойства реквизитов, входящих в
состав графы:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Interface">Режим пароля</span> –
если такой режим установлен хотя бы у одного реквизита, входящего в состав
графы.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Формат</span> – при
полном совпадении у всех реквизитов, входящих в состав графы, на всех языках,
определенных в конфигурации.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Подсказка</span> – если
подсказки совпадают для всех реквизитов, выводится одна подсказка; если
подсказки не совпадают, они выводятся через запятую.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
<span class="Interface">Выделять отрицательные</span> –
если данное свойство установлено у всех реквизитов, входящих в состав графы.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Interface">Многострочный режим</span> –
если данное свойство установлено у всех реквизитов, входящих в состав графы.</p>

<a name="_ref367969126"></a><a name="_ref418611090"></a><a name="_ref418611086"></a><a id="TI000000329" class="bookmark" name="issogl2_5.10.4_интерактивное_создание_нового_документа"><h3>5.10.4. Интерактивное создание нового документа</h3></a>

<p class="MsoNormal">Если журнал документов включает в себя более
одного типа документа, то в форме списка журнала существует два варианта
создания нового документа:</p>

<p class="MsoListBullet">&#9679; 
В командной панели размещена кнопка <span class="Interface">Создать</span> и после ее нажатия (или после нажатия клавиши <span class="Interface">Ins</span>) открывается диалог со списком типов документов,
отображаемых в журнале.</p>

<p class="Indentlist">Данный вариант автоматически используется в
том случае, если свойство конфигурации <span class="Interface">Режим совместимости</span>
(см. <a href="#_ref367965436">здесь</a>) установлено в значение <span class="Interface">Версия 8.3.3</span> и
младше.</p>

<p class="MsoListBullet">&#9679; 
В командной панели размещена кнопка <span class="Interface">Создать</span> с подменю, которое содержит перечень всех видов
документов, отображаемых журналом. Такое же подменю формируется при нажатии клавиши
<span class="Interface">Ins</span>. Меню формируется у текущей ячейки таблицы. Если
журнал отображает один тип документа, то никаких подменю не формируется.</p>

<p class="IndentlistCxSpFirst">Виды документов, отключенные функциональными
опциями (см. <a href="#_ref418598738">здесь</a>) и на которые у текущего пользователя отсутствует
право <span class="Term">ИнтерактивноеДобавление</span>
(см. <A href="/db/content/v8310doc/src/руководство разработчика/приложение 6. описание прав доступа.htm?_=1496848987#_ref391302583">здесь</a>), не попадают в автоматически формируемое меню
создания нового документа.</p>

<p class="IndentlistCxSpLast">Данный вариант автоматически используется в
том случае, если свойство конфигурации <span class="Interface">Режим совместимости</span> (см. <a href="#_ref367965436">здесь</a>) установлено в значение <span class="Interface">Версия 8.3.4</span> и старше или <span class="Interface">Не используется</span>. Данное поведение соответствует командной
панели динамического списка с автоматическим заполнением.</p>

<p class="MsoNormalCxSpFirst">В случае автоматического формирования
списков типов документов, эти типы отсортированы по представлению входящих документов.</p>

<p class="MsoNormalCxSpLast">Если командная панель динамического списка
или формы (при условии, что основным реквизитом формы является динамический
список) не использует автоматическое заполнение, то существует возможность
вручную сформировать такое подменю. Для этого необходимо выполнить следующие
действия:</p>

<p class="MsoListNumberCxSpFirst">1. 
Создать в командной панели группу кнопок с
необходимым названием (например, <span class="Interface">Создать</span>) и видом <span class="Interface">Подменю</span>.</p>

<p class="MsoListNumberCxSpMiddle">2. 
В созданную группу добавить стандартную команду
динамического списка <span class="Interface">Создать по параметру</span>. Для кнопки, связанной с этой
командой, указать в качестве значения свойства <span class="Interface">Параметр</span>, тип документа, который будет создаваться при
нажатии на эту кнопку. Представлением кнопки будет служить представление
соответствующего типа документа (указанного в свойстве <span class="Interface">Параметр</span>).</p>

<p class="MsoListNumberCxSpLast">3. 
Добавить столько команд, сколько документов
планируется создавать с помощью данного меню.</p>

<p class="MsoNormalCxSpFirst">При ручном создании кнопки с подменю следует
учитывать следующий факт: при нажатии в динамическом списке клавиши <span class="Interface">Ins</span>, в подменю будет включен весь список типов
документом, отображаемых динамическим списком, а не только те типы, которые размещены
в подменю командной панели.</p>

<p class="MsoNormalCxSpLast">Если в форме списка журнала происходит
обработка события таблицы <span class="Term">ПередНачаломДобавления</span>,
то в этом событии имеется возможность проанализировать, какой документ
необходимо создать. Параметр процедуры обработчика события <span class="Term">Параметр</span>
будет содержать тип создаваемого документа в том случае, если создание
документа инициировано с помощью кнопки, связанной с командой <span class="Interface">Создать по параметру</span> (с указанием этого параметра). Во
всех остальных случаях значение этого параметра будет равно значению <span class="Term">Неопределено</span>.</p>

<a id="TI000000330" class="bookmark" name="issogl1_5.11_перечисления"><h2>5.11. Перечисления</h2></a>

<p class="MsoNormalCxSpFirst">Перечисление
представляет собой служебный тип данных, который не используется самостоятельно,
а применяется в основном в совокупности с другими типами данных. Определить
перечисление можно как список возможных значений реквизита.</p>

<p class="MsoNormalCxSpMiddle">Перечисления
используются при вводе значений реквизитов документов, справочников, при вводе
значений констант, в тех случаях, когда необходимо исключить неоднозначный ввод
информации.</p>

<p class="MsoNormalCxSpMiddle">Рассмотрим
в качестве примера такое понятие, как «статус покупателя». В простейшем случае
покупатели бывают розничные и оптовые. Со статусом покупателя обычно связывают
уровень предоставляемых скидок с продажной цены товаров.</p>

<p class="MsoNormalCxSpMiddle">Такой
список «статусов» – розничный, оптовый – может служить примером
простого перечисления. При выписке расходной накладной от пользователя системы
требуется указать статус покупателя, выбрав его из этого списка. Выбранный
статус покупателя, в свою очередь, определяет размер продажных цен.</p>

<p class="MsoNormalCxSpMiddle">Если
статус покупателя вводится в процессе настройки конфигурации задачи как
перечисление, то специалист, выполняющий конфигурирование системы «1С:Предприятие»,
может заранее ввести варианты расчета продажных цен в зависимости от указанного
статуса.</p>

<p class="MsoNormalCxSpMiddle">Прежде
всего, перечисление не может пополняться в процессе работы с ним: список его
значений задается при настройке перечисления в конфигураторе.</p>

<p class="MsoNormalCxSpMiddle">Перечисление
не имеет вложенности – все его значения находятся на одном уровне.</p>

<p class="MsoNormalCxSpMiddle">Основная
особенность перечисления состоит в том, что список значений перечисления
известен и доступен в конфигураторе – сама конфигурация использует конкретные
значения перечисления.</p>

<p class="MsoNormalCxSpMiddle">Использование
перечисления позволяет ограничить число возможных вариантов, например, при
вводе реквизита документа. Так как список значений перечисления создается в
конфигурации, то можно организовать проверку выбранного значения и описать
действия, которые должны за этим выбором последовать.</p>

<p class="MsoNormalCxSpMiddle">Для
работы с перечислениями предназначена ветвь <span class="Interface">Перечисления</span>
дерева конфигурации.</p>

<p class="MsoNormalCxSpLast">Редактирование
перечисления заключается в создании списка значений перечислений. Для
редактирования перечисления используется окно редактирования объекта <span class="Interface">Перечисление</span>. При
создании нового перечисления свойство <span class="Interface">Использовать стандартные
команды</span> выключено.</p>

<p class="Regularbeforepicture">На
закладке <span class="Interface">Данные</span>
производится формирование значений перечисления.</p>

<p class="Picture"><IMG src="_img/img00155.gif?_=1496848987" WIDTH="511" ALT HEIGHT="450"></p>

<p class="MsoCaption"><a name="_ref214853413">Рис. </a>156. Добавление
значения перечисления</p>

<p class="MsoNormalCxSpFirst">В
палитре свойств указывается имя и синоним.</p>

<p class="MsoNormalCxSpMiddle">Список
значений перечисления в режиме 1С:Предприятие используется следующим образом:
каждое значение перечисления представляется синонимом; если синоним не задан,
то используется его имя.</p>

<p class="MsoNormalCxSpMiddle">В
приведенном на <a href="#_ref214853413">рис.156</a> примере значение перечисления <span class="Term">ВидыТоваров</span>
будет представляться в виде <span class="Interface">Товар</span> (по
введенному синониму).</p>

<p class="MsoNormalCxSpMiddle">На
закладке <span class="Interface">Формы</span> создаются
формы списка и выбора. Это позволяет создавать различные формы для выбора (в
зависимости от применяемого контекста). Формы списка позволяют распечатывать
списки перечислений. При создании формы списка по умолчанию автоматически
включается свойство <span class="Interface">Использовать
стандартные команды</span>.</p>

<p class="MsoNormalCxSpLast">На
закладке <span class="Interface">Макеты</span> могут
быть созданы макеты печати.</p>

<a name="_ref341972586"></a><a name="_ref341972585"></a><a name="_ref10531979"></a><a name="_ref405465399"></a><a name="_ref405465398"></a><a id="TI000000331" class="bookmark" name="issogl1_5.12_отчеты_и_обработки"><h2>5.12. Отчеты и обработки</h2></a>

<a name="_ref425506088"></a><a id="TI000001707" class="bookmark" name="issogl2_5.12.1_общая_информация"><h3>5.12.1. Общая информация</h3></a>

<p class="MsoNormalCxSpFirst">Любая система автоматизации учета только
тогда выполняет свои функции, когда она имеет средства обработки накопленной
информации и получения сводных данных в удобном для просмотра и анализа виде.
Как правило, для решения подобных задач в системе автоматизации учета существует
возможность формирования отчетов. Конфигуратор позволяет формировать набор различных
отчетов, достаточных для удовлетворения потребности пользователей системы в
достоверной и подробной выходной информации.</p>

<p class="MsoNormalCxSpMiddle">Для
получения отчетной информации в системе «1С:Предприятие» используются объекты
конфигурации, расположенные в ветви <span class="Interface">Отчеты</span> дерева
конфигурации. Каждый объект этого типа может содержать алгоритм формирования
«бумажного» или «электронного» отчета на внутреннем языке системы «1С:Предприятие»
или схему компоновки данных, на основании которой система «1С:Предприятие» может
автоматически выполнить отчет (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 10. система компоновки данных.htm?_=1496848987#_ref216099257">здесь</a>). Отчет может содержать одну или несколько форм, с помощью
которых, при необходимости, можно организовать ввод каких-либо параметров,
влияющих на ход алгоритма. Для вывода результатов выполнения алгоритма на экран
и принтер отчет может иметь созданные с помощью конструктора макетов описания
печатных форм (макеты).</p>

<p class="MsoNormalCxSpMiddle">Редактирование
свойств объектов типа <span class="Interface">Отчет</span> и <span class="Interface">Обработка</span> и
создание подчиненных объектов выполняются в окне редактирования (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 2. работа с конфигурацией.htm?_=1496848987#_ref414277435">здесь</a>).</p>

<p class="MsoNormalCxSpMiddle"><a name="_ref395269430"></a><a name="_ref395269381"></a>Для
выполнения различных действий над информацией в системе «1С:Предприятие» используются
объекты конфигурации, расположенные в ветви <span class="Interface">Обработки</span> дерева конфигурации. Например, с их помощью
можно выполнять удаление из системы устаревших данных, импорт информации из других
систем и многое другое. Характер выполняемых в этом случае действий отражает
название объекта конфигурации – <span class="Interface">Обработка</span>, так как в результате информация, хранящаяся в
системе, претерпевает какие-либо изменения.</p>

<p class="MsoNormalCxSpMiddle">Обработка может содержать одну или несколько
форм, с помощью которых, при необходимости, можно организовать ввод каких-либо
параметров, влияющих на ход алгоритма. Вывод результатов выполнения алгоритма
на экран и принтер осуществляется с помощью конструктора макетов описания
печатных форм (макеты).</p>

<p class="MsoNormalCxSpMiddle">Основное отличие отчета от обработки
заключается в возможности использования схемы компоновки данных (подробнее см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 10. система компоновки данных.htm?_=1496848987#_ref166301231">здесь</a>). В остальном обработка не отличается от отчета.</p>

<p class="MsoNormalCxSpLast">Существует возможность для нескольких (или
всех) отчетов прикладного решения использовать единые формы отчета, настроек
или варианта отчета. Для этого необходимо использовать общие формы. В общем
случае можно выделить следующие варианты использования:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Для всех отчетов прикладного решения
используется единый набор форм работы с отчетами. В этом случае нужно создать
необходимые формы и указать их в свойствах конфигурации (см. <a href="#_ref286946779">здесь</a>). Тогда в самих отчетах формы разрабатывать не нужно, т. к.
будут использоваться общие формы.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Можно выделить наборы отчетов, для каждого из
которых необходимо разработать свои формы работы с отчетом. В этом случае
создаются общие формы работы с отчетами, которые указываются для каждого отчета
«своей» группы. Так можно сделать особый набор форм, например, для бухгалтерских
отчетов или для отчетов аналитиков.</p>

<p class="Note"><a name="_ref13456784"></a><a name="_ref10532155"></a>Примечание. Если у нескольких отчетов в качестве
основной формы указана одна общая форма, то в толстом клиенте (в обычном
режиме) одновременно можно будет открыть только один из этих отчетов.</p>

<p class="MsoNormal">Если
в форме отчета используется стандартная команда <span class="Interface">Открыть новое окно</span>,
то следует помнить о том, что в новое окно не передаются те параметры, которые были
переданы в форму, из которой использована стандартная команда.</p>

<a name="_ref435700394"></a><a name="_ref435700393"></a><a id="TI000000332" class="bookmark" name="issogl2_5.12.2_внешние_обработки_и_отчеты"><h3>5.12.2. Внешние обработки и отчеты</h3></a>

<a name="_ref435632356"></a><a id="TI000001756" class="bookmark" name="issogl3_5.12.2.1_общая_информация"><h4>5.12.2.1. Общая информация</h4></a>

<p class="MsoNormalCxSpFirst">Внешней
обработкой в системе «1С:Предприятие» называется обработка, хранящаяся вне
конфигурации, в отдельном файле внешней обработки. Внешняя обработка служит для
решения тех же задач, что и объекты конфигурации типа <span class="Interface">Отчет</span> или <span class="Interface">Обработка</span>.</p>

<p class="MsoNormalCxSpMiddle">Внешним
отчетом в системе «1С:Предприятие» называется отчет, хранящийся вне
конфигурации, в отдельном файле внешнего отчета. Внешний отчет служит для решения
тех же задач, что и объекты конфигурации типа <span class="Interface">Отчет</span>.</p>

<p class="MsoNormalCxSpMiddle">Основное
назначение внешнего обработки (отчета) заключается в возможности реализовывать,
поставлять и обновлять некоторые возможности отдельно от конфигурации.</p>

<p class="MsoNormalCxSpLast">Внешние
обработки и отчеты могут храниться в двух разных форматах:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Двоичные файлы, имеющие расширение <span class="Interface">.epf</span> и <span class="Interface">.erf</span>
соответственно. Эти файлы могут использоваться как для редактирования в
конфигураторе, так и для использования в режиме 1С:Предприятия. Имеется
возможность разработки и отладки в процессе работы системы «1С:Предприятие». В
этом случае разработка и отладка обработки (отчета) значительно ускоряются: редактирование
и сохранение внешней обработки (отчета) выполняются в режиме Конфигуратор, без
сохранения конфигурации в целом, а запуск – в режиме 1С:Предприятие. Для
выполнения внешняя обработка (отчет) загружается при помощи пункта <span class="Interface">Файл – Открыть</span>
и работает так же, как и любая другая обработка (отчет) конфигурации.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
XML-файлы в формате, соответствующим файлам,
которые используются при выгрузке/загрузке конфигурации в файлы
(см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 2. работа с конфигурацией.htm?_=1496848987#_ref435630172">здесь</a>). При использовании этого формата поддерживается
только редактирование внешней обработки (отчета) в режиме Конфигуратора. Для
использования в режиме 1С:Предприятия внешнюю обработку (отчет) необходимо
сохранить в двоичном формате <span class="Interface">.erf</span>/<span class="Interface">.epf</span>. Для
работы используется формат версии 2.0.</p>

<p class="Note"><span class="Note">Примечание.</span> Внешняя обработка (отчет), открываемые с
помощью меню <span class="Interface">Файл – Открыть</span>,
будут исполняться в безопасном режиме (см. <a href="#_ref378761017">здесь</a>), если у пользователя отсутствуют административные
права доступа.</p>

<p class="MsoNormal">Любой
объект конфигурации типа <span class="Interface">Обработка</span> или <span class="Interface">Отчет</span> может
быть сохранен в файл внешней обработки (отчета), и наоборот – существующий
объект конфигурации может быть заменен внешней обработкой (отчетом). Для
внешней обработки (отчета) может быть создана справочная информация, как и для
других объектов конфигурации.</p>

<p class="Note"><span class="Note">Совет.</span> Для обеспечения целостности конфигурации
внешние обработки (отчеты) рекомендуется использовать в основном в отладочных
целях. После отладки алгоритма формирования обработки (отчета) необходимо
включить внешнюю обработку в конфигурацию.</p>

<p class="MsoNormal">Сохранение
внешней обработки (отчета) в XML-формате можно использовать в том случае, если
предполагается хранить эту обработку (отчет) во внешней системе контроля
версий. XML-формат для этого более удобен, чем двоичный формат <span class="Interface">.epf</span> (<span class="Interface">.erf</span>).
Конфигуратор позволяет открывать для редактирования внешние обработки (отчеты)
в любом формате. При этом запись по умолчанию выполняется ровно в том же
формате, в котором внешняя обработка (отчет) была открыта в конфигураторе. Для
смены формата хранения необходимо выполнить команду <span class="Interface">Файл – Сохранить
как…</span> или <span class="Interface">Файл – Сохранить
копию…</span> и в открывшемся диалоге выбрать нужный формат сохранения.</p>

<a name="_ref435632371"></a><a id="TI000000333" class="bookmark" name="issogl3_5.12.2.2_создание_внешней_обработки_отчета"><h4>5.12.2.2. Создание внешней обработки (отчета)</h4></a>

<p class="Regularbeforepicture">Для
создания внешней обработки (отчета) необходимо выбрать пункт <span class="Interface">Файл – Новый</span>
и в выданном на экран запросе выбрать строку <span class="Interface">Внешняя обработка</span>
или <span class="Interface">Внешний отчет</span>.</p>

<p class="Picture"><IMG src="_img/img00156.gif?_=1496848987" WIDTH="316" ALT HEIGHT="235"></p>

<p class="MsoCaption">Рис.
157. Выбор вида документа</p>

<p class="MsoNormalCxSpFirst">На
экран будет вызван редактор форм для разработки внешней обработки (отчета). Для
внешнего отчета окно редактирования будет дополнительно содержать управляющие
элементы для создания, настройки и редактирования системы компоновки данных.</p>

<p class="MsoNormalCxSpLast">Так
как внешняя обработка (отчет) не является частью текущей конфигурации (хотя и
очень тесно с ней связана), процедура ее сохранения отличается от процедуры
сохранения изменений конфигурации (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 2. работа с конфигурацией.htm?_=1496848987#_ref405465846">здесь</a>). Для сохранения внешней обработки (отчета)
необходимо использовать пункт <span class="Interface">Файл – Сохранить</span>,
или <span class="Interface">Файл – Сохранить
как…</span>, или <span class="Interface">Файл – Сохранить
копию</span>. В стандартном диалоге сохранения файла нужно выбрать нужный вариант
сохранения (см. <a href="#_ref435632356">здесь</a>), а затем ввести имя сохраняемой внешней обработки
(отчета).</p>

<a name="_ref356839136"></a><a name="_ref428891690"></a><a id="TI000000334" class="bookmark" name="issogl3_5.12.2.3_использование_внешних_обработок_отчетов"><h4>5.12.2.3. Использование внешних обработок (отчетов)</h4></a>

<p class="MsoNormalCxSpFirst">Для
использования внешней обработки (отчета) при работе с системой «1С:Предприятие»
ее необходимо открыть так же, как это делается в конфигураторе. Однако следует
иметь в виду, что в системе «1С:Предприятие» внешняя обработка (отчет)
открывается только для исполнения: пользователь не может его редактировать. При
попытке открытия проверяются соответствующие права доступа, и происходит
установка безопасного режима (если у пользователя нет административных прав).
Кроме того, для исполнения внешней обработки (отчета) она должна быть сохранена
в двоичном формате <span class="Interface">.epf</span> (<span class="Interface">.er</span><span class="Interface">f</span>), подробнее см. <a href="#_ref435632356">здесь</a>.</p>

<p class="MsoNormalCxSpMiddle">Компиляция
модуля внешней обработки (отчета) выполняется при открытии внешней обработки
(отчета), поэтому после редактирования внешней обработки (отчета) в конфигураторе
и ее сохранения необходимо вновь открыть эту обработку в режиме 1С:Предприятие.</p>

<p class="MsoNormalCxSpMiddle">Кроме
того, работа с внешними обработками (отчетами) возможна также на сервере «1С:Предприятия».
При этом сохраняются все ограничения на использование интерактивных объектов
(форм и т. д.).</p>

<p class="MsoNormalCxSpLast">Для того чтобы использовать внешнюю
обработку (отчет) из встроенного языка, необходимо вначале подключить ее с
помощью метода <span class="Term">Подключить()</span> (доступен только на сервере «1С:Предприятия»).</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="comment">// На клиенте размещаем обработку во временном хранилище</span>
АдресХранилища <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="operator">;</span>
Результат <span class="operator">=</span> ПоместитьФайл<span class="operator">(</span>АдресХранилища<span class="operator">,</span> <span class="string">&quot;ВнешОбработка.epf&quot;</span><span class="operator">,</span> <span class="operator">,</span> <span class="keyword">Ложь</span><span class="operator">)</span><span class="operator">;</span>
...
<span class="comment">// На сервере подключаем обработку из созданного ранее</span>
<span class="comment">// временного хранилища. </span>
ИмяОбработки <span class="operator">=</span> ВнешниеОбработки<span class="operator">.</span>Подключить<span class="operator">(</span>АдресВременногоХранилища<span class="operator">)</span><span class="operator">;</span></pre>

<p class="MsoNormal">В
переменную <span class="Term">ИмяОбработки</span> будет помещено имя внешней
обработки, которое в дальнейшем будет использоваться для обращения к
подключенной внешней обработке. Например, при открытии формы обработки:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="comment">// Откроем форму подключенной внешней обработки</span>
ОткрытьФорму<span class="operator">(</span><span class="string">&quot;ВнешняяОбработка.&quot;</span><span class="operator">+</span> ИмяОбработки <span class="operator">+</span><span class="string">&quot;.Форма&quot;</span><span class="operator">)</span><span class="operator">;</span> </pre>

<p class="MsoNormal">Внешняя
обработка (отчет) может быть подключена в безопасном режиме
(см. <a href="#_ref378761017">здесь</a>). Для этого следует использовать параметр <span class="Term">БезопасныйРежим</span> методов подключения <span class="Term">Подключить()</span> и <span class="Term">Создать()</span>. Режим подключения внешней обработки
(отчета) будет зависеть от значения этого параметра:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Параметр имеет значение <span class="Term">Истина</span>: внешняя обработка (отчет) подключаются
в безопасном режиме;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Параметр имеет значение <span class="Term">Ложь</span>: внешняя обработка (отчет) подключаются в
не безопасном (опасном) режиме;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
В качестве значения параметра указано имя
профиля безопасности (подробное описание см. <a href="/db/v8310doc/bookmark/cs/TI000000053" target="_top">здесь</a>):</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
Имя не указано: внешняя обработка (отчет)
подключается в безопасном режиме;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
Имя профиля указано, и для этого профиля
параметр <span class="Interface">Профиль безопасности
безопасного режима</span> установлен в значение <span class="Term">Истина</span>: внешняя обработка (отчет) будет
подключена, но работать будет под управлением профиля безопасности с указанным именем;</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
Имя профиля указано, и для этого профиля
параметр <span class="Interface">Профиль безопасности
безопасного режима</span> установлен в значение <span class="Term">Ложь</span>: внешняя обработка (отчет) будет
подключена, но работать будет под управлением профиля безопасности по
умолчанию;</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
Профиль безопасности с указанным именем
отсутствует на сервере «1С:Предприятия»: внешняя обработка (отчет) подключается
в безопасном режиме.</p>

<p class="Regularbeforepicture">Внешняя
обработка (отчет) может содержать вредоносный код (подробнее
см. <A href="/db/content/v8310doc/src/руководство разработчика/приложение 7. особенности поведения системы в различных режимах.htm?_=1496848987#_ref465269736">здесь</a>). Поэтому при попытке интерактивно открыть внешнюю
обработку (отчет) у пользователя будет запрошено разрешение на выполнение этой
операции.</p>

<p class="Picture"><IMG src="_img/img00157.gif?_=1496848987" WIDTH="800" ALT HEIGHT="182"></p>

<p class="MsoCaption">Рис.
158. Предупреждение безопасности при открытии внешней обработки
(отчета)</p>

<p class="MsoNormalCxSpFirst">Если
в данном диалоге ответить <span class="Interface">Да</span>, то это
разрешение будет запомнено и последующие открытия данной обработки (отчета)
будут происходить без вопросов. Если ответить <span class="Interface">Нет</span>, то
обработка (отчет) не будет открыта. При следующем открытии вопрос будет задан
повторно.</p>

<p class="MsoNormalCxSpLast">Для
программной работы внешняя обработка (отчет) может быть расположена:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
в файле, который расположен в конфигурации
(например, в макете);</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
в данных информационной базы;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
во временном хранилище (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 20. механизм временного хранилища, работа с файлами и картинками.htm?_=1496848987#_ref393795375">здесь</a>).</p>

<p class="MsoNormal">Имена
внешних обработок (отчетов) должны быть уникальны в пределах сеанса. Если
осуществляется подключение (программное или интерактивное) внешней обработки (отчета)
с именем, повторяющим имя уже загруженной в данном сеансе внешней обработки (отчета),
то будет произведено отключение старой обработки и подключение новой.</p>

<p class="Note"><span class="Note">Примечание.</span> При работе внешних обработок (отчетов) в
толстом клиенте следует учитывать, что при работе в режиме управляемого
приложения возможно открытие только управляемых форм, при работе в обычном
режиме – только обычных форм.</p>

<p class="MsoNormal">При
использовании внешних обработок (отчетов) нужно иметь в виду следующие
особенности:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Если подключена новая обработка (отчет) с таким
же именем, как и подключенная обработка (отчет), то открытые формы от «старой»
обработки (отчета) перестают работать (генерируется ошибка).</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
При подключении внешней обработки (отчета), если
подключаемая обработка (отчет) двоично идентична уже подключенной и совпадает
признак безопасного режима, реального переподключения не происходит, ошибки при
этом не выдается. В противном случае ранее подключенная внешняя обработка
(отчет) отключается и выполняется новое подключение внешней обработки (отчета).</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
При выполнении метода <span class="Term">Создать()</span>, параметр метода <span class="Term">БезопасныйРежим</span> игнорируется, если ранее было
выполнено подключение внешней обработки (отчета) с помощью метода <span class="Term">Подключить()</span>. Если подключение ранее не
выполнялось, то будет выполнено подключение внешней обработки (отчета) с
использованием параметра <span class="Term">БезопасныйРежим</span> из метода <span class="Term">Создать()</span>.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
При программном подключении внешней обработки
(отчета) с помощью метода <span class="Term">Подключить()</span>, имеется возможность указать,
будет выполняться контроль опасных действий или нет. Для этого следует
использовать параметр метода <span class="Term">ЗащитаОтОпасныхДействий</span>.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
При получении формы для внешней обработки (отчета)
будет найдена открытая форма независимо от того, открыта она для подключенной
сейчас обработки или для той, которая была подключена ранее (с тем же именем).</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
При открытии обработки (отчета) с помощью
команды главного меню<span class="Interface"> Файл – Открыть</span>,
форма обработки (отчета) открывается методом <span class="Term">ОткрытьФорму()</span> с параметром <span class="Term">Уникальность</span>, равным значению <span class="Term">Истина</span>, чтобы можно было открыть новую форму
обработки в случае ее изменения.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Если явно не указано, то все вышеописанные
особенности в равной степени применяются как для внешней обработки (отчета)
открытой интерактивно, так и программно.</p>

<a name="_ref435633270"></a><a id="TI000000335" class="bookmark" name="issogl3_5.12.2.4_редактирование_внешней_обработки_отчета"><h4>5.12.2.4. Редактирование внешней обработки (отчета)</h4></a>

<p class="MsoNormalCxSpFirst">Редактирование
внешней обработки (отчета) выполняется в конфигураторе. Чтобы открыть
существующую внешнюю обработку (отчет), следует выбрать пункт <span class="Interface">Файл – Открыть</span>.
В выданном на экран стандартном диалоге выбрать тип файла, соответствующий
формату сохранения внешней обработки (отчета) и указать имя открываемого файла.</p>

<p class="MsoNormalCxSpMiddle">При
открытии внешней обработки (отчета) в конфигураторе автоматически открывается
окно редактирования объекта. В отличие от других объектов конфигурации, отладка
внешней обработки (отчета) может производиться без перезапуска системы «1С:Предприятие».
Достаточно после сохранения обработки (отчета) конфигуратором заново вызвать ее
на выполнение в режиме 1С:Предприятие (только для обработки (отчета),
сохраненной в формате <span class="Interface">.epf</span>/<span class="Interface">.erf</span>).</p>

<p class="MsoNormalCxSpMiddle">В
диалоге редактирования внешней обработки (отчета) имеется возможность сделать
копию внешней обработки (отчета) не изменяя собственно редактируемый объект.
Для этого необходимо выполнить команды <span class="Interface">Действия – Выгрузить
в файлы</span>. При этом кроме создания копии внешней обработк (отчета) имеет
возможность выбрать формат выгрузки (см. <a href="#_ref435632356">здесь</a>). Во время этой операции система по уолчанию
предлагает формат выгрузки, отличный от текущего формата. Т.е. если
редактируется внешняя обработка (отчет) в формате <span class="Interface">.epf</span>/<span class="Interface">.erf</span>, то будет
предложен формат XML и наоборот. Имеется возможность заместить редактируемую
внешнюю обработку (отчет) на другую внешнюю обработку (отчет), которая
находится в файле (в любом из поддерживаемых форматов).</p>

<p class="MsoNormalCxSpLast">При
выгрузке/загрузки внешней обработки (отчета) в/из файла предоставляется
возможность изменять вид объекта, не меняя его у редактируемого объекта.
Например, можно выгрузить редактируемую внешнюю обработку как внешний отчет или
наоборот, при этом редактируемый объект останется того вида, каким он был до
выполнения операции.</p>

<a id="TI000000336" class="bookmark" name="issogl3_5.12.2.5_справочная_информация"><h4>5.12.2.5. Справочная информация</h4></a>

<p class="MsoNormalCxSpFirst">Внешняя
обработка (отчет) может быть снабжена пользовательским описанием. Для
редактирования описания в палитре свойств внешней обработки нужно щелкнуть
ссылку <span class="Interface">Открыть</span>
свойства <span class="Interface">Справочная информация</span>.</p>

<p class="MsoNormalCxSpLast">В
режиме 1С:Предприятие для просмотра описания внешней обработки (отчета)
необходимо нажать клавишу <span class="Interface">F1</span>.</p>

<a name="_ref10527240"></a><a name="_ref10527238"></a><a name="_ref10525738"></a><a name="_ref10525735"></a><a id="TI000000337" class="bookmark" name="issogl3_5.12.2.6_внешние_обработки_отчеты_и_объекты_конфигурации"><h4>5.12.2.6. Внешние обработки (отчеты) и объекты конфигурации</h4></a>

<a id="TI000001755" class="bookmark" name="issogl4_5.12.2.6.1_общая_информация"><h5>5.12.2.6.1. Общая информация</h5></a>

<p class="MsoNormalCxSpFirst">Существующие
в конфигурации объекты типа <span class="Interface">Отчет</span> и <span class="Interface">Обработка</span> могут
быть преобразованы во внешние отчеты и обработки, и наоборот, внешние отчеты и
обработки могут заменять собой существующий объект конфигурации типа <span class="Interface">Отчет</span> или <span class="Interface">Обработка</span>.
Также внешние отчеты и обработки могут быть добавлены в структуру конфигурации
как новые объекты конфигурации типа <span class="Interface">Отчет</span> или <span class="Interface">Обработка</span>.</p>

<p class="MsoNormalCxSpLast">При
работе с внешней обработкой (отчетом) имеется возможность выбирать формат
сохраняемого объекта. Это выполняется в диалоге сохранения или открытия файла с
помощью выпадающего списка <span class="Interface">Тип файла</span>. В
зависимости от этого, обработка (отчет) будут сохранены или в формате <span class="Interface">.epf</span>/<span class="Interface">.erf</span> или в
формате XML (подробнее см. <a href="#_ref435632356">здесь</a>). Далее в этом разделе не будет отдельно освещаться
выбор формата внешней обработки (отчета).</p>

<a id="TI000000338" class="bookmark" name="issogl4_5.12.2.6.2_копирование_обработки_отчета_во_внешнюю_обработку_отчет"><h5>5.12.2.6.2. Копирование обработки (отчета) во внешнюю обработку (отчет)</h5></a>

<p class="MsoNormalCxSpFirst">Существующий
объект конфигурации типа <span class="Interface">Отчет</span> или <span class="Interface">Обработка</span> может
быть скопирован во внешнюю обработку или отчет. Для этого нужно выделить наименование
объекта конфигурации в окне <span class="Interface">Конфигурация</span> и
в контекстном меню объекта конфигурации выбрать пункт <span class="Interface">Сохранить как внешнюю
обработку, отчет</span>.</p>

<p class="MsoNormalCxSpMiddle">В
результате будет создана внешняя обработка (отчет), которая будет копией выбранного
объекта конфигурации. Сам объект конфигурации при этом не изменится.</p>

<p class="MsoNormalCxSpLast">Выполнение
этой операции целесообразно для последующей отладки создаваемой обработки
(отчета). По окончании отладки внешняя обработка (отчет) может быть вставлена в
конфигурацию взамен существующего объекта конфигурации. Следует помнить, что
для исполнения в режиме 1С:Предприятия, обработку (отчет) следует сохранять в
формате <span class="Interface">.epf</span>/<span class="Interface">.erf</span>, а не в
формате XML-файлов.</p>

<a id="TI000000339" class="bookmark" name="issogl4_5.12.2.6.3_замена_обработки_отчета_на_внешнюю_обработку_отчет"><h5>5.12.2.6.3. Замена обработки (отчета) на внешнюю обработку (отчет)</h5></a>

<p class="MsoNormal">Внешние
обработки (отчеты) могут заменить собой существующий объект конфигурации типа <span class="Interface">Обработка</span> или <span class="Interface">Отчет</span>. Для
замены объекта конфигурации внешней обработкой (отчетом) необходимо выделить
его наименование в окне <span class="Interface">Конфигурация</span> и
использовать пункт <span class="Interface">Заменить на внешнюю
обработку, отчет</span> контекстного меню объекта конфигурации.</p>

<a id="TI000000340" class="bookmark" name="issogl4_5.12.2.6.4_добавление_внешней_обработки_отчета_в_структуру_конфигурации"><h5>5.12.2.6.4. Добавление внешней обработки (отчета) в структуру конфигурации</h5></a>

<p class="MsoNormal">Существующая
внешняя обработка (отчет) может быть вставлена в структуру конфигурации как
новый объект конфигурации типа <span class="Interface">Обработка </span>или <span class="Interface">Отчет</span>. Для
этого необходимо в структуре конфигурации выделить наименование любого объекта
конфигурации типа <span class="Interface">Обработка</span> или <span class="Interface">Отчет</span> и
использовать пункт <span class="Interface">Вставить внешнюю
обработку, отчет</span> контекстного меню объекта конфигурации. В результате
этих действий в дереве конфигурации появится новая обработка (отчет).</p>

<a name="_ref230080100"></a><a id="TI000000341" class="bookmark" name="issogl3_5.12.2.7_сравнение_и_объединение_внешних_обработок_отчетов"><h4>5.12.2.7. Сравнение и объединение внешних обработок (отчетов)</h4></a>

<p class="MsoNormalCxSpFirst">Внешние
обработки (отчеты) можно сравнивать и объединять с обработками (отчетами),
расположенными в конфигурации, а также сравнивать и объединять с другими
внешними обработками (отчетами).</p>

<p class="MsoNormalCxSpLast">Для
сравнения и объединения с отчетом или обработкой конфигурации в окне <span class="Interface">Конфигурация</span> следует
указать нужный объект, в контекстном меню этого объекта выбрать пункт <span class="Interface">Сравнить, объединить с
внешней обработкой, отчетом…</span> В стандартном диалоге выбора файла выбрать
нужную внешнюю обработку (отчет).</p>

<p class="Regularbeforepicture">На
экран выводится окно <span class="Interface">Сравнение и
объединение…</span>. Приемы работы в окне полностью совпадают с приемами работы
при объединении конфигураций (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 29. механизм сравнения и объединения конфигураций.htm?_=1496848987#_ref425412237">здесь</a>).</p>

<p class="Picture"><IMG src="_img/img00158.gif?_=1496848987" WIDTH="676" ALT HEIGHT="459"></p>

<p class="MsoCaption">Рис.
159. Объединение обработок</p>

<p class="MsoNormal">Для
сравнения или объединения внешней обработки (отчета) с другой внешней
обработкой (отчетом) нужно открыть исходную внешнюю обработку (отчет), в окне
редактирования нажать кнопку <span class="Interface">Действия</span> и в
выпадающем меню выбрать пункт <span class="Interface">Сравнить, объединить с
внешней обработкой, отчетом</span>. В стандартном диалоге выбора файла выбрать
нужную внешнюю обработку (отчет). Описание дальнейших действий см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 29. механизм сравнения и объединения конфигураций.htm?_=1496848987#_ref425412237">здесь</a>.</p>

<a name="_ref45029021"></a><a name="_ref45029020"></a><a name="_ref428962132"></a><a name="_ref428962131"></a><a id="TI000000342" class="bookmark" name="issogl1_5.13_планы_видов_характеристик"><h2>5.13. Планы видов характеристик</h2></a>

<a id="TI000001718" class="bookmark" name="issogl2_5.13.1_общее_описание"><h3>5.13.1. Общее описание</h3></a>

<p class="MsoNormalCxSpFirst">При
разработке прикладных решений часто возникают вопросы организации хранения
некоторых свойств прикладных объектов, состав и тип которых заранее (на этапе
разработки прикладного решения) не известен.</p>

<p class="MsoNormalCxSpLast">В
качестве примера таких свойств можно привести:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Для номенклатуры можно указать такие
характеристики, как цвет, размер, габаритные размеры и т. д.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Для контрагента можно указать такие
характеристики как федеральный округ, в котором расположен контрагент, признак
постоянного покупателя и т. д.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Для плана счетов можно указать количество и тип
разрезов аналитического учета (для конкретного счета). Затем для каждой
проводки указываются конкретные значения разрезов аналитического учета. Более
подробно об организации аналитического бухгалтерского учета см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 11. бухгалтерский учет.htm?_=1496848987#_ref428962228">здесь</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>

<p class="MsoNormalCxSpFirst">Список
таких свойств (далее будем называть их <span class="Bold">характеристиками</span>)
во время разработки не определен ни по составу, ни по типу хранимых данных.
Также возможна ситуация, когда перечень таких характеристик достаточно большой
и может быть не востребован каждым пользователем прикладного решения. Следует
отметить, что набор характеристик может различаться для разных групп объектов,
например, для одной группы элементов номенклатуры используются такие характеристики,
как цвет и размер, а для другой – только характеристика, описывающая
габаритные размеры. Также следует отметить, что характеристики могут вводиться
в процессе эксплуатации сами пользователи системы.</p>

<p class="MsoNormalCxSpLast">Можно
предложить два способа решения задачи:</p>

<p class="MsoListBullet">&#9679; 
Для каждой характеристики заводится отдельный
реквизит нужного типа в соответствующем объекте. У этого подхода есть несколько
недостатков:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
Каждая характеристика – это отдельное поле
таблицы базы данных, которое будет занимать место в базе данных вне зависимости
от того, используется характеристика или нет.</p>

<p class="MsoListBullet2CxSpMiddle">&#9679; 
При большом количестве характеристик количество
«лишних» полей будет очень большим, с ними (полями) будет неудобно работать как
разработчику, так и пользователю.</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
При необходимости добавить новую характеристику
придется дорабатывать прикладное решение: добавлять новый реквизит, везде в
прикладном решении учитывать добавленный реквизит. Это трудоемко и неудобно.</p>

<p class="MsoListBullet">&#9679; 
Использовать специальный объект, в котором
описываются характеристики с указанием того, как называется характеристика,
какого она типа и т. д. Эта схема лишена недостатков предыдущей: для
добавления новой характеристики нет необходимости изменять прикладное решение,
не расходуется избыточное место в базе данных. Также имеется возможность самому
пользователю добавлять новые характеристики объектов. Система «1С:Предприятие»
представляет такой объект. Он называется <span class="Bold">план видов
характеристик</span>.</p>

<p class="IndentlistCxSpFirst">Способ
не лишен недостатков. К таковым можно отнести более сложную логику организации
и использования характеристик. Однако, затраты, связанные с усложнением
прикладного решения, будут понесены только один раз – при разработке
решения. По мере увеличения количества (и типов) характеристик, дополнительная
модернизация прикладного решения будет не нужна.</p>

<p class="IndentlistCxSpLast">План
видов характеристик также можно использоваться для организации аналитического
учета в бухгалтерском учете. В этом случае каждый элемент (с уникальным набором
типов) будет являться видом субконто и при редактировании счета в плане счетов
можно указать виды субконто, используемые для конкретного счета. При
формировании проводки, для заполнения будет использоваться состав субконто
(соответствующего типа), какой был задан при редактировании плана счетов.
Подробнее об использовании плана видов характеристик для организации аналитического
учета см. <a href="#_ref271024987">здесь</a> и см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 11. бухгалтерский учет.htm?_=1496848987#_ref428962248">здесь</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>

<a name="_ref271024977"></a><a id="TI000001719" class="bookmark" name="issogl2_5.13.2_характеристики_объектов_конфигурации"><h3>5.13.2. Характеристики объектов конфигурации</h3></a>

<a id="TI000001818" class="bookmark" name="issogl3_5.13.2.1_общая_информация"><h4>5.13.2.1. Общая информация</h4></a>

<p class="Regularbeforepicture">План видов характеристик является
центральным элементом механизма характеристик:</p>

<p class="Picture"><IMG src="_img/img00159.gif?_=1496848987" WIDTH="800" ALT HEIGHT="726"></p>

<p class="MsoCaption"><a name="_ref272316860">Рис. </a>160. Общая схема работы с характеристиками</p>

<p class="MsoNormal">План видов характеристик (см. <a href="#_ref272316860">рис.
160</a>) хранит набор типов, которые могут быть указаны для
элементов плана видов характеристик (<span class="Bold">видов характеристик</span>) –
поле <span class="Interface">Тип значения характеристик</span>. Также план видов
характеристик содержит информацию о возможности создания характеристик, для описания
значений которых в информационной базе отсутствуют необходимые объекты. Для
этого используется поле <span class="Interface">Дополнительные значения характеристик</span> и указание нужного
типа в списке <span class="Interface">Тип значения характеристик</span>.</p>

<p class="Regularbeforepicture">При создании вида характеристики (элемента
плана видов характеристик) можно указать, каким набором типов будут ограничены
значения этого вида характеристик. При этом набор типов, заданный для плана
видов характеристик в целом, можно ограничить для конкретного вида
характеристики, но нельзя расширить.</p>

<p class="Picture"><IMG src="_img/img00160.gif?_=1496848987" WIDTH="570" ALT HEIGHT="381"></p>

<p class="MsoCaption">Рис. 161. Задание типа
характеристики</p>

<p class="MsoNormal">Для тех объектов метаданных, для которых
планируется вести учет характеристик, с помощью диалога <span class="Interface">Дополнительные характеристики объекта метаданных</span>
(см. <a href="#_ref272316860">рис.
160</a>), указываются правила отбора видов характеристик и
правила получения <span class="Bold">значений характеристик</span> для конкретных
объектов данных. Фактически, указываются следующие правила:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Как получить виды характеристик для конкретного
объекта данных – правила отбора. По указанным правилам система формирует
запрос, выполняющий получение списка видов характеристик. Этот запрос
формируется с использованием ключевого слова <span class="Term">РАЗРЕШЕННЫЕ</span>.
В результате, в список попадут только те виды характеристик, на которые у
пользователя есть права, которые определяются наложенными на таблицу со списком
характеристик ограничениями доступа к данным (см. <a href="#_ref428962295">здесь</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>).</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Как получить значение характеристики, зная
объект данных и вид характеристики – правила получения значений. По указанным
правилам система формирует запрос, который выполняет получение значений
характеристик. Данный запрос не является самостоятельным, а формирует таблицу,
которая соединяется с основным запросом, который получает прикладные данные. Поэтому
использование или не использование ключевого слова <span class="Term">РАЗРЕШЕННЫЕ</span>
определяется основным запросом.</p>

<p class="MsoNormal">В свойствах реквизитов объектов,
используемых в механизме работы с характеристиками, требуется указание
некоторых свойств метаданных, необходимых системе для автоматической подготовки
данных при работе пользователя.</p>

<p class="Regularbeforepicture">После того, как завершены все настройки и
сформирован список видов характеристик (в виде предопределенных элементов плана
видов характеристик в режиме Конфигуратора или в виде значений, введенных в
режиме «1С:Предприятия») можно редактировать значения характеристик для
конкретного объекта данных.</p>

<p class="Picture"><IMG src="_img/img00161.gif?_=1496848987" WIDTH="774" ALT HEIGHT="344"></p>

<p class="MsoCaption"><a name="_ref303779223">Рис. </a>162. Редактирование значения характеристики</p>

<p class="MsoNormal">Если на форме есть поля, отвечающие за
объект данных, вид характеристики и значение характеристики, то процесс
редактирование выглядит следующим образом:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Пользователь выбирает объект данных (поле <span class="Interface">Объект</span>, <a href="#_ref303779223">рис.
162</a>), для которого необходимо редактировать список
характеристик. Например, элемент какого-либо справочника.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Для этого объекта система формирует список
доступных видов характеристик. При формировании этого списка используются
правила отбора видов характеристик, указанные для объекта метаданных.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
На основании информации из плана видов
характеристик, система определяет состав типов редактируемого значения, и выполняет
настройку элементов формы (связи параметров выбора, связь по типу и т. д.).</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Теперь пользователь может выбирать необходимые
виды характеристик (поле <span class="Interface">Вид характеристики</span>, <a href="#_ref303779223">рис.
162</a>) и задавать для них значения характеристик (поле <span class="Interface">Значение характеристики</span>, <a href="#_ref303779223">рис. 162</a>).</p>

<p class="MsoNormalCxSpFirst">При использовании характеристик в отчетах
(см. <a href="#_ref302575031">здесь</a>) и динамических списках (см. <a href="#_ref441855168">здесь</a>) используется похожая схема работы.</p>

<p class="MsoNormalCxSpLast">В некоторых случаях для реализации механизма
характеристик (примеры такой реализации приведены далее) может потребоваться
сокращенный набор объектов. Однако использование плана видов характеристик
требуется при любом наборе используемых объектов.</p>

<a id="TI000001720" class="bookmark" name="issogl3_5.13.2.2_редактирование_плана_видов_характеристик"><h4>5.13.2.2. Редактирование плана видов характеристик</h4></a>

<p class="MsoNormal">По
своему устройству план видов характеристик похож на справочник
(см. <a href="#_ref428962320">здесь</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>). План видов характеристик может быть иерархическим, содержать
предопределенные элементы (см. <a href="#_ref416868913">здесь</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>), обладать реквизитами и табличными частями и т. д.
Ключевым отличием плана видов характеристик от справочника является свойство <span class="Interface">Тип значения характеристик</span>.
Данное свойство описывает перечень типов, которые в дальнейшем могут быть
указаны в качестве типа (одного или нескольких) значения конкретного вида
характеристики. Возможность такого выбора типа(-ов) не требует изменения
структуры и программного кода прикладного решения. Также следует отметить, что
для задания типа реквизита, хранящего значение характеристики, связанной с конкретным
планом видов характеристик, служит специальный тип <span class="Term">Характеристика.&lt;ИмяПланаВидовХарактеристик&gt;</span>.
Реквизит, для которого указан такой тип, не может быть составного типа.</p>

<p class="Regularbeforepicture">Если
в состав свойства <span class="Interface">Тип значения
характеристик</span> входят типы <span class="Term">Число</span>, <span class="Term">Дата</span>, <span class="Term">СправочникСсылка.Номенклатура</span> и <span class="Term">СправочникСсылка.Контрагенты</span>, то появляется
возможность создать вид характеристики <span class="Term">Размер</span> с типом <span class="Term">Число</span> или вид характеристики <span class="Term">Поставщик</span> с типом <span class="Term">СправочникСсылка.Контрагенты</span>. Однако нельзя
создать вид характеристики с типом <span class="Term">Булево</span>, т. к. этот тип не входит в
состав свойства <span class="Interface">Тип значения
характеристик</span>. В связи с этим следует тщательно подходить к выбору
набора типов при создании плана видов характеристик.</p>

<p class="Picture"><IMG src="_img/img00162.gif?_=1496848987" WIDTH="480" ALT HEIGHT="485"></p>

<p class="MsoCaption">Рис.
163. Свойство «Тип значения характеристик»</p>

<p class="MsoNormal">При
выборе в свойстве <span class="Interface">Тип значения характеристик</span>
примитивных типов <span class="Term">Число</span>, <span class="Term">Строка</span> или <span class="Term">Дата</span>, в диалоге редактирования типа данных
следует указать размерность или состав типа с таким расчетом, чтобы данное
описание охватывало все возможные значения. Так, если не указать дробную часть
у числового типа, то будет невозможно ввести дробное число.</p>

<p class="Note"><span class="Note">Внимание!</span> Изменение в описании списка типов, используемых
видов характеристик, после ввода пользовательских значений, может привести к
потере значений, введенных пользователем. Например, если из списка типов
исключить какой-либо тип, то значения характеристик, связанных с исключенным
типом, будут очищены. Если исключенный тип был единственным типом для вида
характеристик, то новым типом этого вида характеристик станут все типы,
указанные в свойстве <span class="Interface">Тип значения характеристик</span>.</p>

<p class="MsoNormal">Создание
плана видов характеристик не является единственным шагом при реализации
механизма учета характеристик для объектов метаданных. В зависимости от
поставленной задачи, необходимо создавать дополнительные объекты метаданных и
особым образом их настраивать. Далее будут рассмотрены несколько примеров
реализации механизма характеристик.</p>

<a id="TI000001721" class="bookmark" name="issogl3_5.13.2.3_примеры_реализации_механизма_характеристик"><h4>5.13.2.3. Примеры реализации механизма характеристик</h4></a>

<p class="MsoListNumberCxSpFirst">1.  Самый
простой пример механизма учета характеристик. Для каждого объекта метаданных
создается свой план видов характеристик и регистр сведений, который хранит
значения характеристик. Подробнее см. <a href="#_ref294166863">здесь</a>.</p>

<p class="MsoListNumberCxSpMiddle">2. 
В данном примере рассматривается случай, когда
необходимо создавать виды характеристик таких типов, которые не описаны в
прикладном решении. При этом сохраняются все возможности предыдущего примера.
Подробнее см. <a href="#_ref294166906">здесь</a>.</p>

<p class="MsoListNumberCxSpMiddle">3. 
Этот пример следует использовать при
необходимости использовать один план видов характеристик для описания видов
характеристик всех необходимых объектов метаданных, а для хранения значений
характеристик использовать один регистр сведений. Подробнее см. <a href="#_ref294166913">здесь</a>.</p>

<p class="MsoListNumberCxSpMiddle">4. 
Такой пример следует использовать в тех случаях,
когда необходимо использовать один и тот же вид характеристик для различных
объектов метаданных (наборы характеристик). При этом значения характеристик
хранятся в регистре сведений. Подробнее см. <a href="#_ref294267692">здесь</a>.</p>

<p class="MsoListNumberCxSpLast">5. 
Если доступ к характеристикам и их значениям
должен ограничиваться с помощью механизма ограничения доступа к данным, наложенным
на сам объект, то можно воспользоваться этим примером реализации механизма.
Подробнее см. <a href="#_ref294167069">здесь</a>.</p>

<p class="NoteCxSpFirst"><span class="Note">Примечание 1. </span>Примеры, приведенные в данном разделе,
не являются законченным. Они предназначены для демонстрации различных
механизмов работы с характеристиками.</p>

<p class="NoteCxSpLast"><span class="Note">Примечание 2.</span> Приведенный выше список примеров учета
характеристик не является исчерпывающим. Он призван только продемонстрировать
основные примеры такого учета.</p>

<a name="_ref294166863"></a><a id="TI000001722" class="bookmark" name="issogl4_5.13.2.3.1_пример_1"><h5>5.13.2.3.1. Пример 1</h5></a>

<p class="Lang-parameter">Задача</p>

<p class="MsoNormal">Виды
характеристик хранятся в плане видов характеристик и при этом один план видов
характеристик «обслуживает» один объект метаданных. Т.е. для справочника <span class="Term">Номенклатура</span> создается план видов характеристик
<span class="Term">ХарактеристикиНоменклатуры</span>, для справочника <span class="Term">Контрагенты</span> – <span class="Term">ХарактеристикиКонтрагентов</span> и т. д.
Сами значения характеристик для конкретных объектов будут храниться в регистрах
сведений. Каждый регистр сведений будет хранить информацию о данных, видах
характеристик и значениях характеристик одной пары «объект метаданных –
план видов характеристик». Для простоты будет рассматриваться один объект
метаданных, один план видов характеристик и один регистр сведений.</p>

<p class="Lang-parameter">Реализация</p>

<p class="Regularbeforepicture">В
регистре сведений, предназначенном для хранения значений характеристик, следует
создать два измерения и один ресурс. Измерения будут отвечать за объект, для
которого хранится значение характеристики, и вид характеристики, а ресурс будет
хранить само значение характеристики.</p>

<p class="Picture"><IMG src="_img/img00163.gif?_=1496848987" WIDTH="274" ALT HEIGHT="165"></p>

<p class="MsoCaption">Рис.
164. Регистр сведений «ЗначенияХарактеристикНоменклатуры»</p>

<p class="MsoNormal">Рассмотрим
регистр (с именем <span class="Term">ЗначенияХарактеристикНоменклатуры</span>) более
подробно:</p>

<p class="MsoListBullet">&#9679; 
<span class="Term">Объект</span> – измерение. Содержит ссылку на
объект метаданных, для которого хранится значение характеристики. Измерение будет
иметь тип того объекта метаданных, для которого будут храниться характеристики.
В рассматриваемом примере это будет тип <span class="Term">СправочникСсылка.Номенклатура</span>.</p>

<p class="Indentlist">Для
измерения следует установить свойство <span class="Term">Ведущее</span>, что позволит автоматически удалять
значения характеристик объекта при его (объекта) удалении и позволит открывать
список характеристик непосредственно из формы объекта (соответствующая ссылка в
панели навигации формы).</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Term">ВидХарактеристики</span> – измерение. Содержит
ссылку на вид характеристики (в качестве типа значения необходимо указать <span class="Term">ПланВидовХарактеристикСсылка.ХарактеристикиНоменклатуры</span>).
В данное измерение будут попадать значения из плана видов характеристик.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Term">ЗначениеХарактеристики</span> – ресурс. Хранит
значение одного из типов, выбранных в качестве <span class="Bold">типа значения</span>
вида <span class="Bold">характеристики</span>, указанной в измерении <span class="Term">ВидХарактеристики</span>. Типом значения ресурса
будет <span class="Term">Характеристика. ХарактеристикиНоменклатуры</span>.
Невозможно указать для данного ресурса составной тип, состоящий из нескольких типов
<span class="Term">Характеристика</span>. Именно поэтому для хранения
значений характеристик (в рамках рассматриваемого примера) нужно использовать
несколько регистров сведений (по одному на каждую пару «объект
метаданных – план видов характеристик»).</p>

<p class="Indentlist">Для
ресурса необходимо в свойство <span class="Interface">Связи параметров выбора</span>
(см. <a href="#_ref397525399">здесь</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>) добавить параметр с именем <span class="Term">Отбор.Владелец</span>, связанный с измерением <span class="Term">ВидХарактеристики</span> и с режимом использования <span class="Term">Очищать</span>. Такая настройка при редактировании в
форме обеспечит очистку значения характеристики при смене вида характеристики.</p>

<p class="Picture"><IMG src="_img/img00164.gif?_=1496848987" WIDTH="573" ALT HEIGHT="207"></p>

<p class="MsoCaption">Рис.
165. Настройки ресурса «Значение»</p>

<p class="Indentlist">Также
следует заполнить свойство ресурса <span class="Interface">Связь по типу</span>.
В это свойство следует указать измерение <span class="Term">ВидХарактеристики</span>. После указания связи начнет
действовать одна из особенностей объекта <span class="Interface">План видов характеристик</span>:
в зависимости от того, какой вид характеристики указан в измерении <span class="Term">ВидХарактеристики</span>, система будет автоматически
изменять перечень доступных типов для ресурса <span class="Term">ЗначениеХарактеристики</span>.</p>

<p class="Regularbeforepicture">Следующим
шагом следует указать системе, как связаны объект, для которого будут
учитываться характеристики, план видов характеристик и регистр сведений,
который хранит значения характеристик объектов. Это следует сделать с помощью
окна <span class="Interface">Дополнительные характеристики
объекта метаданных</span>, вызвать которое можно из контекстного меню объекта
метаданных (пункт <span class="Interface">Характеристики</span>).</p>

<p class="Picture"><IMG src="_img/img00165.gif?_=1496848987" WIDTH="693" ALT HEIGHT="205"></p>

<p class="MsoCaption">Рис.
166. Описание характеристик справочника «Номенклатура»</p>

<p class="MsoNormal">В
данном окне описывается, какой объект и каким образом обеспечивает виды
характеристик (левая часть окна) и где хранятся значения характеристик (правая
часть окна). В рассматриваемом примере:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Виды характеристик находятся в плане видов
характеристик <span class="Term">ХарактеристикиНоменклатуры</span> (поле <span class="Interface">Виды характеристик</span>).</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Вид характеристики и ее представление будет
получено из элемента плана видов характеристик. Стандартный реквизит плана
видов характеристик <span class="Term">Ссылка</span> будет выступать в качестве ключевого
поля (свойство <span class="Interface">Поле ключа</span>) для
поиска необходимого элемента плана видов характеристик.</p>

<p class="Regularbeforepicture">Описание
хранения будет использовано системой в тех случаях, когда необходимо получить
перечень значений характеристик для какого-либо объекта метаданных.</p>

<p class="Picture"><IMG src="_img/img00166.gif?_=1496848987" WIDTH="695" ALT HEIGHT="381"></p>

<p class="MsoCaption">Рис.
167. Значения характеристик</p>

<p class="MsoNormal">Например,
для получения списка значений отбора в динамическом списке. В данном примере
описана следующая схема хранения значений характеристик:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Для хранения используется регистр сведений <span class="Term">ХарактеристикиНоменклатуры</span> (свойство <span class="Interface">Значения характеристик</span>).</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Для хранения ссылки на объект, для которого
задаются значения характеристик, используется измерение <span class="Term">Объект</span> (типа <span class="Term">СправочникСсылка.Номенклатура</span>). Это
указывается в свойстве <span class="Interface">Поле объекта</span>.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Для хранения ссылки на характеристику объекта
используется измерение <span class="Term">ВидХарактеристики</span> (свойство <span class="Interface">Поле вида</span>).</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Значение характеристики хранится в ресурсе <span class="Term">ЗначениеХарактеристики</span> (свойство <span class="Interface">Поле значения</span>).</p>

<p class="MsoNormal">В
общем случае, в качестве объекта для хранения значений характеристик может
служить любой объект, в котором существуют реквизиты необходимых типов, а
именно:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Реквизит типа того объекта, для которого
хранится значение характеристики – поле объекта.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Реквизит типа плана видов характеристик, который
хранит собственно характеристику – поле вида.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Реквизит типа значения характеристики
(собственно значение характеристики) – поле значения.</p>

<p class="MsoNormal">При
редактировании поля диалога <span class="Interface">Значения характеристик</span>
система предоставит выбор только из тех объектов, которые удовлетворяют выше
описанным требованиям (при этом должно быть обязательно заполнено поле <span class="Interface">Виды характеристик</span>
в этой строке, где выполняется редактирование). Редактирование характеристик
доступно для следующих объектов метаданных:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Справочники,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Документы,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Перечисления,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Планы видов характеристик,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Планы счетов,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Планы видов расчета,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Планы обмена,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Бизнес-процессы,</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Задачи.</p>

<p class="Lang-parameter">Результат</p>

<p class="MsoNormal">Реализация
данного примера позволит:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
В плане видов характеристик создавать виды
характеристик, которые необходимы для элементов «своего» объекта метаданных.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Для каждого элемента справочника <span class="Term">Номенклатура</span> указывать собственный набор
характеристик и указывать для каждого вида характеристик необходимое значение
характеристики.</p>

<a name="_ref294166906"></a><a id="TI000001723" class="bookmark" name="issogl4_5.13.2.3.2_пример_2"><h5>5.13.2.3.2. Пример 2</h5></a>

<p class="Lang-parameter">Задача</p>

<p class="MsoNormalCxSpFirst">Рассмотрим
ситуацию, когда пользователю необходимо добавить характеристику, для которой в
прикладном решении нет подходящего типа. Например, для номенклатуры необходимо
учитывать цвет, а такой справочник в прикладном решении отсутствует.</p>

<p class="MsoNormalCxSpLast">Для
реализации такой задачи необходимо создать специальный справочник, который
будет являться хранилищем дополнительных значений характеристик. Этот
справочник будет являться подчиненным для плана видов характеристик. Затем надо
будет указать этот справочник в специальном свойстве плана видов
характеристик – <span class="Interface">Дополнительные
значения характеристик</span>. Также этот справочник нужно будет указать в
качестве одного из возможных типов свойства <span class="Interface">Тип значения
характеристик</span>.</p>

<p class="Lang-parameter">Реализация</p>

<p class="MsoNormal">Создадим
справочник, который будет хранить дополнительные значения характеристик (он
будет называться <span class="Term">ЗначенияХарактеристик</span>). Все остальные объекты
прикладного решения будут эквивалентны объектам из примера 1
(см. <a href="#_ref294166863">здесь</a>). Затем следует выполнить следующие действия с данным
справочником:</p>

<p class="MsoListBullet">&#9679; 
Указать для справочника <span class="Term">ЗначенияХарактеристик</span> план видов характеристик
в качестве владельца. В результате для каждого вида характеристики будет
доступен тот набор значений, который указан именно для этого вида
характеристики.</p>

<p class="Picture"><IMG src="_img/img00167.gif?_=1496848987" WIDTH="494" ALT HEIGHT="208"></p>

<p class="MsoCaption">Рис.
168. Владелец справочника «ЗначенияХарактеристик»</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Указать справочник <span class="Term">ЗначенияХарактеристик</span> в качестве одного из
значений составного типа для свойства <span class="Interface">Тип значений
характеристик</span> плана видов характеристик <span class="Term">ХарактеристикиНоменклатуры</span>.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Выбрать справочник <span class="Term">ЗначенияХарактеристик</span> в качестве значения
свойства <span class="Interface">Дополнительные
значения характеристик</span> плана видов характеристик.</p>

<p class="PictureCxSpFirst"><IMG src="_img/img00168.gif?_=1496848987" WIDTH="689" ALT HEIGHT="425"></p>

<p class="PictureCxSpLast"> </p>

<p class="MsoCaption">Рис.
169. Свойство «Дополнительные значения характеристик»</p>

<p class="MsoNormal">Настройки,
которые были выполнены в окне <span class="Interface">Дополнительные характеристики
объекта метаданных</span> для справочника <span class="Term">Номенклатура</span>, не изменяются.</p>

<p class="Lang-parameter">Результат</p>

<p class="MsoNormal">Реализация
данного примера позволит:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Создавать виды характеристик, для хранения
значений (дополнительных значений характеристик) которых в прикладном решении
нет подходящих типов.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Указывать в качестве значений характеристик
дополнительные значения характеристик.</p>

<a name="_ref294166913"></a><a id="TI000001724" class="bookmark" name="issogl4_5.13.2.3.3_пример_3"><h5>5.13.2.3.3. Пример 3</h5></a>

<p class="Lang-parameter">Задача</p>

<p class="MsoNormal">Этот
пример можно рассмотреть при необходимости использовать для описания видов
характеристик всех объектов метаданных один план видов характеристик, а для
хранения значений характеристик использовать один регистр сведений. Разделение
видов характеристик между объектами метаданных будет выполняться с помощью
реквизита плана видов характеристик. Значение этого реквизита будет определять
«принадлежность» конкретному объекту (реквизит содержит значение) или всем
объектам метаданных (реквизит не задан).</p>

<p class="Lang-parameter">Реализация</p>

<p class="MsoNormal">Необходимо
создать план видов характеристик (с именем <span class="Term">ХарактеристикиОбъектов</span>). У созданного объекта
следует создать реквизит <span class="Term">ТипВидаХарактеристики</span> типа <span class="Term">Перечисление.ВидыОбъектов</span>. Состав перечисления
будет определять те объекты метаданных, для которых будут храниться виды
характеристик.</p>

<p class="Note"><span class="Note">Примечание.</span> Для ускорения отборов нужных видов
характеристик, желательно для реквизита <span class="Term">ТипВидаХарактеристики</span> установить свойство <span class="Interface">Индексировать</span> в
значение <span class="Interface">Индексировать с доп.
упорядочиванием</span>.</p>

<p class="MsoNormalCxSpFirst">Для
хранения значений реквизитов следует создать регистр сведений с именем <span class="Term">ЗначенияХарактеристикОбъектов</span>, при этом его
состав и настройки следует взять из примера 1 (регистр <span class="Term">ЗначенияХарактеристикНоменклатуры</span>,
см. <a href="#_ref294166863">здесь</a>). Отличие от примера 1 заключается в том, что тип
измерения <span class="Term">Объект</span> будет составного типа и в состав типов
должны входить все ссылочные типы, для которых планируется вести учет
характеристик.</p>

<p class="MsoNormalCxSpLast">Аналогично
примеру 2 следует создать справочник для учета дополнительных значений
характеристик (см. <a href="#_ref294166906">здесь</a>).</p>

<p class="Regularbeforepicture">В
результате должна получиться следующая структура объектов метаданных:</p>

<p class="Picture"><IMG src="_img/img00169.gif?_=1496848987" WIDTH="325" ALT HEIGHT="483"></p>

<p class="MsoCaption">Рис.
170. Структура конфигурации</p>

<p class="Regularbeforepicture">В
данном примере предполагается, что характеристики буду учитываться только для
справочников <span class="Term">Номенклатура</span> и <span class="Term">Контрагенты</span>.</p>

<p class="Picture"><a name="_ref294166918"></a><IMG src="_img/img00170.gif?_=1496848987" WIDTH="564" ALT HEIGHT="205"></p>

<p class="MsoCaption">Рис. 171. Задание
принадлежности характеристики</p>

<p class="MsoNormal">Теперь следует «объяснить» системе, как
выполнять отбор видов характеристик для того или иного объекта метаданных (это
необходимо проделать для каждого объекта, обладающего характеристиками):</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
В каком объекте расположен список характеристик.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
По какому ключевому полю будет происходить
получение конкретной характеристики для определения типа значения (вида характеристики)
и представления характеристики.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
По какому реквизиту характеристики (и с каким
значением отбора) будет определяться список характеристик, связанных с конкретным
объектом метаданных.</p>

<p class="Regularbeforepicture">Далее приведен пример указания правила
отбора характеристик для справочника <span class="Term">Номенклатура</span>.</p>

<p class="Picture"><IMG src="_img/img00171.gif?_=1496848987" WIDTH="698" ALT HEIGHT="379"></p>

<p class="MsoCaption">Рис. 172. Привязка
характеристик к объекту метаданных</p>

<p class="MsoNormal">Настройка, выполняемая в окне <span class="Interface">Дополнительные характеристики объекта метаданных</span>
аналогична рассмотренной в примере 1 (см. <a href="#_ref294166863">здесь</a>). Дополнительно указываются значения двух полей:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
В свойстве <span class="Interface">Поле отбора видов</span> указывается, какой реквизит плана
видов характеристик, является ключевым полем, по которому буду отбираться виды
характеристик для того или иного объекта метаданных. В данном примере это
реквизит <span class="Term">ТипВидаХарактеристики</span>
плана видов характеристик.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Свойство <span class="Interface">Значение отбора видов</span> содержит значение, которое должно
содержаться в реквизите, указанном в свойстве <span class="Interface">Поле отбора видов</span>, чтобы элемент плана видов
характеристик (указанный в свойстве <span class="Interface">Виды характеристик</span>) считался «подходящим» для нужного
объекта метаданных. В данном примере настройка выполняется для справочника <span class="Term">Номенклатура</span>,
поэтому в свойство <span class="Interface">Значение отбора видов</span> выбрано значение перечисления <span class="Term">ВидыОбъектов.Номенклатура</span>.</p>

<p class="Regularbeforepicture">Если в прикладном решении существуют виды
характеристик, которые могут использовать со всеми объектами, для которых ведется
учет характеристик, то систему можно настроить таким образом, чтобы в списки
характеристик выводились и виды характеристик, «принадлежащие» объекту
метаданных и «общие» виды характеристик. Для этого необходимо добавить в окно настройки
характеристик еще одну строку:</p>

<p class="Picture"><IMG src="_img/img00172.gif?_=1496848987" WIDTH="746" ALT HEIGHT="229"></p>

<p class="MsoCaption">Рис. 173. Отбор «свободных»
характеристик</p>

<p class="MsoNormal">При этом «общими» будут считаться те виды
характеристик, в которых значение реквизита <span class="Term">ТипВидаХарактеристики</span>
не заполнено. Хранение значений характеристик описывается аналогично примеру 1
(см. <a href="#_ref294166863">здесь</a>).</p>

<p class="Lang-parameter">Расширение</p>

<p class="MsoNormal">Если в рассматриваемом примере потребуется
реализовать поддержку характеристик для нового объекта метаданных, то необходимо
выполнить следующие действия:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
В перечисление <span class="Term">ВидыОбъектов</span>
добавить нужное значение.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
В список типов измерения <span class="Term">Объект</span>
регистра <span class="Term">ЗначенияХарактеристикОбъектов</span>
добавить тип, соответствующий объекту метаданных, для которого добавляется учет
характеристик.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Для объекта заполняются свойства в окне <span class="Interface">Дополнительные характеристики объекта метаданных</span>, по
аналогии с вышеописанными примерами.</p>

<p class="Lang-parameter">Результат</p>

<p class="MsoNormal">Реализация данного примера позволит:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Использовать для хранения видов характеристик
всех объектов один план видов характеристик.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Разделять виды характеристик на «принадлежащие»
конкретным объектам и общие для всех объектов.</p>

<a name="_ref294267692"></a><a id="TI000001725" class="bookmark" name="issogl4_5.13.2.3.4_пример_4"><h5>5.13.2.3.4. Пример 4</h5></a>

<p class="Lang-parameter">Задача</p>

<p class="MsoNormalCxSpFirst">Данный пример можно использовать в тех
случаях, когда один вид характеристики необходимо использовать для нескольких
объектов метаданных. Например, вид характеристики <span class="Interface">Срок поставки</span> может использоваться и для контрагента
(например, он будет означать срок поставки товаров данным контрагентом) и для
товара (в этом случае он будет означать, например, срок поставки данного
товара). Реализация данной задачи с помощью предыдущего примера
(см. <a href="#_ref294166913">здесь</a>) потребует создания нескольких видов характеристик,
«привязанных» к конкретным объектам метаданных и имеющих одинаковые имена (для
упрощения идентификации).</p>

<p class="MsoNormalCxSpLast">Схема, удовлетворяющая вышеописанным
требованиям, выглядит следующим образом:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
План видов характеристик хранит список видов
характеристик.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
В предопределенных данных специального объекта
(справочника) хранятся наборы характеристик – т. е. перечень
характеристик, которые могут быть заданы объектам метаданных, для которых
выбрана возможность указания характеристик. Список доступных характеристик
задается в режиме «1С:Предприятие», а не в конфигураторе.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Значения характеристик хранятся в регистре
сведений.</p>

<p class="Lang-parameter">Реализация</p>

<p class="Regularbeforepicture">Рассмотрим эту схему более подробно на
примере справочника <span class="Term">Номенклатура</span>.
План видов характеристик аналогичен предыдущим примерам. Для хранения
допустимых наборов характеристик нужно создать специальный справочник (с именем
<span class="Term">НаборыХарактеристик</span>).
В этом справочнике нужно создать табличную часть <span class="Term">СоставНабора</span>,
в которой создать единственный реквизит <span class="Term">ВидХарактеристики</span>
(типа ссылка на план видов характеристик <span class="Term">ПланВидовХарактеристикСсылка.ХарактеристикиОбъектов</span>),
а так же предопределенные элементы в количестве, совпадающем с количеством
объектов метаданных, для которых следует учитывать характеристики. В
рассматриваемом случае в этом справочнике следует завести один элемент для
справочника <span class="Term">Номенклатура</span>.</p>

<p class="Picture"><IMG src="_img/img00173.gif?_=1496848987" WIDTH="228" ALT HEIGHT="152"></p>

<p class="MsoCaption">Рис. 174. Хранение списка характеристик
в табличной части справочника</p>

<p class="MsoNormal">Регистр сведений, в котором хранятся
значения характеристик для объектов, аналогичен регистру, предложенному в
примере 3 (см. <a href="#_ref294166913">здесь</a>).</p>

<p class="Regularbeforepicture">Следующим шагом необходимо настроить связь
между объектом метаданных, объектом, хранящим список характеристик и объектом,
хранящим значения выбранных характеристик:</p>

<p class="Picture"><IMG src="_img/img00174.gif?_=1496848987" WIDTH="752" ALT HEIGHT="187"></p>

<p class="MsoCaption">Рис. 175. Интерактивная
настройка характеристик</p>

<p class="MsoNormal">В результате получается следующая схема:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Представление и типы значений характеристики
получаются с помощью косвенной адресации. Для этого используется свойство <span class="Interface">Поле ключа</span> окна настройки характеристик.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Для получения списка доступных характеристик
(для справочника <span class="Term">Номенклатура</span>)
используется предопределенный элемент <span class="Term">Номенклатура</span>
справочника <span class="Term">НаборыХарактеристик</span>.
Для этого в свойстве <span class="Interface">Поле отбора видов</span> указано, что нужный элемент из
справочника <span class="Term">НаборыХарактеристик</span>
будет отбираться по ключевому полю <span class="Term">Ссылка</span>.
Значением отбора (свойство <span class="Interface">Значение отбора видов</span>) является ссылка на
предопределенный элемент.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Хранение значений характеристик не отличается от
ранее рассмотренных примеров.</p>

<p class="Picture"><IMG src="_img/img00175.gif?_=1496848987" WIDTH="752" ALT HEIGHT="355"></p>

<p class="MsoCaption">Рис. 176. Косвенная адресация
плана видов характеристик</p>

<p class="MsoNormalCxSpFirst">Рассматриваемая схема хранения списка
характеристик не обеспечивает автоматического формирования списка выбора характеристик
при добавлении в объект новой характеристики (из перечня доступных). Для
формирования такого списка следует особым образом сформировать форму выбора
объекта метаданных план видов характеристик.</p>

<p class="MsoNormalCxSpLast">Для этого, с помощью конструктора,
необходимо создать форму выбора объекта метаданных план видов характеристик. В
созданной форме следует установить флажок <span class="Interface">Произвольный запрос</span> для основного реквизита формы
(реквизит <span class="Term">Список</span>
типа <span class="Term">ДинамическийСписок</span>)
и задать следующий запрос в качестве источника динамического списка:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_res">
ВЫБРАТЬ
    ПланВидовХарактеристик.Ссылка,
    ПланВидовХарактеристик.Код,
    ПланВидовХарактеристик.Наименование,
    ПланВидовХарактеристик.ТипЗначения
ИЗ
    ПланВидовХарактеристик.ХарактеристикиОбъектов КАК ПланВидовХарактеристик
        {ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НаборыХарактеристик.СоставНабора КАК СоставНабора
        ПО ПланВидовХарактеристик.Ссылка = СписокХарактеристик.ВидХарактеристики}
{ГДЕ
    СписокХарактеристик.Ссылка.* КАК НаборХарактеристик}
</pre>

<p class="Regularbeforepicture">Также следует указать в качестве основной
таблицы динамического списка <span class="Term">ПланВидовХарактеристик.ХарактеристикиОбъектов</span>
и установить флажок <span class="Interface">Динамическое считывание данных</span>.</p>

<p class="Picture"><IMG src="_img/img00176.gif?_=1496848987" WIDTH="600" ALT HEIGHT="551"></p>

<p class="MsoCaption">Рис. 177. Форма выбора плана
видов характеристик</p>

<p class="MsoNormal">В модуле формы необходимо определить
обработчик события <span class="Term">ПриСозданииНаСервере</span>:</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev"><span class="preprocessor">&amp;НаСервере</span>
<span class="keyword">Процедура</span> ПриСозданииНаСервере<span class="operator">(</span>Отказ<span class="operator">,</span> СтандартнаяОбработка<span class="operator">)</span>
    Предопределенные <span class="operator">=</span> <span class="keyword">Новый</span> Соответствие<span class="operator">;</span>
    Предопределенные<span class="operator">.</span>Вставить<span class="operator">(</span>Тип<span class="operator">(</span><span class="string">&quot;СправочникСсылка.Номенклатура&quot;</span><span class="operator">)</span><span class="operator">,</span> Справочники<span class="operator">.</span>НаборыХарактеристик<span class="operator">.</span>Номенклатура<span class="operator">)</span><span class="operator">;</span>
    <span class="keyword">Если</span> <span class="keyword">НЕ</span> Параметры<span class="operator">.</span>Свойство<span class="operator">(</span><span class="string">&quot;ОбъектОтбораВидовХарактеристик&quot;</span><span class="operator">)</span> <span class="keyword">Тогда</span>
        <span class="keyword">Возврат</span><span class="operator">;</span>
    <span class="keyword">Иначе</span>
        ОбъектОтбора <span class="operator">=</span> Параметры<span class="operator">.</span>ОбъектОтбораВидовХарактеристик<span class="operator">;</span>
        ТипОбъектаОтбора <span class="operator">=</span> ТипЗнч<span class="operator">(</span>ОбъектОтбора<span class="operator">)</span><span class="operator">;</span>
        <span class="keyword">Если</span> Предопределенные<span class="operator">.</span>Получить<span class="operator">(</span>ТипОбъектаОтбора<span class="operator">)</span> <span class="operator">&lt;</span><span class="operator">&gt;</span> <span class="keyword">Неопределено</span> <span class="keyword">Тогда</span>
            НовыйЭлемент <span class="operator">=</span> Список<span class="operator">.</span>Отбор<span class="operator">.</span>Элементы<span class="operator">.</span>Добавить<span class="operator">(</span>Тип<span class="operator">(</span><span class="string">&quot;ЭлементОтбораКомпоновкиДанных&quot;</span><span class="operator">)</span><span class="operator">)</span><span class="operator">;</span>
            НовыйЭлемент<span class="operator">.</span>ЛевоеЗначение <span class="operator">=</span> <span class="keyword">Новый</span> ПолеКомпоновкиДанных<span class="operator">(</span><span class="string">&quot;НаборХарактеристик&quot;</span><span class="operator">)</span><span class="operator">;</span>
            НовыйЭлемент<span class="operator">.</span>ВидСравнения <span class="operator">=</span> ВидСравненияКомпоновкиДанных<span class="operator">.</span>Равно<span class="operator">;</span>
            НовыйЭлемент<span class="operator">.</span>ПравоеЗначение <span class="operator">=</span> Предопределенные<span class="operator">[</span>ТипОбъектаОтбора<span class="operator">]</span><span class="operator">;</span>
            НовыйЭлемент<span class="operator">.</span>Использование <span class="operator">=</span> <span class="keyword">Истина</span><span class="operator">;</span>
        <span class="keyword">КонецЕсли</span><span class="operator">;</span>
    <span class="keyword">КонецЕсли</span><span class="operator">;</span>
<span class="keyword">КонецПроцедуры</span></pre>

<p class="MsoNormalCxSpFirst">Подробнее рассмотрим особенности реализации
формы выбора. Для указания, из какого элемента справочника <span class="Term">НаборыХарактеристик</span>
следует получить список доступных характеристик, используется параметр формы <span class="Term">ОбъектОтбораВидовХарактеристик</span>.
Этот параметр присутствует у расширения управляемой формы для плана видов характеристик.
Если параметр формы указан (как это сделано при создании реквизита <span class="Term">ВидХарактеристики</span>
табличной части <span class="Term">Характеристики</span>
справочника <span class="Term">Номенклатура</span>),
то анализируется тип этого параметра и проверяется, есть или нет предопределенный
элемент справочника <span class="Term">НаборыХарактеристик</span>
для этого типа (в соответствии <span class="Term">Предопределенные</span>,
которое заполняется «вручную»). Если в соответствии задан требуемый тип (и,
следовательно, существует необходимый предопределенный элемент) –
выполняется установка отбора динамического списка с именем <span class="Term">НаборХарактеристик</span>.
Если параметр формы <span class="Term">ОбъектОтбораВидовХарактеристик</span>
не указан или для типа значения, указанного в параметре, не задано предопределенного
значения – отбор не устанавливается, и будет отображаться весь список.</p>

<p class="MsoNormalCxSpLast">Следует также обратить внимание на то, каким
образом сформирован запрос, выступающий в качестве источника динамического
списка, для реализации описанного поведения. Такое поведение достигается благодаря
тому, что отбор и соединение указаны как конструкции расширения языка запросов
для системы компоновки данных (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 10. система компоновки данных.htm?_=1496848987#_ref428962417">здесь</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>). Если отбор не
указан, то система компоновки данных (которая используется для работы
динамического списка) не будет включать в результирующий запрос ни соединение,
ни отбор. Следовательно, в список выбора попадут все виды характеристик. Такое
поведение будет использовано при добавлении вида характеристики в список
доступных характеристик.</p>

<p class="Lang-parameter">Расширение</p>

<p class="MsoNormal">Если в описанный пример необходимо добавить
поддержку характеристик для еще одного объекта метаданных, то следует выполнить
следующие действия:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
В справочнике <span class="Term">НаборыХарактеристик</span>
создать новый предопределенный элемент.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Для «нового» объекта метаданных следует
настроить связь между объектом конфигурации и справочником <span class="Term">НаборыХарактеристик</span>
(по аналогии с примером из данного раздела).</p>

<p class="MsoListBulletCxSpLast">&#9679; 
В форме выбора плана видов характеристик
добавить нужный тип в код заполнения соответствия <span class="Term">Предопределенные</span>.
Например, для справочника <span class="Term">Контрагенты</span>
добавляемая строчка будет выглядеть следующим образом (предопределенный элемент
справочника <span class="Term">НаборыХарактеристик</span>
будет называться <span class="Term">Контрагенты</span>):</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">Предопределенные<span class="operator">.</span>Вставить<span class="operator">(</span>Тип<span class="operator">(</span><span class="string">&quot;СправочникСсылка.Контрагенты&quot;</span><span class="operator">)</span><span class="operator">,</span> Справочники<span class="operator">.</span>НаборыХарактеристик<span class="operator">.</span>Контрагенты<span class="operator">)</span><span class="operator">;</span></pre>

<p class="MsoListBulletCxSpFirst">&#9679; 
Расширить тип измерения <span class="Term">Объект</span>
регистра сведений <span class="Term">ЗначенияХарактеристикОбъектов</span>,
добавив в него тип «нового» объекта метаданных.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
В режиме «1С:Предприятие» заполнить табличную
часть нового предопределенного элемента допустимыми видами характеристиками.</p>

<p class="Lang-parameter">Результат</p>

<p class="MsoNormal">Реализация данного примера позволит:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Вести единый список видов характеристик для всех
объектов метаданных, для которых нужно вести учет характеристик.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Формировать, в режиме «1С:Предприятия», для
каждого объекта метаданных список допустимых видов характеристик.</p>

<a id="TI000001726" class="bookmark" name="issogl4_5.13.2.3.5_пример_5"><h5>5.13.2.3.5. Пример 5</h5></a>

<p class="Lang-parameter"><a name="_ref294167069">Задача</a></p>

<p class="MsoNormalCxSpFirst">Если доступ к характеристикам и их значениям
должен ограничиваться с помощью ограничений доступа к данным (см. <a href="#_ref428962295">здесь</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>), наложенным на сам
объект (например, пользователь может изменять характеристики товара только
тогда, когда он может изменять сам товар), то можно воспользоваться хранением
характеристик (и их значений) в табличных частях справочников, документов и
других объектов, для которых доступно создание табличных частей.</p>

<p class="MsoNormalCxSpLast">При этом можно выделить несколько
особенностей такого способа хранения характеристик:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Если необходимо использовать один и тот же вид
характеристики для работы с несколькими объектами метаданных (например, характеристика
<span class="Term">Поставщик</span>
может быть и у товара и у контрагента), то хранение характеристик в табличной
части позволит использовать один элемент плана видов характеристик в обоих случаях.
В противном случае будет необходимо создать два вида характеристики и особым
образом указать, к какому объекту метаданных относится каждый вид характеристики
(см. <a href="#_ref294166913">здесь</a>).</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Полнотекстовый поиск будет находить сразу
конкретное значение объекта при поиске по значению какой-либо характеристики.
Если же значения характеристик хранятся в регистре сведений, то поиск будет
находить запись регистра сведений и только из этой записи можно будет получить
доступ к нужному объекту.</p>

<p class="Lang-parameter">Реализация</p>

<p class="MsoNormal">Схема, удовлетворяющая вышеописанным
требованиям, выглядит следующим образом:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
План видов характеристик хранит список видов
характеристик.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
В предопределенных данных специального объекта
хранятся наборы характеристик – т. е. перечень характеристик,
которые могут быть заданы объектам метаданных, для которых выбрана возможность
указания характеристик. Список доступных характеристик задается в режиме
«1С:Предприятие», а не в режиме Конфигуратор.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
В объекте, для которого имеется возможность
указания характеристик, существует специальная табличная часть, которая хранит
вид характеристики (из списка допустимых) и конкретное значение этой
характеристики.</p>

<p class="Picture"><IMG src="_img/img00177.gif?_=1496848987" WIDTH="800" ALT HEIGHT="535"></p>

<p class="MsoCaption">Рис. 178. Характеристики в
табличной части – общая схема</p>

<p class="MsoNormal">Рассмотрим схему подробнее на примере
характеристик для справочника <span class="Term">Номенклатура</span>.
План видов характеристик аналогичен предыдущим примерам. Для хранения значений
характеристик необходимо в справочнике <span class="Term">Номенклатура</span>
завести табличную часть (например, с именем <span class="Term">Характеристики</span>).
В данном случае табличная часть будет выступать аналогом регистра сведений,
который использовался в предыдущих примерах для хранения значений
характеристик. В табличной части необходимо создать два реквизита:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Term">ВидХарактеристики</span> – ссылка на
используемый план видов характеристик (тип <span class="Term">ПланВидовХарактеристикСсылка.
ХарактеристикиОбъектов</span>). В этом реквизите будет находиться ссылка
на характеристику.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Term">ЗначениеХарактеристики</span> – значение
характеристики (типа <span class="Term">Характеристика.ХарактеристикиОбъектов</span>).
Хранит значение одного из типов, выбранных в качестве типа значения вида характеристики,
указанной в реквизите <span class="Term">ВидХарактеристики</span>.</p>

<p class="Picture"><IMG src="_img/img00178.gif?_=1496848987" WIDTH="264" ALT HEIGHT="190"></p>

<p class="MsoCaption">Рис. 179. Хранение
характеристик и их значений в табличной части справочника</p>

<p class="RegularbeforepictureCxSpFirst">Настройка свойств реквизитов табличной части
будет происходить аналогично настройкам измерений и ресурсов регистра, используемого
для хранения значений характеристик.</p>

<p class="RegularbeforepictureCxSpLast">Для реквизита <span class="Term">ВидХарактеристики</span>
необходимо в свойство <span class="Interface">Связи параметров выбора</span> (см. <a href="#_ref397525399">здесь</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>) добавить параметр с
именем <span class="Term">ОбъектОтбораВидовХарактеристик</span>,
связанный с измерением <span class="Term">Ссылка</span>
и с режимом использования <span class="Term">Очищать</span>.
Такая настройка при выборе вида характеристики обеспечит отображение только тех
характеристик, которые указаны в соответствующем предопределенном элементе
справочника <span class="Term">НаборыХарактеристик</span>.</p>

<p class="Picture"><IMG src="_img/img00179.gif?_=1496848987" WIDTH="617" ALT HEIGHT="270"></p>

<p class="MsoCaption">Рис. 180. Настройки реквизита
справочника «ВидХарактеристики»</p>

<p class="MsoNormal">Для реквизита <span class="Term">ЗначениеХарактеристики</span>
следует:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
В свойство <span class="Interface">Связи параметров выбора</span> (см. <a href="#_ref397525399">здесь</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>) добавить параметр с
именем <span class="Term">Отбор.Владелец</span>,
связанный с реквизитом <span class="Term">Характеристики.ВидХарактеристики</span>
и с режимом использования <span class="Term">Очищать</span>.
Такая настройка при редактировании в форме обеспечит очистку значения характеристики
при смене вида характеристики.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Свойство <span class="Interface">Связь по типу</span> установить в значение <span class="Term">Характеристики.ВидХарактеристики</span>.</p>

<p class="MsoNormal">Организация хранения списка используемых
характеристик для каждого объекта метаданных (равно как и специальная форма
выбора плана видов характеристик) аналогично примеру, рассмотренному в примере
4.</p>

<p class="Lang-parameter">Расширение</p>

<p class="MsoNormal">Если в описанный пример необходимо добавить
поддержку характеристик для еще одного объекта метаданных, то следует выполнить
следующие действия:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
В «новый» объект добавить табличную часть <span class="Term">Характеристики</span>
по аналогии с примером из данного раздела (указав все необходимые свойства
реквизитов).</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
В справочнике <span class="Term">НаборыХарактеристик</span>
создать новый предопределенный элемент.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Для «нового» объекта метаданных следует
настроить связь между объектом конфигурации и справочником <span class="Term">НаборыХарактеристик</span>
(по аналогии с примером из данного раздела).</p>

<p class="MsoListBulletCxSpLast">&#9679; 
В форме выбора плана видов характеристик
необходимо добавить нужный тип в код заполнения соответствия <span class="Term">Предопределенные</span>.
Например, для справочника <span class="Term">Контрагенты</span>
добавляемая строчка будет выглядеть следующим образом (предопределенный элемент
справочника <span class="Term">НаборыХарактеристик</span>
будет называться <span class="Term">Контрагенты</span>):</p>

<a class="copy_source" href="#_top" onClick="return false">Копировать в буфер обмена</a>
<pre class="src_dev">Предопределенные<span class="operator">.</span>Вставить<span class="operator">(</span>Тип<span class="operator">(</span><span class="string">&quot;СправочникСсылка.Контрагенты&quot;</span><span class="operator">)</span><span class="operator">,</span> Справочники<span class="operator">.</span>НаборыХарактеристик<span class="operator">.</span>Контрагенты<span class="operator">)</span><span class="operator">;</span></pre>

<p class="Lang-parameter"><a name="_ref271024987">Результат</a></p>

<p class="MsoNormal">Реализация данного примера позволит:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Вести единый список видов характеристик для всех
объектов метаданных, для которых нужно вести учет характеристик.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Формировать, в режиме «1С:Предприятия», для
каждого объекта метаданных списки допустимых видов характеристик.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Применять ограничения доступа к данным, заданные
для объектов данных, также и для ограничения доступа к значениям характеристик.</p>

<a name="_ref302555317"></a><a id="TI000001727" class="bookmark" name="issogl2_5.13.3_субконто_аналитического_учета"><h3>5.13.3. Субконто аналитического учета</h3></a>

<p class="Regularbeforepicture">План
видов характеристик позволяет организовать аналитический учет на плане счетов
бухгалтерского учета. Для этого следует указать, какой план видов характеристик
содержит виды субконто бухгалтерского учета. Тогда для указания конкретного
вида субконто будет выбираться значение из указанного плана видов
характеристик. Для того чтобы задавать виды субконто на этапе разработки –
в плане видов характеристик следует указать предопределенные значения, если
виды субконто не задаются на этапе разработки, то предопределенные значения
можно не указывать.</p>

<p class="Picture"><IMG src="_img/img00180.gif?_=1496848987" WIDTH="658" ALT HEIGHT="381"></p>

<p class="MsoCaption">Рис.
181. Использование видов субконто</p>

<p class="MsoNormalCxSpFirst">На
рисунке видно, что счет <span class="Interface">40</span> «<span class="Interface">Выпуск продукции
(работ, услуг)</span>» имеет два вида субконто – <span class="Term">НоменклатурныеГруппы</span> и <span class="Term">ВидыСтоимости</span>, которые выбираются из набора
предопределенных видов характеристик, определенных в данном плане видов характеристик.</p>

<p class="MsoNormalCxSpLast">Более
подробно про организацию аналитического учета см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 11. бухгалтерский учет.htm?_=1496848987#_ref428962563">здесь</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>.</p>

<a id="TI000001728" class="bookmark" name="issogl2_5.13.4_использование_характеристик_в_прикладном_решении"><h3>5.13.4. Использование характеристик в прикладном решении</h3></a>

<a id="TI000001729" class="bookmark" name="issogl3_5.13.4.1_автоматически_генерируемые_формы"><h4>5.13.4.1. Автоматически генерируемые формы</h4></a>

<p class="MsoNormal">В
том случае, если объекты метаданных, участвующие в работе с характеристиками,
заданы с учетом всех рекомендаций (указанных выше), для просмотра и редактирования
видов и значений характеристик не требуется создавать дополнительных форм
(кроме примеров 4 и 5, где формы следует создавать вручную). Автоматически
генерируемые формы будут обладать нужными возможностями:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
В форме объекта, в панели навигации, будет команда
перехода к списку его характеристик;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Отображение списка видов характеристик;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Отображение списка значений характеристик;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Редактирование значений характеристик (с
автоматическим указанием необходимых отборов и связей редактируемых значений).</p>

<p class="Note"><span class="Note">Примечание.</span> Выбор в качестве объекта хранения
табличной части справочника (документа и т. д.) не приведет к возможности
автоматического формирования списка выбора при добавлении характеристик для
конкретного объекта. Формирование такого списка следует выполнять программным
способом. Пример такого формирования см. <a href="#_ref294267692">здесь</a>.</p>

<a name="_ref302575031"></a><a id="TI000001730" class="bookmark" name="issogl3_5.13.4.2_использование_характеристик_в_отчетах"><h4>5.13.4.2. Использование характеристик в отчетах</h4></a>

<p class="MsoNormal">Характеристики
можно использовать в отчетах для следующих целей:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Отображение в отчете (выбранные поля),</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Использование в отборе,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Использование для сортировки,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Использование для группировки,</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Использование в условном оформлении.</p>

<p class="Regularbeforepicture">Для
того чтобы в отчете можно было использовать характеристики объекта метаданных,
необходимо, чтобы в списке доступных полей схемы компоновки данных
присутствовало поле с типом ссылки на этот объект метаданных и у этого поля <span class="Bold">не должен</span> стоять <span class="Bold">запрет</span> на
использование реквизитов поля.</p>

<p class="Picture"><IMG src="_img/img00181.gif?_=1496848987" WIDTH="570" ALT HEIGHT="254"></p>

<p class="MsoCaption">Рис.
182. Ограничение реквизитов поля</p>

<p class="Regularbeforepicture">Рассмотрим
простой отчет, в котором присутствует поле <span class="Term">Товар</span>, имеющее тип <span class="Term">СправочникСсылка.Номенклатура</span>. У элемента справочника
<span class="Term">Номенклатура</span> существуют реквизиты и
стандартные реквизиты.</p>

<p class="Picture"><a name="_ref302575038"></a><IMG src="_img/img00182.gif?_=1496848987" WIDTH="406" ALT HEIGHT="215"></p>

<p class="MsoCaption">Рис. 183. Реквизиты и
стандартные реквизиты справочника «Номенклатура»</p>

<p class="Regularbeforepicture">В режиме 1С:Предприятие для этого
справочника было создано несколько видов характеристик.</p>

<p class="Picture"><IMG src="_img/img00183.gif?_=1496848987" WIDTH="416" ALT HEIGHT="238"></p>

<p class="MsoCaption">Рис. 184. Виды характеристик
для справочника «Номенклатура»</p>

<p class="Regularbeforepicture">При возникновении необходимости использовать
какие-либо характеристики (например, <span class="Interface">Жирность</span> и <span class="Interface">Размер</span>) в качестве поля отчета, в списке реквизитов поля
отчета <span class="Interface">Товар</span> будут представлены реквизиты, стандартные
реквизиты и список видов характеристик, созданных для справочника <span class="Term">Номенклатура</span>.</p>

<p class="Picture"><IMG src="_img/img00184.gif?_=1496848987" WIDTH="431" ALT HEIGHT="500"></p>

<p class="MsoCaption"><a name="_ref303070525">Рис. </a>185. Указание характеристик в качестве полей отчета</p>

<p class="MsoNormalCxSpFirst">Необходимо найти нужный вид характеристики в
списке реквизитов (см. <a href="#_ref303070525">рис.
185</a>) и добавить его в список выбранных полей.</p>

<p class="MsoNormalCxSpLast">Аналогичным образом характеристики
используются в других компонентах системы компоновки данных (отбор, сортировка,
группировка, условное оформление).</p>

<a name="_ref441855168"></a><a id="TI000001731" class="bookmark" name="issogl3_5.13.4.3_использование_характеристик_в_динамических_списках"><h4>5.13.4.3. Использование характеристик в динамических списках</h4></a>

<a id="TI000001735" class="bookmark" name="issogl4_5.13.4.3.1_общая_информация"><h5>5.13.4.3.1. Общая информация</h5></a>

<p class="Regularbeforepicture">Характеристики
можно использовать в динамических списках для следующих целей:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Использование в отборе,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Использование для сортировки,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Использование для группировки,</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Использование в условном оформлении,</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Отображение в отдельной колонке списка.</p>

<p class="MsoNormalCxSpFirst">При
этом настройка отображения колонки в динамическом списке выполняется в диалоге
настройки формы (<span class="Interface">Все действия – Изменить
форму</span>), а отбор, сортировка, группировка и условное оформление
настраиваются в диалоге настройки списка (<span class="Interface">Все действия – Настроить
список</span>).</p>

<p class="MsoNormalCxSpLast">Следует
помнить, что основным способом использования характеристик в динамических
списках является использование «через точку» (т.е. в отборах, группировках и т. д.),
однако в случае необходимости имеется возможность включать отображение характеристик
и в основную таблицу динамического списка (подробнее см. <a href="#_ref303338396">здесь</a>).</p>

<a id="TI000001732" class="bookmark" name="issogl4_5.13.4.3.2_использование_в_отборах_и_т_д."><h5>5.13.4.3.2. Использование в отборах и т. д.</h5></a>

<p class="Regularbeforepicture">Использование
характеристик для настройки списка требует наличия в списке доступных полей
динамического списка колонки ссылочного типа необходимого объекта метаданных.</p>

<p class="Picture"><IMG src="_img/img00185.gif?_=1496848987" WIDTH="692" ALT HEIGHT="312"></p>

<p class="MsoCaption">Рис.
186. Настройка динамического списка</p>

<p class="MsoNormal">Для
того чтобы использовать значение характеристики в настройке динамического
списка (отборе, сортировке и т. д.), следует выполнить следующие
действия (в режиме 1С:Предприятие):</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Открыть диалог настройки динамического списка;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
«Раскрыть» ссылочное поле (в списке доступных
полей);</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Выбрать необходимую характеристику для использования
в необходимой настройке.</p>

<p class="Picture"><IMG src="_img/img00186.gif?_=1496848987" WIDTH="671" ALT HEIGHT="630"></p>

<p class="MsoCaption">Рис.
187. Использование характеристик</p>

<a name="_ref303338396"></a><a id="TI000001733" class="bookmark" name="issogl4_5.13.4.3.3_включение_в_состав_колонок"><h5>5.13.4.3.3. Включение в состав колонок</h5></a>

<p class="MsoNormal">Для
отображения характеристик в колонках динамического списка, необходимо в составе
колонок списка обеспечить наличие колонки (возможно, невидимой) связанной с
данными ссылочного типа необходимого объекта метаданных.</p>

<p class="Picture"><IMG src="_img/img00187.gif?_=1496848987" WIDTH="636" ALT HEIGHT="600"></p>

<p class="MsoCaption">Рис.
188. Добавление колонки динамического списка</p>

<p class="MsoNormal">Для
того чтобы добавить поле, отображающее значение какой-либо характеристики, следует
выполнить следующие действия (в режиме 1С:Предприятие):</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Открыть диалог настройки формы;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Встать курсором на скрытое поле ссылочного типа;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Нажать кнопку <span class="Interface">Добавить поля</span>;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Выбрать необходимый вид характеристики.</p>

<p class="Regularbeforepicture">Теперь
добавленные виды характеристик будут отображаться колонками динамического
списка.</p>

<p class="Picture"><IMG src="_img/img00188.gif?_=1496848987" WIDTH="695" ALT HEIGHT="374"></p>

<p class="MsoCaption">Рис.
189. Добавление колонки с характеристиками</p>

<a name="_ref223761989"></a><a id="TI000000343" class="bookmark" name="issogl1_5.14_регистры"><h2>5.14. Регистры</h2></a>

<a id="TI000001708" class="bookmark" name="issogl2_5.14.1_общая_информация"><h3>5.14.1. Общая информация</h3></a>

<p class="MsoNormalCxSpFirst">Регистры «1С:Предприятия» предназначены для
хранения и обработки различной информации, отражающей хозяйственную или
организационную деятельность предприятия.</p>

<p class="MsoNormalCxSpMiddle">Объекты информационной базы типа <span class="Interface">Документ</span> и <span class="Interface">Справочник</span> предназначены для хранения информации об
объектах предметной области, таких как сотрудники, товары, материалы, валюты.
Соответственно, каждый объект базы данных отражает соответствующий объект
предметной области.</p>

<p class="MsoNormalCxSpMiddle">В регистрах обычно хранится информация об
изменении состояний объектов или другая информация, не отражающая непосредственно
объекты предметной области. Например, в регистрах может храниться информация о
курсах валют или информация о приходе и расходе товаров.</p>

<p class="MsoNormalCxSpMiddle">Объект базы данных существует независимо от
значений его реквизитов и имеет самостоятельную ценность. Например, у сотрудника
может поменяться фамилия, номер паспорта и любые другие реквизиты. При этом он
будет оставаться тем же самым физическим лицом.</p>

<p class="MsoNormalCxSpMiddle">После удаления объект нельзя создать заново.
Даже если завести все его реквизиты в соответствии с удаленным объектом, это
будет уже другой объект. Для объекта система хранит внутренний
идентификатор – ссылку. Ссылка уникальна в пределах всей информационной базы.
Двух объектов с одинаковыми ссылками не может существовать на всем протяжении
жизни информационной базы. Ссылки удаленных объектов не присваиваются вновь
созданным объектам. Система предоставляет возможность хранить в полях базы
данных ссылки на объекты базы данных.</p>

<p class="MsoNormalCxSpMiddle">Единицей хранения информации в регистрах
является запись. Прикладная нагрузка записи регистра определяется исключительно
хранящимися в ней данными. Например, сама запись о курсе валюты не представляет
собой ничего существенного. Она не соответствует никакому объекту в предметной
области. Существенным является только то, что в ней содержится валюта, дата и
курс валюты, установленный на эту дату. Можно удалить эту запись и внести такую
же – это не повлияет на логику работы системы. Соответственно, у записей
регистров не существует ссылок, и в полях базы данных нельзя хранить ссылки на
записи регистров.</p>

<p class="MsoNormalCxSpLast">В данной главе приведено описание регистров
сведений и регистров накоплений. О регистрах бухгалтерии см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 11. бухгалтерский учет.htm?_=1496848987#_ref32671868">здесь</a>, а о регистрах расчета см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 12. периодические расчеты.htm?_=1496848987#_ref425412412">здесь</a>.</p>

<a id="TI000000344" class="bookmark" name="issogl2_5.14.2_регистры_сведений"><h3>5.14.2. Регистры сведений</h3></a>

<a name="_ref325041969"></a><a name="_ref325041968"></a><a id="TI000000345" class="bookmark" name="issogl3_5.14.2.1_общая_информация_о_регистрах_сведений"><h4>5.14.2.1. Общая информация о регистрах сведений</h4></a>

<p class="MsoNormalCxSpFirst">Основная
задача регистра сведений – хранить существенную для прикладной задачи
информацию, состав которой развернут по определенной комбинации значений и при
необходимости развернут во времени. Например, если мы хотим хранить информацию
о ценах конкурентов на продаваемые нами товары, то собранная информация о ценах
разворачивается по товарам и конкурентам. А если мы хотим отслеживать динамику
изменений цен и будем заносить их периодически, то хранимая информация разворачивается
также и во времени.</p>

<p class="MsoNormalCxSpMiddle">В
системе «1С:Предприятие» для хранения подобных данных и работы с ними
используется специальный механизм – регистр сведений.</p>

<p class="MsoNormalCxSpMiddle">Регистр
сведений фактически представляет собой в общем случае многомерный массив
данных, необходимый для реализации функции, которая может выдать нужную информацию
по определенному набору аргументов. Аргументы функции называются <span class="Bold">измерениями</span>, а результат функции – <span class="Bold">ресурсами</span>.
В приведенном выше примере двумерный регистр <span class="Term">ЦеныКонкурентов</span>
будет содержать измерения <span class="Term">Конкурент</span> и <span class="Term">Товар</span> и ресурс <span class="Term">Цена</span>. Ресурсов
может быть больше чем один: например, можно хранить оптовую и розничную цены.</p>

<p class="MsoNormalCxSpMiddle">Помимо
измерений и ресурсов для регистра сведений может быть создан набор реквизитов.
Реквизиты позволяют включать в записи регистров различную дополнительную информацию.
Реквизиты не влияют на значения ресурсов регистра и могут использоваться для
анализа записей регистра.</p>

<p class="MsoNormalCxSpMiddle">Регистры
сведений, информация в которых развернута во времени, называются <span class="Bold">периодическими</span>. Для периодических регистров сведений система
поддерживает такие стандартные операции, как получение наиболее позднего или
наиболее раннего значения (например, получение последней введенной цены по
конкретному товару и конкретному конкуренту), а также получение среза наиболее
поздних или ранних значений. Например, могут быть получены все последние
введенные цены по различным товарам и конкурентам.</p>

<p class="MsoNormalCxSpMiddle">Для
разворота информации во времени используется поле <span class="Term">Период</span> регистра.
Оно не вносится в качестве измерения, а добавляется системой автоматически при
создании периодического регистра.</p>

<p class="MsoNormalCxSpMiddle">Для
регистров сведений можно не создавать измерений. В этом случае регистр будет
представлять набор периодических данных. Такие регистры могут использоваться,
например, для хранения фамилий различных должностных лиц, чьи подписи располагаются
в документах. В процессе ведения хозяйственной деятельности документы создаются
и подписываются должностными лицами, имеющими право подписи в определенный
момент времени.  <a href="#_ref214868259">здесь</a> показывалось, как использовать значения констант для
подобных целей. Недостатком данного приема в случае смены значения константы
является то, что при открытии архивного документа будет указана новая фамилия
ответственного лица, выбранная из константы. В таких случаях нужно использовать
не константу, а периодический регистр сведений, который хранит данные об
изменениях, а в документах используется выбор значений из регистра сведений по
дате документа.</p>

<p class="MsoNormalCxSpMiddle">Наиболее
характерный пример одномерной периодической величины – курс валюты. При
выполнении каких-либо расчетов (например, при определении рублевой цены пересчетом
валютной цены по курсу) важно знать его величину на момент вычисления.</p>

<p class="MsoNormalCxSpLast">Особенно
важно знать курс валюты при выполнении каких-либо расчетов задним числом –
в этом случае необходимо «вспоминать» курс за уже прошедшие даты.</p>

<p class="Regularbeforetable">Чтобы
иметь возможность получать подобные сведения, необходимо создать таблицу,
графами в которой были бы, очевидно, наименование валюты, дата курса и сама величина
курса. Строки такой таблицы содержат курс нескольких валют на конкретную дату.</p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0">
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpFirst"><b>Дата</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Валюта</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Курс</b></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">31.10.2008</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">USD</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">26,5430</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">31.10.2008</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">EUR</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">35,0447</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">01.11.2008</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">USD</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">27,0981</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">01.11.2008</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">EUR</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">34,4092</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">02.11.2008</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">USD</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">27,0793</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">02.11.2008</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">EUR</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">34,4828</p>
  </td>
  
 </tr>
</table>

<p class="MsoNormalCxSpLast">При
обращении к подобной таблице следует иметь в виду, что в колонке <span class="Term">Курс</span> хранятся конкретные величины курса на
определенную дату и подразумевается, что на все последующие даты, до новой
величины курса, курс не меняется. Поэтому для получения курса на какую-то промежуточную
дату следует брать величину курса на ближайшую предыдущую дату, на которую существует
записанный курс.</p>

<p class="Regularbeforetable">Также
следует понимать, что различные значения валют в колонке <span class="Term">Валюта</span> фактически означают, что ведется параллельная
история курсов нескольких валют. Иначе говоря, приведенную выше таблицу можно
отобразить по-другому.</p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0">
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpFirst"><b>Дата</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Курс USD</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Курс EUR</b></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">31.10.2008</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">26,5430</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">35,0447</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">01.11.2008</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">27,0981</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">34,4092</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">02.11.2008</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">27,0793</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">34,4828</p>
  </td>
  
 </tr>
</table>

<p class="MsoNormalCxSpMiddle">Подобных
колонок курсов в таблице может быть столько, сколько курсов разных валют
требуется хранить.</p>

<p class="MsoNormalCxSpMiddle">Если
регистр непериодический, то поле <span class="Term">Период</span> для него не создается. В приведенном
примере регистр <span class="Term">ЦеныКонкурентов</span> может
быть непериодическим, если мы не хотим хранить историю изменения цен, а хотим
иметь только актуальные цены. Тогда функция регистра сможет ответить на вопрос:
«Какая сейчас цена у такого-то конкурента на такой-то товар», но не сможет ответить
на вопрос: «Какая была цена у такого-то конкурента на такой-то товар в начале
года».</p>

<p class="MsoNormalCxSpMiddle">Из
описанных принципов работы регистра сведений вытекает то, что в системе может
быть только одна запись с определенным набором и периодом измерений. Действительно,
по одному товару одного конкурента может быть только одна цена. Если по какой-либо
причине мы можем получить несколько цен и хотим занести эту информацию в базу
данных, то нам нужно создать еще одно измерение для хранения того значения, по
которому эти цены могут различаться. Например, можно завести измерение <span class="Term">ИсточникИнформации</span>.
Тогда можно будет вводить цены конкурентов в разрезе источников.</p>

<p class="MsoNormalCxSpMiddle">Уникальность
записей по набору измерений принципиально отличает регистры сведений от
регистров накоплений, которые позволяют вводить несколько записей с одинаковым
значением измерений и периодом.</p>

<p class="MsoNormalCxSpMiddle">Если
при работе с регистром получение данных на самый первый или самый последний
(текущий) моменты времени являются наиболее частыми вариантами использования,
то для таких регистров имеет смысл разрешить системе поддерживать итоги для
среза последних (свойство <span class="Interface">Разрешить итоги: срез последних</span>) или среза первых
(свойство <span class="Interface">Разрешить итоги: срез
первых</span>). В качестве примера такого использования можно привести регистр
с отпускными ценами на товары. Цена товара может меняться с течением времени,
но получение текущей цены является наиболее распространенным запросом к этому
регистру.</p>

<p class="MsoNormalCxSpLast">Итоги
регистра сведений будут использоваться в случае выполнения всех следующих
условий:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Для регистра разрешено использование итогов в
конфигурации;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Для регистра разрешено использование итогов в
режиме «1С:Предприятие»;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Получаются данные на самую первую дату (срез
первых) или самую последнюю (текущую) дату (срез последних), без указания
значения периода;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Условия для виртуальных таблиц <span class="Term">СрезПервых</span> и <span class="Term">СрезПоследних</span> задаются только на значения
измерений и разделителей, находящихся в режиме <span class="Interface">Независимо и совместно</span>;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
В ограничениях доступа к данным используются
только измерения и разделителей, находящихся в режиме <span class="Interface">Независимо и совместно</span>.</p>

<p class="MsoNormal">Если
все условия не выполняются, то для получения информации из регистра будет
использоваться обычный запрос.</p>

<a name="_ref330981198"></a><a id="TI000000346" class="bookmark" name="issogl3_5.14.2.2_записи_регистра_сведений"><h4>5.14.2.2. Записи регистра сведений</h4></a>

<p class="MsoNormal">Строки
регистра сведений, содержащие информацию о значениях ресурсов для определенных
значений измерений и конкретного периода, называются <span class="Bold">записями</span>.
Для идентификации записи регистра сведений служит <span class="Bold">ключ записи</span>.
Записи в регистр сведений можно вносить двумя способами:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
вручную,</p>

<p class="MsoListBulletCxSpLast">&#9679; 
документами.</p>

<p class="MsoNormalCxSpFirst">Выбор
режима внесения записей см. <a href="#_ref24791172">здесь</a>.</p>

<p class="MsoNormalCxSpMiddle">Эти
два варианта влияют на способ внесения информации, а не на основную логику
работы регистра.</p>

<p class="MsoNormalCxSpMiddle">Документ,
которым вносится запись в регистр сведений, называется регистратором.</p>

<p class="MsoNormalCxSpMiddle">Регистры,
записываемые независимо, могут свободно редактироваться вручную или средствами
встроенного языка. При этом если измерение такого регистра назначено как «ведущее»
и значением измерения является ссылка на объект базы данных, то будет
считаться, что запись регистра имеет смысл, только пока существует этот объект.
Например, если назначить ведущим измерение <span class="Term">Конкурент</span>, то
считается, что запись имеет смысл только как информация по данному конкуренту.
Соответственно, при удалении данных конкурента записи по нему будут удалены
автоматически.</p>

<p class="MsoNormalCxSpMiddle">Если
регистр записывается регистратором, то это значит, что записи будут жестко
подчинены регистраторам – документам. Обычно это значит, что записи будут
порождаться при проведении документов. Соответственно, при удалении документа
записи будут удаляться автоматически. В отличие от ведущих измерений,
регистратор может быть только один.</p>

<p class="MsoNormalCxSpLast">Следует
помнить, что ключ записи регистра сведений, созданный с помощью метода <span class="Term">ПустойКлюч()</span>, не равен ключу записи регистра
сведений, значения измерений которого равны значениям по умолчанию для «своих»
типов.</p>

<a name="_ref24791172"></a><a name="_ref24791168"></a><a id="TI000000347" class="bookmark" name="issogl3_5.14.2.3_редактирование_регистра_сведений"><h4>5.14.2.3. Редактирование регистра сведений</h4></a>

<p class="MsoNormalCxSpFirst">Для
работы с регистрами сведений предназначена ветвь <span class="Interface">Регистры сведений</span>
дерева конфигурации.</p>

<p class="MsoNormalCxSpMiddle">При
редактировании регистра определяются его свойства, разрабатывается структура
регистра: создаются наборы измерений, ресурсов и реквизитов регистра, создаются
экранные формы просмотра и редактирования записей регистра и, если необходимо,
печатные формы регистра (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 27. инструменты разработки.htm?_=1496848987#_ref425413158">здесь</a>).</p>

<p class="MsoNormalCxSpLast">В
этом разделе в дополнение к общим свойствам объектов конфигурации будут описаны
уникальные свойства регистра сведений.</p>

<p class="Regularbeforepicture">Регистр
редактируется в окне редактирования <span class="Interface">Регистр сведений</span>.
Свойства регистра собраны на закладках.</p>

<p class="Picture"><IMG src="_img/img00189.gif?_=1496848987" WIDTH="492" ALT HEIGHT="492"></p>

<p class="MsoCaption">Рис.
190. Редактор регистра сведений</p>

<p class="MsoNormalCxSpFirst"><span class="Interface">Периодичность</span> – это свойство позволяет указать, с какой
периодичностью регистр должен сохранять значения ресурсов.</p>

<p class="MsoNormalCxSpMiddle">Это
свойство напрямую влияет на возможность получения значений ресурсов регистра
методами встроенного языка. Для непериодического регистра можно получить только
последнее введенное значение ресурсов регистра – информация за предыдущие
периоды в таком регистре отсутствует. Для периодических регистров нельзя
получить значение с меньшей периодичностью, чем установленная периодичность
регистра.</p>

<p class="MsoNormalCxSpMiddle">Периодичность
не зависит от способа редактирования регистра.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Режим записи</span> – свойство определяет, каким образом будут
вноситься записи: независимо (например, вручную) или будут подчиняться
регистратору (например, документами).</p>

<p class="MsoNormalCxSpMiddle">Если
для регистра указано, что он периодический и выбран независимый режим записи,
то становится доступным свойство <span class="Interface">Основной отбор по
периоду</span>. Если флажок установлен, то наряду с основными измерениями и реквизитами
регистра, участвующими в отборе записей при регистрации изменений, можно
указывать отбор по полю <span class="Interface">Период</span>.</p>

<p class="MsoNormalCxSpLast">На
закладке <span class="Interface">Данные</span>
формируется структура данных регистра. Создаются измерения и ресурсы, а также
реквизиты.</p>

<p class="Regularbeforepicture">На
закладке <span class="Interface">Регистраторы</span>
производится управление списком регистраторов. Закладка доступна, если в свойстве
<span class="Interface">Режим записи</span>
установлено <span class="Interface">Подчинение
регистратору</span>.</p>

<p class="Picture"><IMG src="_img/img00190.gif?_=1496848987" WIDTH="492" ALT HEIGHT="490"></p>

<p class="MsoCaption">Рис.
191. Задание регистраторов регистра сведений</p>

<p class="MsoNormalCxSpFirst">В
верхнем списке производится управление списком регистраторов (устанавливаются
или снимаются отметки), а в нижнем списке приводится список отмеченных объектов,
являющихся регистраторами.</p>

<p class="MsoNormalCxSpMiddle">Аналогично
описанному для регистров сведений механизму управления списком регистраторов
производится управление списком регистраторов для других видов регистров.</p>

<p class="MsoNormalCxSpMiddle">Особенностью
ресурсов регистров сведений является широкая типизация данных, в отличие от
регистров других типов, где ресурсы могут быть только числовыми.</p>

<p class="MsoNormalCxSpLast">Описание
приемов создания форм и макетов см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 27. инструменты разработки.htm?_=1496848987#_ref425413183">здесь</a>.</p>

<a id="TI000000348" class="bookmark" name="issogl3_5.14.2.4_разработка_структуры_регистра_сведений"><h4>5.14.2.4. Разработка структуры регистра сведений</h4></a>

<p class="MsoNormalCxSpFirst">Разработка
структуры регистра заключается в создании наборов измерений, ресурсов и
реквизитов.</p>

<p class="MsoNormalCxSpLast">Для
управления списком измерений, ресурсов и реквизитов регистра и редактирования
их свойств служат управляющие элементы групп <span class="Interface">Измерения</span>, <span class="Interface">Ресурсы</span>, <span class="Interface">Реквизиты</span> окна
редактирования <span class="Interface">Регистр</span>. С
точки зрения настройки элементы этих групп одинаковы. Описание порядка
использования этих управляющих элементов см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 2. работа с конфигурацией.htm?_=1496848987#_ref216100517">здесь</a>.</p>

<a id="TI000000349" class="bookmark" name="issogl4_5.14.2.4.1_свойства_измерения_ресурса_реквизита_регистра_сведений"><h5>5.14.2.4.1. Свойства измерения (ресурса, реквизита) регистра сведений</h5></a>

<p class="MsoNormalCxSpFirst">Свойства
измерений, ресурсов и реквизитов редактируются при помощи палитры свойств. В
основном они совпадают с общими свойствами объектов конфигурации. Ниже в этом
разделе будут описаны уникальные свойства измерений, ресурсов и реквизитов.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Ведущее</span> – установка этого свойства имеет смысл для
измерений, тип данных которых – ссылка на объект конфигурации. В этом
случае считается, что запись регистра сведений имеет смысл, только пока
существует этот объект. При удалении объекта записи по нему будут автоматически
удалены из регистра.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Запрет пустых значений</span> – установка этого флажка
включает механизм запрета записи регистра с пустым значением измерения.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Индексировать</span> – для измерений свойство доступно для
редактирования, если измерение не является ведущим. Для измерений, ресурсов и
реквизитов с установленным свойством <span class="Interface">Индексировать</span>
создается отдельный индекс, что увеличивает производительность при работе с регистром.
Для ведущих измерений индекс создается всегда.</p>

<p class="MsoNormalCxSpLast">При
просмотре регистра в режиме 1С:Предприятие существует возможность сортировать
записи регистра по индексированным измерениям, ресурсам и реквизитам.
Необходимое число форм для просмотра и редактирования регистра должно быть
создано в процессе разработки конфигурации.</p>

<a id="TI000000350" class="bookmark" name="issogl4_5.14.2.4.2_упорядочивание_списка_измерений_регистра_сведений"><h5>5.14.2.4.2. Упорядочивание списка измерений регистра сведений</h5></a>

<p class="MsoNormalCxSpFirst">Порядок
расстановки измерений регистра сведений имеет важное значение. Измерения, к
которым необходим быстрый доступ, следует располагать в начале списка
измерений.</p>

<p class="MsoNormalCxSpMiddle">Последовательность
расстановки измерений регистра сведений влияет на возможность применения
методов встроенного языка, использующих позиционный доступ к измерениям.</p>

<p class="MsoNormalCxSpLast">Также
необходимо иметь в виду, что изменение порядка измерений требует
реструктуризации информационной базы.</p>

<a id="TI000000351" class="bookmark" name="issogl2_5.14.3_регистры_накопления"><h3>5.14.3. Регистры накопления</h3></a>

<p class="MsoNormalCxSpFirst">Регистры
в системе «1С:Предприятие» используются для накопления информации о наличии и
движении каких-либо величин – материальных, денежных и других. Вся информация
о хозяйственных операциях, которая вводится с использованием документов или
формируется при помощи расчетов, должна быть накоплена в регистрах. Тогда эту
информацию можно будет извлечь, проанализировать и представить пользователю в
виде отчетных форм.</p>

<p class="MsoNormalCxSpLast">В
этом разделе будет рассказано о понятии регистр накопления и даны сведения об
основах использования.</p>

<a id="TI000000352" class="bookmark" name="issogl3_5.14.3.1_общая_информация_о_регистрах_накопления"><h4>5.14.3.1. Общая информация о регистрах накопления</h4></a>

<p class="MsoNormalCxSpFirst">Регистр
накопления – это объект конфигурации, предназначенный для хранения
движений регистра и итоговой информации.</p>

<p class="MsoNormalCxSpMiddle">Проблема,
которая обычно возникает при создании «хранилища» сводной информации, состоит в
определении его структуры: в каких разрезах следует накапливать сводные данные,
чтобы затем можно было извлечь нужную информацию без утомительной обработки.
Система «1С:Предприятие» использует простые и в то же время гибкие средства для
создания регистров накопления: достаточно просто задать, в каких разрезах и
какие данные требуется хранить в регистре, а система сама обеспечит запись и
получение нужных данных простыми языковыми средствами.</p>

<p class="MsoNormalCxSpMiddle">Методы
встроенного языка позволяют получить остатки регистра накопления на заданный
момент времени. Есть возможность фильтрации по значениям измерений, а также получения
остатков в разрезе других измерений.</p>

<p class="MsoNormalCxSpLast">Рассмотрим
пример. Предположим, что в создаваемой программе торгово-складского учета
требуется хранить сведения о количестве и стоимости каждого товара на каждом
складе. В дальнейшем предполагается получать информацию такого типа: «остаток
конкретного товара на конкретном складе», «остаток конкретного товара всего, на
всех складах», «стоимость всех товаров на конкретном складе».</p>

<p class="Regularbeforepicture">В
идеологии системы «1С:Предприятие» регистр накопления такого вида представляет
собой прямоугольную систему координат, на одной оси которой находятся склады,
на другой – товары, а на пересечении конкретного склада и конкретного
товара находятся цифры количества товара и стоимости товара.</p>

<p class="Picture"><IMG src="_img/img00191.gif?_=1496848987" WIDTH="406" ALT HEIGHT="350"></p>

<p class="MsoCaption">Рис.
192. Регистр накопления</p>

<p class="MsoNormal">Физический
смысл регистра накопления сформулировать довольно сложно, и, скорее всего,
регистр накопления не имеет материального аналога.</p>

<p class="Note"><span class="Note">ВНИМАНИЕ!</span> Поэтому определим, что регистр накопления –
это n-мерная система координат, в узлах которой хранятся совокупные данные. Оси
такой системы координат будем называть измерениями регистра, а хранящиеся в
узлах данные – ресурсами регистра.</p>

<a id="TI000000353" class="bookmark" name="issogl3_5.14.3.2_движения_регистра_накопления"><h4>5.14.3.2. Движения регистра накопления</h4></a>

<p class="MsoNormalCxSpFirst">Изменение
состояния регистров накопления выполняется обычно при проведении документа.
Процедура проведения документа расположена в модуле документа и содержит алгоритм
формирования сведений об изменениях в регистрах, которые необходимо выполнить
при проведении документа. Эти сведения называются движениями регистра. Механизм
подсчета итогов использует движения регистров для выполнения непосредственных
изменений в регистрах накопления. Таким образом, движения регистров содержат
только приращения (со знаком плюс или минус) значений ресурсов регистра, а не
итоговые величины значений.</p>

<p class="MsoNormalCxSpMiddle">Специалист,
выполняющий конфигурирование системы, имеет возможность предоставить конечному
пользователю средства просмотра движений регистров. Конфигуратор позволяет
создавать экранные и печатные формы для просмотра и анализа движений регистров.</p>

<p class="MsoNormalCxSpMiddle">В
процессе разработки конфигурации можно создать неограниченное количество
регистров накопления. Однако следует учитывать, что запись изменений в большом
числе регистров при проведении документа может вызывать уменьшение скорости
работы системы в целом.</p>

<p class="MsoNormalCxSpLast">Помимо
измерений и ресурсов для регистра накопления может быть создан набор
реквизитов. Реквизиты позволяют включать в движения регистров различную дополнительную
информацию. Реквизиты не влияют на значения ресурсов регистра и могут использоваться
для анализа движений регистра.</p>

<a name="_ref400441818"></a><a id="TI000000354" class="bookmark" name="issogl3_5.14.3.3_итоги_регистра_накопления"><h4>5.14.3.3. Итоги регистра накопления</h4></a>

<p class="MsoNormal">Как
было написано выше, изменения в регистрах вносятся <span class="Bold">движениями</span>
регистра. Движения регистров оказывают влияние на его итоги. <span class="Bold">Итоги</span> –
это сводная информация регистров, которая получается путем суммирования значений,
вносимых движениями регистров.</p>

<p class="Regularbeforetable">Итоги
регистра накопления можно представить в виде таблицы с количеством колонок,
равным сумме измерений и ресурсов регистра накопления. Количество строк в таблице
итогов регистра накопления будет зависеть только от количества уникальных
значений измерений, и не будет зависеть от количества уникальных значений ресурсов.</p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0">
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpFirst"><b>Товар</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Склад</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Количество</b></p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle"><b>Сумма</b></p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Стол</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Розничный</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">10</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">5 000</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Стол</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Оптовый</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">5</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">2 500</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Шкаф</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Временный</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">7</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">10 500</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Шкаф</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Оптовый</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">2</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">3 000</p>
  </td>
  
 </tr>
 <tr>
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Шкаф</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">Розничный</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">10</p>
  </td>
  
  <td valign="top">
  <p class="MsoNormalCxSpMiddle">а</p>
  </td>
  
 </tr>
</table>

<p class="MsoNormalCxSpMiddle">Из
таблицы видно, что измерение <span class="Term">Товар</span> принимает значения <span class="Interface">Стол</span>, <span class="Interface">Шкаф</span>, а
измерение <span class="Term">Склад</span> – <span class="Interface">Временный</span>, <span class="Interface">Оптовый</span> и <span class="Interface">Розничный</span>. В
колонках <span class="Term">Количество</span> и <span class="Term">Сумма</span>, отражающих ресурсы регистра накопления,
записано количество и сумма каждого товара на каждом складе.</p>

<p class="MsoNormalCxSpLast">В
отличие от движений регистра, нет возможности непосредственно просматривать
итоги регистра накопления. Для обращения к итогам в конфигурации может быть
создано необходимое число отчетов, которые будут обращаться к итогам и выдавать
их в виде товарных отчетов, складских карточек и ведомостей и т. д.</p>

<a name="_ref14259165"></a><a id="TI000000355" class="bookmark" name="issogl3_5.14.3.4_регистры_остатков_и_регистры_оборотов"><h4>5.14.3.4. Регистры остатков и регистры оборотов</h4></a>

<p class="MsoNormalCxSpFirst">В
системе «1С:Предприятие» возможно использование регистров накопления двух
типов: регистры остатков и регистры оборотов.</p>

<p class="MsoNormalCxSpMiddle">Для
регистра остатков методы встроенного языка позволяют получить остатки регистра
накопления на заданный момент времени. Есть возможность фильтрации по значениям
измерений, а также получения остатков в разрезе других измерений.</p>

<p class="MsoNormalCxSpMiddle">Регистры
оборотов предназначены для хранения информации, для которой понятие остатка
лишено смысла, например, сумм продаж в разрезе покупателей.</p>

<p class="MsoNormalCxSpMiddle">Рассмотрим
в качестве примера отслеживание взаиморасчетов с покупателями товаров, которые
производит или продает предприятие (потребителями услуг, оказываемых предприятием,
и так далее). Можно утверждать, что ведение подобного учета – обязательная
часть общего учета на любом предприятии.</p>

<p class="MsoNormalCxSpMiddle">Для
того чтобы оперативно получать информацию о взаимной задолженности предприятия
и покупателя, потребуется регистр <span class="Interface">Взаиморасчеты</span>,
в котором для каждого покупателя будет храниться сумма задолженности. При
совершении хозяйственной операции состояние регистра будет соответствующим
образом изменяться, каждый раз отражая текущее состояние взаиморасчетов.
Регистр <span class="Interface">Взаиморасчеты</span> –
это регистр остатков.</p>

<p class="MsoNormalCxSpMiddle">Однако
быстро получить информацию об объеме закупок, совершенных данным покупателем за
какой-либо период времени, из регистра <span class="Interface">Взаиморасчеты</span>
нельзя – он такой информации не хранит. Поэтому придется приложить дополнительные
усилия для ее получения: например, можно включить в структуру регистра реквизит
<span class="Interface">Контрагент</span>, а
затем отобрать движения регистра по нужному контрагенту и вычислить общую сумму
закупок. Но когда необходимо получать эти сведения оперативно (например, при
достижении определенного объема закупок покупателю должна предоставляться
скидка), такой способ, конечно же, не подходит.</p>

<p class="MsoNormalCxSpMiddle">В
этом случае решением проблемы может быть использование регистра оборотов. В
таком регистре – назовем его <span class="Interface">Объем закупок</span> –
для каждого покупателя будет храниться информация об объеме закупок (об обороте
покупателя).</p>

<p class="MsoNormalCxSpMiddle">Теперь
при совершении хозяйственных операций необходимо будет изменять не только
состояние регистра <span class="Interface">Взаиморасчеты</span>,
но и регистр <span class="Interface">Объем закупок</span>.
В этот регистр при совершении клиентом каждой покупки будет заноситься информация
о сумме покупки. В результате в регистре <span class="Interface">Объем закупок</span>
будет постоянно накапливаться информация об общем объеме закупок клиента.</p>

<p class="MsoNormalCxSpMiddle">Из
всего сказанного выше можно сделать выводы о преимуществах использования
регистров.</p>

<p class="MsoNormalCxSpMiddle">Прежде
всего, регистры используются для хранения информации, к которой требуется
получать оперативный доступ. «Уровень оперативности» и, соответственно, целесообразность
использования регистра должен определять специалист, выполняющий
конфигурирование системы «1С:Предприятие», в соответствии с требованиями
пользователей системы.</p>

<p class="MsoNormalCxSpLast">Также
можно сказать, что регистры позволяют получать наиболее достоверную информацию
о состоянии средств. Так как процессы сохранения документа и записи изменений в
регистрах разделены (допускается сохранение документа без его проведения),
может возникать расхождение между данными документов и информацией в регистрах.
Но регистр, в отличие от документа, является хранилищем итоговой информации,
поэтому именно запись изменений в регистры служит подтверждением того, что хозяйственная
операция совершена.</p>

<a name="_ref149211992"></a><a id="TI000000356" class="bookmark" name="issogl3_5.14.3.5_основные_свойства_регистра_накопления"><h4>5.14.3.5. Основные свойства регистра накопления</h4></a>

<p class="MsoNormalCxSpFirst">Для
работы с регистрами накопления предназначена ветвь <span class="Interface">Регистры накопления</span>
дерева конфигурации.</p>

<p class="MsoNormalCxSpMiddle">Редактирование
свойств объектов типа <span class="Interface">Регистр накопления</span>
и создание подчиненных объектов выполняются в окне редактирования (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 2. работа с конфигурацией.htm?_=1496848987#_ref141014392">здесь</a>).</p>

<p class="MsoNormalCxSpLast">При
редактировании регистра накопления определяется его вид, разрабатывается
структура регистра:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
создаются наборы измерений, ресурсов и
реквизитов регистра;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
если необходимо, создаются экранные и печатные
формы просмотра движений регистра.</p>

<p class="Note">Примечание.<span class="Interface"> </span>В качестве типа измерения регистра накопления не могут
выступать значения типа <span class="Term">УникальныйИдентификатор</span>,
ДвоичныеДанные,
строка неограниченной длины.</p>

<p class="MsoNormalCxSpFirst">В
этом разделе будут описаны уникальные свойства регистра накопления, в
дополнение к общим свойствам объектов.</p>

<p class="MsoNormalCxSpLast"><span class="Interface">Вид регистра</span> – если регистр предназначен:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
для хранения остатков (выберите из списка
значение <span class="Term">Остатки</span>);</p>

<p class="MsoListBulletCxSpLast">&#9679; 
хранения оборотов – значение <span class="Term">Обороты</span>.</p>

<p class="MsoNormalCxSpFirst">Описание
разницы между регистрами остатков и оборотов см. <a href="#_ref14259165">здесь</a>.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Основная форма списка</span> – для регистра может быть
создано несколько форм для просмотра его движений. Если форм для ввода и выбора
несколько, то в свойстве <span class="Interface">Основная форма списка</span>
можно указать форму, которая будет использоваться по умолчанию.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Разрешить разделение итогов</span> – если флажок
установлен в значение <span class="Term">Истина</span>
(значение по умолчанию), то будет задействован механизм разделителя
итогов, который обеспечивает более высокую параллельность работы при записи в
регистр. При одновременной записи движений несколькими сеансами система не
будет обновлять одни и те же записи итогов, а будет записывать изменения итогов
отдельно. При получении итогов эти данные складываются. Таким образом,
обеспечивается и поддержание в актуальном состоянии итогов (для быстрого получения
отчетов, например), и параллельность записи движений. Этот режим требует
дополнительных расходов ресурсов (например, увеличивается количество данных в
итоговых таблицах). Поэтому свойства есть и в конфигурации, и в языке для
управления этим режимом.</p>

<p class="MsoNormalCxSpMiddle">Записи
будут «размножаться» только при параллельно выполняемых транзакциях. Их
количество по каждой комбинации измерений будет зависеть от максимального количества
одновременно выполняемых транзакций. При пересчете итогов накопленные отдельные
записи сворачиваются.</p>

<p class="MsoNormalCxSpMiddle">Режим
разделения итогов может быть изменен пользователем в режиме работы
1С:Предприятие. По умолчанию свойство включено.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Использование в итогах</span> – если флажок установлен в
значение <span class="Term">Ложь</span>, измерение исключается из хранимых итогов
регистра.</p>

<p class="MsoNormalCxSpLast">Также
для регистра может быть создано несколько форм для просмотра его движений. Если
форм для ввода и выбора несколько, то в свойстве <span class="Interface">Основная форма списка</span>
можно указать форму, которая будет использоваться по умолчанию.</p>

<a id="TI000000357" class="bookmark" name="issogl3_5.14.3.6_агрегаты_оборотных_регистров_накопления"><h4>5.14.3.6. Агрегаты оборотных регистров накопления</h4></a>

<p class="MsoNormal">Для
повышения производительности системы в случае использования оборотных регистров
накопления предназначен механизм <span class="Bold">агрегатов</span>. Можно
сказать, что агрегаты – это специализированные хранилища, предназначенные
для использования в рамках механизмов запросов «1С:Предприятия».</p>

<a id="TI000000358" class="bookmark" name="issogl4_5.14.3.6.1_основные_понятия"><h5>5.14.3.6.1. Основные понятия</h5></a>

<p class="MsoNormalCxSpFirst">При
дальнейшем рассмотрении работы с агрегатами будут использоваться некоторые
термины, которые мы определим в этом разделе.</p>

<p class="MsoNormalCxSpMiddle"><span class="Bold">Агрегат</span> – физическая таблица базы данных, хранящая
сводные обороты всех ресурсов регистра по выбранным измерениям с выбранной
периодичностью и за определенный период. В регистре, для которого формируются
агрегаты, не может быть более 30 измерений.</p>

<p class="MsoNormalCxSpLast">Агрегат
характеризуется следующими параметрами:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
<span class="Bold">Размер агрегата</span> – это
размер таблицы агрегата. <span class="Bold">Оценочный показатель</span>.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
<span class="Bold">Эффект</span> – ожидаемое
уменьшение среднего времени выполнения запроса с использованием агрегатов.
Например, если эффект агрегата равен 90 %, то это означает, что среднее
время выполнения запроса с использованием агрегатов будет на 90 % меньше,
чем среднее время выполнения того же запроса, но с использованием итогов. <span class="Bold">Оценочный показатель</span>.</p>

<p class="MsoNormalCxSpFirst"><span class="Bold">Период агрегата</span> – интервал дат, данные за который
помещены в агрегат.</p>

<p class="MsoNormalCxSpMiddle"><span class="Bold">Периодичность агрегата</span> – периодичность, с которой в
агрегате хранятся данные.</p>

<p class="MsoNormalCxSpMiddle"><span class="Bold">Список агрегатов</span> – набор агрегатов, заданный на этапе
конфигурирования. Список может быть сформирован либо вручную, либо загружен из
файла, полученного в результате расчета оптимальных агрегатов.</p>

<p class="MsoNormalCxSpMiddle"><span class="Bold">Статистика использования</span> – информация о том, какие запросы
(измерения, период, периодичность) выполняются к регистру. Используется для
перестроения агрегатов и получения оптимального списка агрегатов.</p>

<p class="MsoNormalCxSpMiddle"><span class="Bold">Оптимальный список агрегатов</span> – список агрегатов,
соотношение размера и эффекта которых является оптимальным для текущего
состояния регистра (его движений и статистики использования).</p>

<p class="MsoNormalCxSpMiddle"><span class="Bold">Режим агрегатов/итогов</span> – если установлен режим
агрегатов, то при выполнении запросов будут использоваться данные агрегатов;
если установлен режим итогов, то при выполнении запросов будут использоваться
данные итогов.</p>

<p class="MsoNormalCxSpLast"><span class="Bold">Использование агрегатов</span> – выключение использования
агрегатов означает, что при изменении движений не будет выполняться никаких
операций над агрегатами. Выключать использование агрегатов имеет смысл на время
массированной загрузки данных в регистры, однако последующее включение
использования агрегатов может привести к ресурсоемкому процессу актуализации
агрегатов (если изменяемые данные находятся внутри периода агрегатов).</p>

<a name="_ref342479571"></a><a id="TI000000359" class="bookmark" name="issogl4_5.14.3.6.2_общая_схема_работы_с_агрегатами"><h5>5.14.3.6.2. Общая схема работы с агрегатами</h5></a>

<p class="Regularbeforepicture">Приведем
общую схему работы с агрегатами:</p>

<p class="Picture"><IMG src="_img/img00192.gif?_=1496848987" WIDTH="323" ALT HEIGHT="457"></p>

<p class="MsoCaption">Рис.
193. Общая схема работы с агрегатами (клиент-серверный вариант)</p>

<p class="Note"><span class="Note">Примечание.</span>
Данная схема описывает работу с одним регистром. Если необходимо работать с
несколькими регистрами, то операцию, выполняемую на каждом шаге, следует
выполнить для каждого регистра.</p>

<p class="MsoNormal">Более
подробно распишем приведенную схему работы:</p>

<p class="MsoListNumber">1.  Нужно
создать в конфигураторе необходимый список агрегатов. Данный шаг не является
обязательным. Создание агрегатов в режиме конфигуратора может использоваться в
том случае, если требуется обеспечить постоянное использование какого-либо
агрегата в любой информационной базе.</p>

<p class="Indentlist">Если
агрегаты решено создавать в конфигураторе, то это можно сделать несколькими
способами:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
Рассчитать (например, в режиме итогов) и
загрузить оптимальные агрегаты (метод <span class="Term">ОпределитьОптимальныеАгрегаты()</span>). Если
агрегаты ранее не использовались, то список оптимальных агрегатов будет получен
только на основании таблицы движений регистра. Если агрегаты использовались, то
список оптимальных агрегатов будет построен на основании таблицы движений и статистики
использования.</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
Создать собственный список агрегатов на
основании анализа запросов к регистру.</p>

<p class="MsoListNumberCxSpFirst">2. 
После обновления конфигурации базы данных
включить для регистра режим агрегатов (метод <span class="Term">УстановитьРежимАгрегатов()</span>).</p>

<p class="MsoListNumberCxSpLast">3. 
Далее необходимо периодически выполнять
перестроение агрегатов (метод <span class="Term">ПерестроитьИспользованиеАгрегатов()</span>). При
выполнении этой операции система добавляет нужные агрегаты и удаляет
неиспользуемые. Данная операция выполняется в том случае, если текущий список
агрегатов не является оптимальным. Удаление производится только для тех
агрегатов, которые создавались во время выполнения операции перестроения.
Агрегаты, созданные в конфигураторе, автоматически не удаляются.</p>

<p class="Indentlist">Если
агрегаты созданы в конфигураторе, то при выполнении операции перестроения с
ними будут выполняться следующие действия:</p>

<p class="MsoListBullet2CxSpFirst">&#9679; 
Агрегат будет включен в том случае, если вариант
использования агрегата установлен в значение <span class="Term">Всегда</span>. Оценка эффективности использования
такого агрегата не влияет на его использование.</p>

<p class="MsoListBullet2CxSpLast">&#9679; 
Агрегат будет включен на основании оценки
эффективности использования в том случае, если режим использования агрегата
установлен в значение <span class="Term">Авто</span>. Использование данного агрегата
оценивается наряду с агрегатами, которые система создает автоматически. Если
автоматически создаваемый агрегат окажется эффективнее агрегата, созданного в
конфигураторе с режимом использования <span class="Term">Авто</span>, то будет использоваться автоматически
создаваемый агрегат.</p>

<p class="MsoListNumberCxSpFirst">4. 
Затем необходимо выполнить обновление агрегатов
(метод <span class="Term">ОбновитьАгрегаты()</span>). Обновление агрегатов
производит перенос данных из таблиц движений выбранного регистра в
соответствующие таблицы агрегатов. Переносятся те движения, которые были
созданы в таблице движений после предыдущего обновления агрегатов.</p>

<p class="MsoListNumberCxSpLast">5. 
Далее следует накопить статистику использования
созданных агрегатов. Для этого следует в течение
некоторого интервала времени (например, 1 месяц) выполнять типовые задачи, в
которых используются данные из регистра, для которого был включен режим
агрегатов. В процессе работы необходимо регулярно выполнять обновление
агрегатов. По истечению этого периода следует выполнить перестроение
агрегатов (шаг 3) и регулярно повторять операции шагов 3 – 5.</p>

<p class="MsoNormal">Рассмотренная
схема описывает подход к работе с агрегатами регистра в клиент-серверном
варианте.</p>

<p class="Regularbeforepicture">В
файловом варианте использования системы, работа с агрегатами выглядит несколько
по-иному:</p>

<p class="Picture"><IMG src="_img/img00193.gif?_=1496848987" WIDTH="548" ALT HEIGHT="571"></p>

<p class="MsoCaption"><a name="_ref342402801">Рис. </a>194. Общая схема
работы с агрегатами (файловый вариант)</p>

<p class="MsoNormal">Основное отличие этой схемы от общей схемы работы с
агрегатами (см. <a href="#_ref342402801">рис.
194</a>) заключается в следующем (будут описаны только
отличия):</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
На шаге 1 список агрегатов в конфигураторе
следует создавать обязательно.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Шаг 6. Пересчет оптимальных агрегатов (метод <span class="Term">ОпределитьОптимальныеАгрегаты()</span>)
следует выполнять с некоторой регулярностью (например, 1 месяц). Во время этого
периода (1 месяц) следует выполнять типовые задачи, в которых используются
данные из регистра, для которого был включен режим агрегатов. В процессе работы
необходимо регулярно выполнять обновление агрегатов.</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Шаг 7. После получения нового списка оптимальных
агрегатов, необходимо определить, требуется изменение списка агрегатов в
метаданных конфигурации или нет. Если изменение не требуется, то следует
продолжить работу, перейдя на шаг 3.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Шаг 8. Если необходимо выполнить обновление
списка агрегатов, то следует выполнить загрузку необходимых (или всех)
агрегатов (из списка оптимальных). Затем нужно обновить конфигурацию базы
данных (произойдет реструктуризация информационной базы) и потом продолжить
работу с шага 3.</p>

<p class="MsoNormal">Рекомендации
по выполнению каждого из рассмотренных шагов рассматриваются в следующем
разделе.</p>

<a name="_ref342479581"></a><a id="TI000000360" class="bookmark" name="issogl4_5.14.3.6.3_рекомендации_по_использованию_агрегатов"><h5>5.14.3.6.3. Рекомендации по использованию агрегатов</h5></a>

<p class="Lang">Формирование
списка агрегатов</p>

<p class="MsoNormal">Формирование
списка агрегатов можно выполнять несколькими способами. Если агрегаты
планируется включить для регистра, уже существующего в конфигурации, но для
которого не было включено использование агрегатов, то это можно сделать следующими
способами:</p>

<p class="MsoListNumberCxSpFirst">1.  Если
в регистре отсутствуют движения или движений мало (не более 2–3 тысяч записей),
следует выполнить анализ запросов, которые используют выбранный регистр, и
получить перечень часто используемых комбинаций измерений, отборов, периодов
запросов и периодичности получения данных. На основании полученной информации
создать список агрегатов, при этом постараться минимизировать количество
используемых агрегатов.</p>

<p class="MsoListNumberCxSpLast">2. 
Если в регистре присутствует существенное
количество записей (более 3 тысяч), то можно выполнить расчет оптимальных
агрегатов на основании данных регистра с помощью метода <span class="Term">ОпределитьОптимальныеАгрегаты()</span> и загрузить
полученный список агрегатов.</p>

<p class="MsoNormal">Если
для используемого регистра был включен режим агрегатов и включено использование
агрегатов (т. е. каким-то образом сформирован первоначальный список
агрегатов), то можно также получить список оптимальных агрегатов и загрузить его
в конфигураторе. Отличие этого способа от способа номер 2 заключается в том,
что в этом случае для расчета оптимальных агрегатов будет использоваться
статистика, которую ведет система. Поэтому полученный список агрегатов будет
более эффективен, нежели получение оптимальных агрегатов для регистра, у
которого не был включен режим агрегатов и использование агрегатов.</p>

<p class="Note"><span class="Note">Примечание.</span>
Использовать метод получения оптимальных агрегатов имеет смысл в том случае,
если в таблице движений регистра находятся не менее 3–5 тысяч записей. На
меньшем количестве записей построенный список агрегатов может оказаться
неэффективным.</p>

<p class="Lang">Выполнение
перестроения</p>

<p class="MsoNormalCxSpFirst">Операцию
перестроения агрегатов следует выполнять не реже, чем операцию расчета списка
оптимальных агрегатов. При этом данная операция не предполагает изменения
списка агрегатов, а старается «обойтись» только существующими агрегатами.</p>

<p class="MsoNormalCxSpMiddle">Также
следует помнить, что операция перестроения эффективна в том случае, если для ее
работы накоплен достаточно большой объем статистических данных.</p>

<p class="MsoNormalCxSpLast">Однако
рекомендации по периоду перестроения в общем случае дать затруднительно, но
можно отметить основные факторы:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
есть вероятность изменения характера данных в
регистре;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
есть подозрения на изменение характера запросов
(что приведет к изменению накапливаемой статистики).</p>

<p class="MsoNormal">При
выполнении операции следует указать два параметра:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Максимальный относительный размер – задает
ограничение на размер формируемого списка агрегатов (в процентах от таблицы
движений). Если параметр равен 0, то ограничения на размер агрегатов не задаются.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Минимальный эффект от перестроения – процент,
на который необходимо увеличить эффект старого списка при перестроении. Если
новый список увеличивает эффект на заданное значение, то метод реально
перестраивает список. Если параметр не указан или равен 0, это означает
отсутствие требований к минимальному эффекту.</p>

<p class="MsoNormal">Также
происходит перестроение текущего списка агрегатов, если он больше, чем параметр
<span class="Interface">Максимальный
относительный размер</span>, или удалось построить список с эффективностью
большей как минимум на значение параметра <span class="Interface">Минимальный эффект</span>.
В противном случае список агрегатов не перестраивается.</p>

<p class="Note"><span class="Note">Примечание.</span>
Операция перестроения является достаточно длительной и ресурсоемкой процедурой.
Не рекомендуется выполнять ее во время интенсивной работы с информационной
базой других пользователей.</p>

<p class="Lang">Выполнение
операции обновления агрегатов</p>

<p class="MsoNormalCxSpFirst">Данную
операцию рекомендуется выполнять чаще, чем выполняется операция перестроения
агрегатов.</p>

<p class="MsoNormalCxSpLast">Обновление
агрегатов может выполняться двумя способами:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Полностью обновляются все агрегаты, отмеченные
как используемые. Это может занимать существенное время.</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Так называемое «порционное» заполнение. В этом
случае за одно обращение обновляется период, равный 1 месяцу в 10 агрегатах.</p>

<p class="MsoNormal">При
выполнении операции следует указать параметр <span class="Interface">Максимальный
относительный размер</span>. Он задает ограничение на размер формируемого
списка агрегатов (в процентах от таблицы движений). Если параметр равен 0, то
ограничения на размер агрегатов не задаются.</p>

<p class="NoteCxSpFirst"><span class="Note">Примечание.</span> Желательно выполнять данную операцию в
периоды минимальной нагрузки на информационную базу.</p>

<p class="NoteCxSpLast"><span class="Note">Совет.</span> Рекомендуется использовать режим разделения
итогов при использовании агрегатов, особенно если обновление агрегатов
выполняется регламентным заданием на фоне интенсивного проведения документов,
связанных с регистром, у которого выполняется обновление агрегатов.</p>

<p class="Lang">Использование
агрегатов</p>

<p class="MsoNormalCxSpFirst">Для
определения агрегата, который будет использоваться для запроса, будет
использован алгоритм, который будет описан далее.</p>

<p class="MsoNormalCxSpMiddle">В
запросе выделяются используемые измерения регистра, потом подбирается перечень
агрегатов, которые содержат все используемые измерения, и наиболее полно
соответствуют запросу по периодичности и периоду. Из этого списка выбирается
агрегат, с минимальным размером. Именно этот агрегат и будет использоваться.</p>

<p class="MsoNormalCxSpMiddle">В
запросе может использоваться агрегат, периодичность которого меньше
периодичности, требуемой в запросе. В этом случае необходимые данные будут
получены суммированием данных из меньших периодов.</p>

<p class="MsoNormalCxSpLast">Возможна
ситуация, когда период, заданный в запросе, не совпадает с периодом агрегатов.
В этом случае для исполнения запроса возможно использование двух агрегатов.
Рассмотрим пример. В информационной базе существуют два агрегата, закрывающие
весь период запроса:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
С периодичностью месяц;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
С периодичностью день.</p>

<p class="MsoNormal">Запрос
исполняется за период с 15 сентября по 15 ноября. В этом случае будут
использованы два агрегата:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
Агрегат с периодичностью месяц будет использован
для получения данных за период с 1 октября по 31 октября;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
Агрегат с периодичностью день будет использован
для получения данных за периоды с 15 сентября по 30 сентября и с 1 ноября по 15
ноября;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
Данные по разным агрегатам будут суммированы для
получения окончательного результата.</p>

<p class="MsoNormal">Виртуальная
таблица оборотов регистра, для которого включен режим агрегатов, всегда
содержит актуальные данные.</p>

<p class="Lang">Выполнение
расчета оптимальных агрегатов</p>

<p class="MsoNormal">Данная
операция может выполняться по необходимости, она не является регулярной. Ниже
приведен перечень ситуаций, при наступлении которых рекомендуется выполнить
расчет списка оптимальных агрегатов:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
по истечении некоторого времени после <span class="Bold">первичного</span> формирования списка агрегатов;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
в случае <span class="Bold">существенного</span>
падения производительности при текущем списке агрегатов;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
при <span class="Bold">существенном</span>
изменении характера данных;</p>

<p class="MsoListBulletCxSpMiddle">&#9679; 
при изменении состава запросов к регистру;</p>

<p class="MsoListBulletCxSpLast">&#9679; 
если есть вероятность, что текущий список
агрегатов перестал быть оптимальным.</p>

<p class="NoteCxSpFirst"><span class="Note">Примечание 1.</span> Для клиент-серверного варианта данная
операция не является обязательной. Формирование оптимальных агрегатов (при
необходимости) выполняется автоматически во время выполнения перестроения
агрегатов.</p>

<p class="NoteCxSpLast"><span class="Note">Примечание 2.</span> Данная операция является наиболее
ресурсоемкой и продолжительной. Настоятельно рекомендуется выполнять ее только
в тех случаях, когда с информационной базой не работают другие пользователи.</p>

<p class="Lang">Использование
регламентных заданий при работе с агрегатами</p>

<p class="MsoNormal">Операции
перестроения и обновления агрегатов можно выполнять с помощью регламентных
заданий. Необходимо соблюдать следующие рекомендации при составлении расписания
выполнения регламентных заданий:</p>

<p class="MsoListBulletCxSpFirst">&#9679; 
для регламентного задания, выполняющего операции
перестроения и обновления, рекомендуется заполнять свойство регламентного
задания <span class="Interface">Ключ</span>
(см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 18. механизм заданий.htm?_=1496848987#_ref416778994">здесь</a>).</p>

<p class="MsoListBulletCxSpLast">&#9679; 
рекомендуется задавать расписание регламентных
заданий перестроения и обновления так, чтобы не возникла ситуация, когда
операции обновления и перестроения будут выполняться в одно время.</p>

<p class="MsoNormal">Соблюдение
рекомендаций приведет к предотвращению параллельного выполнения операций
перестроения и обновления, что положительно скажется на производительности.</p>

<a id="TI000000361" class="bookmark" name="issogl4_5.14.3.6.4_редактирование_агрегатов"><h5>5.14.3.6.4. Редактирование агрегатов</h5></a>

<p class="Regularbeforepicture">Создание
и редактирование списка агрегатов возможно только для оборотного регистра
накопления (свойство <span class="Interface">Вид регистра</span>
имеет значение <span class="Interface">Обороты</span>). Для
вызова конструктора агрегатов следует использовать команду <span class="Interface">Открыть агрегаты</span>
контекстного меню соответствующего регистра.</p>

<p class="Picture"><IMG src="_img/img00194.gif?_=1496848987" WIDTH="351" ALT HEIGHT="202"></p>

<p class="MsoCaption">Рис.
195. Вызов конструктора агрегатов</p>

<p class="Regularbeforepicture">Затем
откроется окно конструктора агрегатов, в котором можно управлять агрегатами
оборотного регистра накопления. Агрегатами можно управлять вручную, а также
можно загрузить (для этого предназначена специальная кнопка командной панели) заранее
подготовленный список оптимальных агрегатов.</p>

<p class="Picture"><IMG src="_img/img00195.gif?_=1496848987" WIDTH="445" ALT HEIGHT="212"></p>

<p class="MsoCaption"><a name="_ref222816001">Рис. </a>196. Конструктор
агрегатов</p>

<p class="MsoNormalCxSpFirst">При
создании агрегатов можно указать вариант использования. Если стоит <span class="Interface">Авто</span> (по
умолчанию), то система будет сама определять необходимость использования
данного агрегата во время выполнения операции перестроения агрегатов. Если
стоит <span class="Interface">Всегда</span>, значит
система будет использовать агрегат всегда.</p>

<p class="MsoNormalCxSpMiddle">Колонка
<span class="Interface">Периодичность</span>
определяет минимальный период времени, за который агрегат будет хранить итоги
по выбранным измерениям. Допускается иметь несколько агрегатов с одинаковым
набором измерений, но с разной периодичностью. Не следует злоупотреблять
количеством агрегатов. Большое количество агрегатов может привести к излишнему
увеличению размера базы данных, но не приведет к повышению производительности
работы запросов.</p>

<p class="MsoNormalCxSpLast">В
правой части окна можно указать, какие измерения входят в редактируемый
агрегат. Агрегат может включать произвольное количество измерений (но не более
30) и не включать их вовсе. В этом случае система хранит сводные обороты по
регистру с заданной периодичностью.</p>

<p class="Regularbeforepicture">Если
существует xml-файл, содержащий список оптимальных агрегатов, то можно
выполнить загрузку такого списка. Для этого стоит воспользоваться специальной
командой конструктора агрегатов (см. <a href="#_ref222816001">рис.196</a>) и выбрать там предварительно подготовленный файл.</p>

<p class="Picture"><IMG src="_img/img00196.gif?_=1496848987" WIDTH="507" ALT HEIGHT="273"></p>

<p class="MsoCaption">Рис.
197. Загрузка списка оптимальных агрегатов</p>

<p class="MsoNormal">Система
выполнит сравнение списка из файла и текущего списка агрегатов и цветом отметит
те агрегаты, которые рекомендуется добавить в систему (из списка <span class="Interface">Оптимальные агрегаты</span>),
и агрегаты, которые рекомендуется удалить из системы (список <span class="Interface">Агрегаты</span>).
Предложенные рекомендации можно не выполнять или выполнять в ограниченном
объеме.</p>

<a id="TI000000362" class="bookmark" name="issogl3_5.14.3.7_разработка_структуры_регистра_накопления"><h4>5.14.3.7. Разработка структуры регистра накопления</h4></a>

<p class="MsoNormal">Разработка
структуры регистра заключается в создании наборов измерений, ресурсов и
реквизитов на закладке <span class="Interface">Данные</span> (см. <A href="/db/content/v8310doc/src/руководство разработчика/глава 2. работа с конфигурацией.htm?_=1496848987#_ref414277435">здесь</a>).</p>

<a id="TI000000363" class="bookmark" name="issogl4_5.14.3.7.1_свойства_измерения_ресурса_реквизита_регистра_накопления"><h5>5.14.3.7.1. Свойства измерения (ресурса, реквизита) регистра накопления</h5></a>

<p class="MsoNormalCxSpFirst">Свойства
измерений, ресурсов и реквизитов редактируются при помощи палитры свойств. В
основном они совпадают с общими свойствами объектов. Ниже в этом разделе будут
описаны уникальные свойства измерений, ресурсов и реквизитов.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Тип</span>. В отличие от измерений и реквизитов, объекты вида <span class="Interface">Ресурс</span> могут
хранить только один тип данных – <span class="Term">Число</span>.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Запрет незаполненных значений</span> – установка этого
флажка для измерения включает механизм запрета записи движений регистра с
пустым значением измерения.</p>

<p class="MsoNormalCxSpMiddle"><span class="Interface">Индексировать</span> – данное свойство можно установить
только для измерений. Установка свойства позволяет ускорить выполнение
операций, обращающихся к данным регистра, например, если выбираются движения по
конкретному значению данного измерения. К таким операциям относятся запросы с
условием равенства данного измерения указанному значению, а также временный
расчет и методы обхода движений объекта <span class="Term">РегистрНакопления</span>
встроенного языка, использующие отбор по определенному значению измерения.</p>

<p class="MsoNormalCxSpLast">Использование в итогах –
если свойство не установлено, измерения исключаются из хранимых итогов регистра
(свойство используется только для измерений оборотного регистра). Если такое
измерение используется в запросе или в условии виртуальной таблицы, то виртуальная
таблица не будет использовать хранимые итоги, а будет рассчитывать данные
только по таблице движений.</p>

<a id="TI000000364" class="bookmark" name="issogl4_5.14.3.7.2_упорядочивание_списка_измерений_регистра_накопления"><h5>5.14.3.7.2. Упорядочивание списка измерений регистра накопления</h5></a>

<p class="MsoNormalCxSpFirst">Порядок
расстановки измерений регистра накопления влияет на оптимизацию доступа к
итогам регистра: измерения, к которым необходим быстрый доступ, следует располагать
в начале списка измерений.</p>

<p class="MsoNormalCxSpMiddle"> </p>

<br>		<script type="text/javascript">listenCopy('zeroclipboard.swf');</script>
	</body>
</html>